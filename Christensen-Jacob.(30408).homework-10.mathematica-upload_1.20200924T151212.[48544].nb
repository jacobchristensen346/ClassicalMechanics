(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    314728,       6248]
NotebookOptionsPosition[    306672,       6110]
NotebookOutlinePosition[    307164,       6128]
CellTagsIndexPosition[    307121,       6125]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Homework 10 ", "Title",
 CellChangeTimes->{{3.4439858941798363`*^9, 3.4439859020550375`*^9}, 
   3.79804552592933*^9},ExpressionUUID->"03504ee0-a335-4586-9728-\
cdabf76233d7"],

Cell[CellGroupData[{

Cell["Problem 10.1", "Section",
 CellChangeTimes->{{3.4439859076176805`*^9, 
  3.4439859142272243`*^9}},ExpressionUUID->"fabcc29e-c76c-4637-84cf-\
29451a53a2db"],

Cell["\<\
Eight charges are located at coordinates (\[PlusMinus]1 m,\[PlusMinus]1 m,\
\[PlusMinus]1 m), thus forming a cube. The charges are all Q=+0.024 C. \
\>", "Text",
 CellChangeTimes->{{3.443985921743042*^9, 3.443985939290366*^9}, {
  3.450136056921875*^9, 3.450136086046875*^9}, {3.797706279554044*^9, 
  3.797706492540663*^9}, {3.797787951355494*^9, 3.797787959614665*^9}, {
  3.7977968396350026`*^9, 
  3.797796840073363*^9}},ExpressionUUID->"2030b586-ab53-46ef-9831-\
88e869ddb7d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part A", "Section",
 CellChangeTimes->{{3.450136076640625*^9, 
  3.450136078015625*^9}},ExpressionUUID->"7280d9ee-2085-462a-976c-\
5c78b25abe17"],

Cell["\<\
Calculate the total potential energy of the system, using the pairwise \
potential energy U=kq1q2/r.\
\>", "Text",
 CellChangeTimes->{{3.450136092125*^9, 3.4501360935*^9}, {
  3.7977052343436193`*^9, 3.7977052371796446`*^9}, {3.7977804309056997`*^9, 
  3.797780451326576*^9}},ExpressionUUID->"dd678ecb-0900-4f6d-8973-\
8cdc5f5305be"],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.4451890458370037`*^9, 3.445189050649473*^9}, {
   3.446567878458479*^9, 3.446567906302229*^9}, 3.6203921547283525`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"bb68a9d5-c885-4578-be60-d6d80632de4f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"8.99", "*", 
    SuperscriptBox["10", "9"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Q", "=", 
   RowBox[{"2.4", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "2"}]]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4439859406654015`*^9, 3.4439859738537507`*^9}, {
  3.443986085028472*^9, 3.4439861151229925`*^9}, {3.443986151780181*^9, 
  3.4439862019064636`*^9}, {3.4451890371339345`*^9, 3.44518905338383*^9}, {
  3.797780465153352*^9, 3.797780466720877*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"ca104d47-14b0-48d0-a077-245513a6ab0b"],

Cell["The location of the eight charges.", "Text",
 CellChangeTimes->{
  3.443986214766168*^9, {3.4439862455950823`*^9, 
   3.4439862470482445`*^9}},ExpressionUUID->"a0fb640f-f1f4-4d03-b397-\
fe11c5d7b244"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r1", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"r2", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"r3", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"r4", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"r5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"r6", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"r7", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"r8", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4439862541578016`*^9, 3.443986268439417*^9}, {
  3.8099650685331583`*^9, 3.809965069518121*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"4d14a0a7-d1bd-49f5-bb4f-1934a7b4407c"],

Cell[TextData[{
 "\nHint: The total potential energy can be calculated as U = U12 + U13 + U14 \
+ U15 + U16 + U17 + U18 + U23 + U24 + U25 + U26 + U27 + U28 + ..., but it is \
a bit painful to enumerate every single pairwise potential energy. Instead, \
note that there are only three distinct distances between charges (along the \
edges of the cube, the face diagonals, and the body diagonals). You can count \
the number of pairs separated by each of these distances and then multiply ",
 StyleBox["kQ",
  FontSlant->"Italic"],
 "^2/",
 StyleBox["r",
  FontSlant->"Italic"],
 " by the number of pairs separated by the given distance ",
 StyleBox["r",
  FontSlant->"Italic"],
 ".\n\nNote that you can use the Norm function to calculate the distance \
between two points:"
}], "Text",
 CellChangeTimes->{{3.7977805095471168`*^9, 3.797780551595024*^9}, {
  3.7977806956096907`*^9, 3.7977807639713497`*^9}, {3.7977807944513545`*^9, 
  3.7977808012623634`*^9}, {3.7977809319074926`*^9, 3.79778100514733*^9}, {
  3.7977817744678535`*^9, 
  3.79778178944381*^9}},ExpressionUUID->"ffe1e58d-759e-43d0-aa69-\
c2cf1fe454cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r12", " ", "=", " ", 
  RowBox[{"Norm", "[", 
   RowBox[{"r1", "-", "r2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.797781794393513*^9, 3.7977817981687293`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"ccddb2d8-7934-4c36-ab0d-9cc7b5b66599"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.8099627142828383`*^9, 3.8099633486731243`*^9, 
  3.809963422626799*^9, 3.8099645351245975`*^9, 3.80996512448316*^9, 
  3.8099654513308177`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"286e9101-9ce2-4694-b9db-a47b2c49d085"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Lengths", " ", "of", " ", "edge"}], ",", " ", 
    RowBox[{"face", " ", "diagonal"}], ",", " ", 
    RowBox[{"and", " ", "body", " ", "diagonal"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"edgeLength", "=", 
     RowBox[{"Norm", "[", 
      RowBox[{"r1", "-", "r2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"faceDiagonal", " ", "=", " ", 
     RowBox[{"Norm", "[", 
      RowBox[{"r1", "-", "r4"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bodyDiagonal", " ", "=", " ", 
     RowBox[{"Norm", "[", 
      RowBox[{"r1", "-", "r8"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Total", " ", "potential", " ", "energy"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"U", "=", 
    RowBox[{"k", "*", 
     SuperscriptBox["Q", "2"], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"12", "/", "faceDiagonal"}], ")"}], "+", 
       RowBox[{"(", 
        RowBox[{"12", "/", "edgeLength"}], ")"}], "+", 
       RowBox[{"(", 
        RowBox[{"4", "/", "bodyDiagonal"}], ")"}]}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.797780840655526*^9, 3.7977809249964952`*^9}, {
  3.797781549428564*^9, 3.79778155047555*^9}, {3.809962726732241*^9, 
  3.8099627572101316`*^9}, {3.809962838821328*^9, 3.809962894602922*^9}, {
  3.8099629596285143`*^9, 3.809962981144185*^9}, {3.8099630173181796`*^9, 
  3.8099630498597403`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"01769894-5089-40ea-a83b-96b442c91058"],

Cell[BoxData["5.901816822752555`*^7"], "Output",
 CellChangeTimes->{3.8099628822313137`*^9, 3.8099630504678926`*^9, 
  3.8099633502846527`*^9, 3.8099634241465445`*^9, 3.809964536804844*^9, 
  3.8099651261398973`*^9, 3.809965453006482*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"dfa507d1-6bd7-4bad-8acb-4565e1fc82a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.443986862282744*^9, 
  3.443986873017394*^9}},ExpressionUUID->"dc49e7d9-0c17-495f-a2f3-\
e5457fc0aa1d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"U$", "=", 
   RowBox[{"N", "[", 
    RowBox[{"k", "*", 
     SuperscriptBox["Q", "2"], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"12", "/", 
        RowBox[{"Norm", "[", 
         RowBox[{
          RowBox[{"r2", "-", "r1"}], ",", "2"}], "]"}]}], "+", 
       RowBox[{"12", "/", 
        RowBox[{"Norm", "[", 
         RowBox[{
          RowBox[{"r2", "-", "r3"}], ",", "2"}], "]"}]}], "+", 
       RowBox[{"4", "/", 
        RowBox[{"Norm", "[", 
         RowBox[{
          RowBox[{"r2", "-", "r7"}], ",", "2"}], "]"}]}]}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"U$", "-", "U"}], ")"}], "/", "U$"}], "]"}], "<", "0.01"}], 
   ",", 
   RowBox[{"Print", "[", "\"\<U is Correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<U is Not Correct.\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.443986874579934*^9, 3.443986889783448*^9}, {
   3.4451887840418043`*^9, 3.4451887863542895`*^9}, {3.446572761677229*^9, 
   3.446572921786604*^9}, {3.45014120753125*^9, 3.450141214546875*^9}, {
   3.450141262890625*^9, 3.4501412965*^9}, 3.7977816172777233`*^9, 
   3.7977969887173595`*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"dc0cb55f-113f-47cf-a360-7c369b7f430c"],

Cell[BoxData["\<\"U is Correct.\"\>"], "Print",
 CellChangeTimes->{3.8099630556248484`*^9, 3.809963354180971*^9, 
  3.8099634270290823`*^9, 3.809964540236081*^9, 3.8099651292033033`*^9, 
  3.809965456057016*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"21361063-2d4f-49d4-b7a5-7419b73fa9f0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part B", "Section",
 CellChangeTimes->{{3.4501379520625*^9, 
  3.450137958125*^9}},ExpressionUUID->"ea5975d0-0014-4b7f-94ea-eefd976d9d4e"],

Cell["\<\
Now a test charge with q = 1.15 \[Mu]C is placed at a location r = (x, y, z). \
Calculate the new PE as a function of (x, y, z). Plot it in the z = 0 plane.\
\>", "Text",
 CellChangeTimes->{{3.797781696251695*^9, 3.797781706616696*^9}, 
   3.797795149345731*^9},ExpressionUUID->"5adec4fd-78fd-464b-9802-\
af3c49b20aa6"],

Cell["The value and location of the test charge.", "Text",
 CellChangeTimes->{{3.443986270111335*^9, 3.443986289111821*^9}, 
   3.7977820234207*^9},ExpressionUUID->"dd5d60bd-75b0-4eb5-8da7-1c9233f147b7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"q", "=", 
  RowBox[{"1.15", " ", "*", " ", 
   RowBox[{"10", "^", 
    RowBox[{"-", "6"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"r", "=", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.4439862832210455`*^9, 3.443986308315438*^9}, {
   3.445189409881549*^9, 3.4451894124127827`*^9}, {3.4451894837248263`*^9, 
   3.4451894930685167`*^9}, {3.4451901726110425`*^9, 
   3.4451901741891575`*^9}, {3.4451909803714976`*^9, 3.4451909870745797`*^9}, 
   3.7977820300473156`*^9, {3.7977951512967286`*^9, 3.797795153272698*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"3e7eb6f7-720f-4fb2-a828-d763982ade3c"],

Cell[BoxData["1.1499999999999998`*^-6"], "Output",
 CellChangeTimes->{3.8099631314909024`*^9, 3.8099633560176263`*^9, 
  3.809963412183894*^9, 3.809964543415989*^9, 3.8099651319780416`*^9, 
  3.8099654587026825`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"aad047fd-cca3-49d8-8266-97a548f2eca4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "y", ",", "z"}], "}"}]], "Output",
 CellChangeTimes->{3.8099631314909024`*^9, 3.8099633560176263`*^9, 
  3.809963412183894*^9, 3.809964543415989*^9, 3.8099651319780416`*^9, 
  3.8099654587026825`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"f29da850-9e35-441e-86f0-b049086df458"]
}, Open  ]],

Cell["\<\
We already calculated the potential energy U from the 8 charges forming the \
cube, so we only need to add in the additional potential energy terms \
involving the test charge q. Let\[CloseCurlyQuote]s call that Uq. Then Utot = \
U + Uq.\
\>", "Text",
 CellChangeTimes->{{3.443986335034872*^9, 3.4439863439257245`*^9}, 
   3.7977820477651205`*^9, {3.7977822478281145`*^9, 
   3.7977822545401435`*^9}},ExpressionUUID->"7698b2f3-0b83-4c11-9cac-\
928db027f071"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Uq", "=", 
   RowBox[{"k", "*", "Q", "*", "q", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Norm", "[", 
         RowBox[{"r1", "-", "r"}], "]"}]}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Norm", "[", 
         RowBox[{"r2", "-", "r"}], "]"}]}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Norm", "[", 
         RowBox[{"r3", "-", "r"}], "]"}]}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Norm", "[", 
         RowBox[{"r4", "-", "r"}], "]"}]}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Norm", "[", 
         RowBox[{"r5", "-", "r"}], "]"}]}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Norm", "[", 
         RowBox[{"r6", "-", "r"}], "]"}]}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Norm", "[", 
         RowBox[{"r7", "-", "r"}], "]"}]}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Norm", "[", 
         RowBox[{"r8", "-", "r"}], "]"}]}], ")"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Utot", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"U", "+", "Uq"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "\[Element]", "Reals"}], ",", 
       RowBox[{"y", "\[Element]", "Reals"}], ",", 
       RowBox[{"z", "\[Element]", "Reals"}]}], "}"}]}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "these", " ", "assumptions", " ", "will", " ", "clean", " ", "things", " ",
     "up", " ", "a", " ", "bit"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.443986350207135*^9, 3.4439863570979366`*^9}, {
   3.445188993759212*^9, 3.445189014509079*^9}, {3.4451901814547358`*^9, 
   3.4451901831266003`*^9}, {3.4451909941682844`*^9, 
   3.4451909945276575`*^9}, {3.445193705135309*^9, 3.4451938217283125`*^9}, {
   3.450136214890625*^9, 3.45013622565625*^9}, {3.450136262*^9, 
   3.45013627075*^9}, {3.450139037953125*^9, 3.450139041015625*^9}, {
   3.7977820525485535`*^9, 3.7977820654517736`*^9}, 3.79778259338234*^9, 
   3.79778307081188*^9, {3.809963151583397*^9, 3.809963239134968*^9}, {
   3.809964576942328*^9, 3.809964580957852*^9}, {3.8099647336773615`*^9, 
   3.809964739672365*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"6190804c-4ed6-43df-b0f3-2ecd5e123e8c"],

Cell[BoxData[
 RowBox[{"U", "+", 
  RowBox[{"k", " ", "q", " ", "Q", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"-", "r"}], "+", "r1"}], "]"}]], "+", 
     FractionBox["1", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"-", "r"}], "+", "r2"}], "]"}]], "+", 
     FractionBox["1", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"-", "r"}], "+", "r3"}], "]"}]], "+", 
     FractionBox["1", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"-", "r"}], "+", "r4"}], "]"}]], "+", 
     FractionBox["1", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"-", "r"}], "+", "r5"}], "]"}]], "+", 
     FractionBox["1", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"-", "r"}], "+", "r6"}], "]"}]], "+", 
     FractionBox["1", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"-", "r"}], "+", "r7"}], "]"}]], "+", 
     FractionBox["1", 
      RowBox[{"Norm", "[", 
       RowBox[{
        RowBox[{"-", "r"}], "+", "r8"}], "]"}]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.809963321664975*^9, 3.8099634082272367`*^9, 
  3.8099645844045277`*^9, 3.8099650111133614`*^9, 3.809965426929177*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"489e684e-b8c5-40d2-9cbc-3d40885e42dd"]
}, Open  ]],

Cell["\<\
THIS CELL ABOVE WONT EVALUATE UNLESS I RUN IT BEFORE EVERYTHING ABOVE IT.\
\>", "Text",
 CellChangeTimes->{{3.8099650298228045`*^9, 3.809965059600882*^9}, {
  3.80996514602999*^9, 
  3.8099651518491263`*^9}},ExpressionUUID->"78cba506-db67-4928-92a2-\
7daf9e03f6e1"],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.4439863602230167`*^9, 3.443986373957743*^9}, 
   3.4439866138545094`*^9},ExpressionUUID->"0459841a-8b88-4eea-9832-\
8f60c9794a5e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Uq$", "=", 
   RowBox[{"k", "*", "Q", "*", "q", "*", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"Norm", "[", 
        RowBox[{"r1", "-", "r"}], "]"}]], "+", 
      FractionBox["1", 
       RowBox[{"Norm", "[", 
        RowBox[{"r2", "-", "r"}], "]"}]], "+", 
      FractionBox["1", 
       RowBox[{"Norm", "[", 
        RowBox[{"r3", "-", "r"}], "]"}]], "+", 
      FractionBox["1", 
       RowBox[{"Norm", "[", 
        RowBox[{"r4", "-", "r"}], "]"}]], "+", 
      FractionBox["1", 
       RowBox[{"Norm", "[", 
        RowBox[{"r5", "-", "r"}], "]"}]], "+", 
      FractionBox["1", 
       RowBox[{"Norm", "[", 
        RowBox[{"r6", "-", "r"}], "]"}]], "+", 
      FractionBox["1", 
       RowBox[{"Norm", "[", 
        RowBox[{"r7", "-", "r"}], "]"}]], "+", 
      FractionBox["1", 
       RowBox[{"Norm", "[", 
        RowBox[{"r8", "-", "r"}], "]"}]]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Utot$", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"U$", "+", "Uq$"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "\[Element]", "Reals"}], ",", 
        RowBox[{"y", "\[Element]", "Reals"}], ",", 
        RowBox[{"z", "\[Element]", "Reals"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"Uq$", "\[Equal]", "Uq"}], ",", "r"}], "]"}], "]"}], 
    "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{"Print", "[", "\"\<Uq is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Uq is incorrect.\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"Utot$", "\[Equal]", "Utot"}], ",", "r"}], "]"}], "]"}], 
    "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"{", "}"}], "}"}]}], ",", 
   RowBox[{"Print", "[", "\"\<Utot is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<Utot is incorrect.\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.44398639923964*^9, 3.4439864013959455`*^9}, {
   3.443986433146758*^9, 3.443986548524712*^9}, {3.443986597744722*^9, 
   3.4439866138545094`*^9}, {3.4451901869547005`*^9, 3.445190188282817*^9}, {
   3.4451909977776365`*^9, 3.4451909979963846`*^9}, {3.450136309515625*^9, 
   3.45013633165625*^9}, 3.450140531796875*^9, 3.79778224028576*^9, 
   3.797782649265312*^9, 3.797797028982832*^9, {3.8099645971943464`*^9, 
   3.809964605093865*^9}, {3.809964674134242*^9, 3.809964693010709*^9}, {
   3.809964745486006*^9, 3.809964747300913*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"b2f8b86f-8c76-4ea2-bae9-4d947a70b9d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\<\"Uq is correct.\"\>"], "Print",
 CellChangeTimes->{
  3.809963336999275*^9, {3.8099646064885855`*^9, 3.809964636150699*^9}, 
   3.8099646938234572`*^9, 3.8099650134114485`*^9, 3.809965429042827*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"ad0044b3-4af4-486e-9bb2-9b96832ce2c6"],

Cell[BoxData["\<\"Utot is correct.\"\>"], "Print",
 CellChangeTimes->{
  3.809963336999275*^9, {3.8099646064885855`*^9, 3.809964636150699*^9}, 
   3.8099646938234572`*^9, 3.8099650134114485`*^9, 3.809965429058454*^9},
 CellLabel->
  "During evaluation of \
In[3]:=",ExpressionUUID->"f9648e80-3847-4f08-87e0-04df5e7bef83"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot", "Subsection",
 CellChangeTimes->{{3.797788087635358*^9, 
  3.7977880880041485`*^9}},ExpressionUUID->"5056e659-98c2-4b53-9673-\
70fc031b7516"],

Cell["\<\
Let\[CloseCurlyQuote] s plot U (x, y, 0). Note how the maxima correspond \
closely to the positions of the charges when projected onto the xy plane. Let\
\[CloseCurlyQuote]s also make an animation of the potential energy as we move \
up the z axis from 0 to 2. Note that the maxima are largest when z = 1 (why?).\
\>", "Text",
 CellChangeTimes->{{3.797783448402097*^9, 3.7977834536781063`*^9}, {
   3.7977941096457777`*^9, 3.7977941108867836`*^9}, {3.797794367976903*^9, 
   3.7977943708390923`*^9}, {3.7977945150469575`*^9, 
   3.7977945194509583`*^9}, {3.79779455771142*^9, 3.797794563247569*^9}, 
   3.797794865169242*^9, 3.797795522151594*^9, {3.797797052457794*^9, 
   3.797797054240836*^9}},ExpressionUUID->"dfff9873-becf-4326-b5c1-\
96d6be11713a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"U1", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], "=", "Utot"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"U1", "[", 
    RowBox[{"x", ",", "y", ",", "0"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<SunsetColors\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"U1", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<SunsetColors\>\""}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5.90185", "*", 
           RowBox[{"10", "^", "7"}]}], ",", 
          RowBox[{"5.902", "*", 
           RowBox[{"10", "^", "7"}]}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"BoxRatios", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7977941206968136`*^9, 3.797794121102816*^9}, {
   3.7977941761633444`*^9, 3.7977942128824244`*^9}, {3.7977943492853985`*^9, 
   3.7977943494693174`*^9}, {3.797794402788234*^9, 3.7977944292831993`*^9}, 
   3.7977948771866674`*^9, 3.7977955362108183`*^9, 3.7977970752038417`*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"98d8950c-d3e4-4f22-a4b5-24e4f7cec0b9"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyNnXm839O191M0JMZW1RxT6K2g5kqbdlUVkUGDtqih0Uyo3LZiyHBOBjXT
kiNCi16XViIJKlVDq75EjLlFT4nhGB4HKRLEERG5yCPn7Pf67f35/ZbnyT/n
dT7ZZ+21P3vttdee1ne7n/788BFrdOvW7aKe3bqt+enP7V4Y/OdVq1ZV/Dx3
4czfj+l98f4jT/vTb28f/b+OHzz9ha1P/xSfte7Gk0e3LXf88gv/dvYZn+Jv
X3f6yN6HdDh+xKLJs878FB/RKWex47fttPcvxnr5dsfXeeTChTW81fFjdtn7
o9V4t/QPfMley9YcVytvWj7JN5Wf9LHG+nSY6p/aa9rexI8pP+l3Uz75HV4p
z+/8/E6Ppo/OyHgGf+2vEx7K9HT8mO4//+b4jGfwP2y87TYTMp7Bj1r+1OkT
Mp7BT/zjWc0TMp7Br519zplZedPy8Kzy4bmxPh2m+sOztheelR94Vj7hGf6k
vxxHPr/z8xsjRqyR6el4dXu/J5oynsEXnj7/8eaMZ/BzDlzRfWLGM/g2K8a/
3JzxDL5k5Z4PN2c8a3l4Vvnw3FifDlP94VnbC8/KDzwrn/AMT4wXeAaX/nUc
ffidn8d2PPF61i7HD9h3t1WTMp7B75m2+ZaTM55dn3P+54lJGc/gx731o5mT
Mp61PDyrfHhurE+Hqf7wrO2FZ+UHnpVPeIYP/BU8gzO+4Blc7MFx9Od3fp7d
7zc7Tsl4Bv/hGXcOmJLxDH7eftPXmpLxDN7yu74vZP1iWh6eVT48N9anw1R/
eNb2wrPyA8/KZ2nP7T5flPbc7v6ttOd2Ge8djov9OF7y2e74f7+xx9VT6uy5
vdp16c+mTKmz5/bq9K/POHlKnT3Xypf2XJNf2rPq02Gqf2nPtfaW9lzjp7Tn
Gp8lz60+X5c8t/r8UvLcKv6ww3HGb8lzq9qb4yU/rY73X3u/afU8t1abvTzl
knqea+VLnmvyS55Vnw5T/Uuea+0tea7xU/Jc4xOeaQfxEjyDM7/Ds5cv5qMO
x/Gf8Axejvd2x8U+HYfPbvLv7TW3bMl51vLwrPLhubE+HY6jPzxre+FZ+YFn
5VPs2QJ7tsCeLbBnC+zZAnu2wJ4tsGcL7NkCe7bAni2wZwvs2QJ7tsCeTe0Z
vQL/bIF/tsA/W+CfLfDPFvhnC/yzBf7ZAv9sgX+2wD9b4J8t8M8W+GdT/0z9
QbxhQbxhQbxhQbxhQbxhQbxhQbxhQbyh48VUvsQbFsQbFsQbFsQbFsQb1jje
6LAgfrYgfrYgfrYgfrYgfrYgfrYgfrYgfrYgftbxZY318fjZgvjZgvjZgvjZ
NH5GXrAetGA9aMF60IL1oAXrQQvWgxasBy1YD1qwHrRgPajj0VR/WQ9asB60
YD1ouh7k74L9DQv2NyzY37Bgf8OC/Q0L9jcs2N+wYH/Dgv0NC/Y3LNjf0PFr
2l7Z37Bgf8N0f4P/D/brLNivs2C/zoL9Ogv26yzYr7Ngv86C/ToL9uss2K+z
YL/Ogv06He+m/Mh+nfPZJWdRxc/Tvz7s7Np80Wbg/+770JgMr/i515LLflub
R+Y5fuEjG12Q4aY48lVOqs9xrZd6RL7jU7c9oCWvV3HqVTki3wL5Fsi3QL7L
gUf+P+DTAj5VH1Nc+HQ5yIdX6uV3ftLv8/9j0k5tt39c8XPIV2bvk49H8Ct6
rfmT0zI9wWccev23xmd6Kp5+t0C+qfxtO/F3bJ17X16vpfeH1b79/rHVan8+
6Mjvvde/ZZnjX3vyjn+Mr5Wv0v9Xd3/pw6snZvyDL7+pe59JWXl+9p30yeDJ
GT9BeVP56AP+7Z8s+EJzVl7lUx4cOak9Lod2gVNeeKhUDn4P/FvHnHLlpKw8
fNAufqd8e/t5nXEmv/P/4NgV/3/gVjfdNLnOzhdXh/10wpAGdqjj2gI5pvqU
dr64WmPSNTvn8S3lH57+pzsm19u5+zf8qvJDf2l76S/lrYyLFnl7kUu7aVcZ
Ly2qHvv8mEb+wflhfLk+LVd/u95ffTpf/Xujabl/0PKlH2uvzj+p2y/r/Zji
7aZ6lv6tVm8Zj9V4gH/KIweelZ9y3dTm/Vuum9q8XuqjfWV7W738pbvt2VLP
W6vj5TqrrXrln33Pqeettdrzkb5T83Wuyi/51PLtpvqXfLaKnotNecA/olfp
b9sdpx+FH1N+KI+e1Acf8FCuj+ZVzy5dOjXnh/8v8VZT+eih5Us7mad2bqqP
lPd2Mb8oP8KbBbxZaf/Ojyk/tE/th/LKD+XVflS+2I+p/aieYj+uj8RRPu8L
P86D+CsLxqNhhzIvGH5SxqnpONV4Q8apNR6n7S5HxqnpOHV9Sjs3lS9+Usr7
ODUdpxpHiR8znb+Qp35PeZN52ZhfZH435neZd0znHcoTb8i8YzrvUD6Y371d
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
m+GU32r7+zrzUXylE3/cy194xR0fj81wyn+t+/1NtbwWM+/WvJ1bdpV3/qe9
1txZvleKv8F/0+3o8avxp7v0dz85LbULnPIzU7u2SfM05c9OvIF7vrFfd/G2
dxf/pv0Crv3yTFf/mvY7uPZ7U5f91PLBrtjp7dMyXO0Ke+uyx+VV2207TBqb
2RX4H1fOGjM+sx/wXVesu0NTZifgA6Z3G9Kc2QP4na+c+Wpz1u/gu3Rc+XFz
1r/g41Yc9mJz1r/g5Iehf7U8/QveJ8mnH1Uf+gt8YNKfftH2wr/yA8/KJzwT
j//4u4e9MS7jGfyGAT36NGU8g3/u2N9uMzHjDfyVIeeuMznjDfwHrX9fMCnj
DZz8RfCm5eFN5cMb+L8P/WFnXiPaq+2ivaxru0//7iPjs/aCDzjuqh2as/aC
H3HKVvtPytoF/vAfZq2anLULnPxXtEvL0y7w2StnfWNK1o+qD+1S/ct+bK9u
vnTJdhPq+rG9+uutt/y0ua4f26sem/76iPp+qeWxLPulverX56XO/XPsUOWg
v9Zb9ktNz1L/1uruE3rtWq9/a7XTsJcG1evfWv1k6fqb1utfyw9Z6t9aHT/7
ws77z6VdfSpnw8c73++UdtVajRp51/717W2thqZ6y/a2Vr98pal/c9Yu4oph
127y1bxd4H1fuGS/vF3gY049ZNnEzI+Bf3DAw9/N7Q2cPI20F3ydP259ad4u
8OXLbulcL+NnwFck+bRX9aG94JvPWHvv5vp+tKAfLehHC/rRgn60oB8t6EcL
+tGCfjTtR/YxgvFlwfiyYHxZML4sGF8WjC8Lxpfp+GL/JPB7Fvg9C/yeBX7P
Ar9ngd+zwO9Z4Pessd/rsGD+sg//tuZuDeYve33VXXs2mL8smL8smL8smL8s
mL9cftm/HcZ8WvZvhzH/yrxmOq+l+d2CeMmCeMmCeMmCeMmCeMmCeMmCeMmC
eMmCeMmCeMmCeMmCeMmCeMmCeMk0XmJ9qusgcF3vgOu6BlzXL+C6TgHX9Qh4
sO6wYN1hwbrDdN0BrusLz8sr6whtr6wLTNcFyic8ez66tF6Q9aax7pB1pbF+
kfWjsX6UdaKxTpT1oLEehE/Nmwef4KwH4VPlyDrOWMfJes1Yr8m6zNsl6y/n
Ad74Of+Jhy7M7ZP9j3v2+NIL+br7pgkD12zp/XH17h2LF+bra/ZZ/7fpieHj
Mt6ef2ruIb0P+aSa+uSQlnEZP6OCde7EpM9/H7DJrrm9TU/69Bs47KnxGT/o
c+Omrx8wPuMHfc6b/s8fjsv4aUv69Fx+/CZjM37eS/uH35k1+7qcn/vuPOj6
20d/UB22/ODDcz/Jz34bLO6W+8l3v3jzG/1bVlSDj1o2aELGT4+077LZPb/9
fFPGz7ajN9m97fYPq6N2+sK+TZld7Zf2VR7dt9qoKRu/33+o6YzRbSurzf70
zIP5+J0drCvnJf2fvX30tNxPPpf0/+C+YSNyP4n+a3df9+3c76EPeS8Zj0OS
Pj/78Fdv5bx9fsiNF4xu66jap185P59n075x9fCZ6z02IeONnz+/5sRT8/mi
6dbZfdtuf78a+8PR4yZmPFx2/EvH9j5kefXQGT/aYmLGwzvBOrF70qf7D+66
JJ9neyV9pr9168WTMh7Qp8elGw2dlLV3Wqr3iKHPX5/7+cs67XNJtXLXi/+U
x0v3p3O6Dza/5c08rujah3676nXcue/n+o8M1oOXJ/m9hs19Po+L5if5gx/Z
86N8PfvM+/sf0Hb7u9XIWWuvkcc/W3W295Vq+N3bbZLHpezbr993jcF5XNfF
/2vVzFHrjsrjmaXBuq9Xkt92aPcxeZzWI53XfPBU/755nNa3067erA47ef2F
uZ4DOvV5svpy7+P75Hpy3v29Lf94eK5nz075z1Yj39pqx1zPd4P13feT/Hc2
/J+WPP5fN8m55MOVR+Zx9QOdPL9QrbHFxAPzuBo7nfjC74bn8f+LnfVeVx3Z
65dfrY//51Yrz7j7G7n+/9nZ73+rRv5y/se5PXj8KOu1ta7vkr/4zXOK9dqY
JOexJw/YKdf/5k7eHqxOebdl/Vz/0Wm/d9UfPj4o1793que65IfL+H+BTTt9
6MG5/n/skm/IR+/FwbqMnz/7yfmX5fpfl+QM/GiL3XP9j+tql8EPet7beb70
sj167dU75npyP2FF8m/oeW9XPxr9iJ5LgnXWPUn+K+uf/Ktcn8932Ylhb/B5
Q9oXv+mOqQWfXfvkbxp2jp5rp/Ou5WlcoOcziQ/8D3oOD9ZN+yT5vR7fdON8
3A1I54eMa8bdFl3j1PAD6Pl0l98w/AZ6cg44/sOzz8j92Iyrnvuof8tS673e
O7fkdvtWsN5ZmOTfsVXb+7kfvifJP+uoYZ3n9eh/Xzqvx3+i/9Quf2j4W/fD
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
JPhPBae9HVIv+JuBPtwn4dwN/DjBZfxWjEcZp5WO05M++1zP8+OBL/ps3M8B
hWdT/pcHOH6GPCSl/5lrBx9036UN/JjniQV/V+7JSL+Y9suboo/0Vx2uepb7
VDW/J+PFGC9yv8u43yXj0RiPMo7cT8q5rXFuK+PCGBcyjoxxJPOU+1V4Wyr3
ecBnyv6YnOP4/qf4McNfid8z/B7+bVrCpyZc/LPhn9FnpNznEf9v6rcvFzni
z039+chg/ZX0rKaK/uQVOWXPoZvnOPkWDh/2g5Om1MuvVH4v8Xvlu4BF1at7
vDU+5wc/+XyyK9+HSX71mmRXfp8k+c/25OfBq8DP6zkXuMY55XuBmp609x1Z
j5fvCGrnd+U+3kvVzCXzT83tVuOcMn6o958vih8D/0Rw8T8V/kfkWCCnDk/+
3AJ/buqHTwjwkwJcz3GEB9P5Av8Q9Lv7K5nv3H9Kvxj9IvGJadzSK/A/PSVf
pcQtpnHF2gHeI8D1HEHiENM4hPKB3Zrare6HMK+NCuIc9QPwc4/EM+U+3kvV
jMSz+GHf7xJ7qDvfvEfmBZFvyBd/YoE/sWtkntJ5RHio85/kKYEH4acO55wC
vwoPmi+x3BeqvVMGJ5637W45LJ8vNJ6nXu6BfzuVL/f3FleHpf238t3Toury
t049aVJmz/odh/K9ZG2fU+IiyQfIvbVaPkCJTyqNT9Qf0l/scyKnPLeda/2T
32O/nfK8qy33XWv59KRdvi9Kec2DJ3xawKfBp/SXz9diD56PDvwBwUs/X3tn
Le3yfHHw+f/greov84X6YelHz/8m87v7H7Ef928yb/r5rNi/BfZvJvZ8g5yf
iv0b9l/qv6ri/qTwXCn/20n58l1kbbxg/8MC/6nxldiV52eT/vV3vlKvab3K
p+hT58fUL9FfvIealu6L+n5reof1rfQOCz3xY39e6/h+Oc69xwfSfVTwdO+0
WrbPsiX5fVT82F5THn86f88yL80v3PMHP0jeiZTvXmv5AeQdmfGODPtn3KE/
eHq/Zu8lPeV8yvZMeso924p7tiK/Uvnpvm7FfV2pt6Le8tyhlvdM3kFE/Jjy
M0/eTQhv/h5f+t3od7ETw07EHiywBwvswdQeyB+27N/fPDu3W94jgFOee+/7
vzD3lXxcLJW4XcZLXdyO/9n4jbd75f2LH/j4oYfb8/cFzFO8iynfm8+r+l3a
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
p378rd9Hl3gYe9B8JtgDOP4EewBXnjVORh/azbxDu8CZp8rvvH9gzGvYk6+X
0zyIfYAzX9AuzR+C/hoXed7mhGOH8Au+Z7Jn2gmOH6C9Gud7fsOEaxwCTn/R
XnD6l/aCf5zsBDsGvynFUdiZri/gAfy1HV/8Sh53gTNO4QGc8Q4P4Pgfz5OS
8K3Fj+l5rudflXfByIcP4grkw5/GP5THTiincuATnPcR8Amu3/fUezIerycc
P0B5/n/CNVedNyUbX/w/OPxonjTK8//gZV762vkgfOq7Rcojj3rRQ+95+nov
4aqnviNDLjg8wL/u18Gvvi9AH3CNN8DpR8YXOP0Ozt9hJ+ijcmin1ku/6jt0
5Oq78vL7jDX74Xd9LwOfmgcSPbQ85egf4kP41fjWv2eU+od+QR99T0G9ivP3
auf+/SDpd/TQd6+UV3umnO5j+Pc10v+D8/eaX5Ty4MTJ/L3itFf368q8zbXx
Dq77M8jR91aUd38sfsD9ccLh0b/HmOoFpx7iZHjQPG/UB648KE559Uvldxxq
fgZc/Qnt1/fClNf7V7RTcd/Xk/1PfkfeDPmeDvJmiBz6lzz//K73W2in5heF
Ly3PvKXrPsaP+j3KaT4ucH03jZ56zs7fe/7SNO+jD3KY3/l72oGcMt94TQ7y
kQPu+1DJvx6b4mRwzZfl53/p/9l34u/1PMjPWVN55i9+93xraT0Lrvtg0X4X
9cJ33xcu2S/f70Ie8T/6IQ8+/y9kYBlc
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnHccV9P/xz+fu+9HRkhKSmgYERpWqcxs2SFJiqhQQklKpVIoM5kRsnc2
oewtMxKRyEpGlH6vZ6/ze3z/uJ/z/px7zrn3nvHe73fTXgO7DYgqlcp9eaUS
q7w/q1TqqtwuqVT217Wl4Dt04wDBzQTfKfjYVG2rlcobqttA/S5W/WUqN9Q1
WvDlKl/XODsJPlvwDLV7UXBdledwCZ6vcW4XPFvweiq76moq+DbVT9TYia6t
9X+2+rdR+bHGa1pWKt/qZf8sKpU5qv9GfQ6qVSqX6P+Leqcegg9V3bZq/4DG
Ga8xKrq2UPGO+u+q8hz1e1fwboKHCL5NY84RfJDg+hrnUI1zvsZpo/rXVd9N
9buFd5uuMbdW/caCtyk9Z/UF/6p+Z2nMfwQ/p7YN9P99wd11f1f930zwreo7
S33qCX5Ebe/VvfV4T8FPqP4twUeqbrr+762256u8QX2fUn2h8lpdjwiOVJ6p
+wN1nav/z6rvcyr3Vd+ndX2i+zvp/a9R+TCfr3KovukCzcMBKq/W/4dUX1F5
o66nBZYqN9Q7Pym4C+9VuM2ugp/LvY4f8V5q10jwTXr2XK3D/rpu1bhTNe5u
KjPG17UL66fy6MTz/KTaP557/udrnE91v72uJfrfgT2kcpLa7JF4fiYL3l3w
+oIvFdxZz2nLftB1h/r3Vd0Ulfuqfk/V/cTaCD5IV1f9v1XP3lfluipv1LW3
4HWA9V19mE+9yzWCTxS8WuM8pTk8QfC/gq8VfIrgLKw7Z2G8nteROWJvC+4k
eCPBVwrurT7z9dyOKndWfR3VT1P9CP3vqnK4yvaqX0v1U/W/nWAtT+VawTsK
Tjk7gl9Su20ED9BzHxXcQPBJgrdXG87nOLVpnfiMTtDPDsmaJaxMFDxO3/ef
4E103au+F6nubpVN1HGV6lbq2keNN1V5i+7tlXj86wTvInhtwTcKnq0+LQWf
rufurv+76RJYeVQ/u6j8nG/SCw/V8/ZTebr+n8D5Enyy2vbSdYiur/XczXVN
0b1zVF6psgvnXO1vFNxP7U8T/LLu7aRyO5XTVN+N9db8z9U7faiyV+p+C/V/
kdrtJfhdvcvpqdfuV86W+k5Q3x35/sLlWWozkTOl+x+rbFL4/Qer/nD1/Ypz
rfKZyHN0ifofqf9qWrlQz2ms9jsLPkT9GxbGQ/3Vt6W+rYWuMWp/tRqv0P0v
VW6nNsepTWvBEwX/oftnq9xL15nsPZU/6BoouJnGuUz9nlD7VOWj4A7V11Hf
PQUPAFb5VOT6uzkbajeLI6vyWD1/kOrv0f+OatdXcJUx1P5iwaN0HZF6zzyr
9m017tWq+0zfNUnXVMF9dD8XfL3gvoKfVeOmuibr//Mqr1G5D2eA8yC4t9q8
krp+T9X9oDZLIt87RfX7qe0HetbvhcdYrnL7zOvfU/cv0zt8zl7Xxu+h9/9P
fe/QvfNUN0x9v1Ldwfp/kK7h+n+77h+t61D9n6n+R6ncVOX1GrO/2l6nsh7v
wJ7R9YPuHaFyE5UNVf+z4GN0DdT/A1Sup7KB5v1KjX21yifU5iRdp+reAyrv
13Wi4Av0PmPU5jvwleo20dVH9RvSXuVhuv7WWL1VbqvyN12nCG6lclhi2vet
+nZX+5dU/6f+b6Fv767yb71zrnvHV/0eE9T+NpV/qu4PvdOWGqOr5meV4BtV
34IzqD6naqx/UtNjcNElan9C6v38jupG6bpK8E+qr2nsK3Ttof89UuPbebp/
sa6rBf+sNk8ULKzOn54VCd5O7fYX3CT3+1yvcq/U+3ZXzkTh+m1Vf6nGuV3w
Xxpn3cJ7cyfVX554P/6r+isE3wvOEZyyDzRGH41ft3CbNoyvb+qi8dvpOkvt
z4C+gOd13aa6Tqyf2m+p8kO1v17w5oI/YE7UdzvB30JrVd9U8Puqf0Vla13f
8Z363wj6o+ceoTZNVP8OeFV1rwoerfI41TcXPA++BVqucT9W3Qmska6tmM/M
eOlUtb9fVyPBP+t9F+vKq97z3+rKBL+n8hj4ET3/JfVdmHkdntH4wzT2UF0N
1e5YtTlY9S+rzXTwjOrmq80tgrcV/LHg3olp0HvMocbZWn1f1fOP1b33VH8Y
vE7hefhEdfsL3lXwF4JPLjwPnwp+ueoz/rX6vKUx7tI1U//fVnm8rrsFP5QY
H7ZS+So8FedP5YP6v4B1V/mr/t8k+D+V6+h95qjfSL3DKpVzq37vORrvBpWb
cabAi/BIKnfRN6yja2TVfM1euj7Xvft17wuVW6scrzG7qf4SlRdrnBeqfo+T
dK8H7657P+neIYKnaK266Woh+HCVh6lNR8FPqc0juc/EgVr37ql5SGhAt8Rr
8TT7U/XbqP4faIzGbE1f9TtY/9sLnqU2q1kHXduD7/SM8arfS+VUXZcK3pg9
w/mnr/rNSI2r6qtsmhknNRR8kq51q6ZfD5Xmk+GXny6NZ+oJvjXwLHvoaqH6
carfSPXf66qr/mP0LT+Cj3X9rnsnqm5t1hr+Lvc7vw1thGdQ/Y+qHwdN09WM
PtBnXRtxT20OZK1L43nowgbQJMHrsz7gI/iEqmnrD5n38xFq/4ngtoLHan91
FryF+sxOTa93UP1r8GPqs73gBzWHl+neVhrnL86Ernaqf1z1n8HPqP51lUep
zWrOguD9Eq/FQ/DtGnMrwS9qzAf1ja/q3gE1ywg862FosOC7BK8QXF/v8o7G
PBxcL/gnlftzafxzWcPA985W+3VVTtU1l7VQeV1i/n99eFU9t7ngF6Bd+v+s
4LVUToxM0/mexoJHQwd07/nSZ3mp2l+ZmA+vo7JTbnq9AbhT/98V3DixvMP5
baLyTl3zBG8OP68xR2jMC6vm+ZE76qvcWeM8wLtpnGH6huHQSJXTdO819onK
N9XmUHCe3mEluLDq/X0CMpXqZ2t+nocv0jOuUPme2v/O3Gs+PxJ8tNr8ob59
wF+so9qvn5sOT1A5W31aqu94lXepXT/dv1rlerlp9ziVb+tapv6HaMyXBO+p
+m/UZp3SfODF0ByVH+m9doBXVdvv2Q8qP9H3tFLdSsG36npb9Y1UvpX6/K0S
/Ebub1msMXvo//7sDb1HH/2vUzVv8WRuWeML5BTBz8Dz6vn75F7H/QVPV7t3
BG8KjoA/AzfqfqZ3W1g1Dj2o8FlbBK8IX89ZUJ+DVb8fdEf1pzKf8FSCD8u9
Fk9q/FLtF6l+d3Bg6b4LdP+6yHgeOaWJ3u8W/d9U5W+qO44zAi3T974reAI8
S+ExvlTfu5kj3W/G/izMU0xV/Voa4/uqv+FOwb+G/f9k4rW7UOO8ofq3VXcX
z4n8/st1byZ8scotVQ5W3WlV77NlGvdmlatV5nrWThrjPK3plvo/VfXLVW7O
9wiu6f5o9jG8jdainr53lp6xgH2i+o/gfVTurTHOZk7gWXT1FNwc+Ux9tojN
43ZAfmDfquykqx/7RGXLQHdmwRdH5nXv1//OuneG4LbI6lyC92W/5H4f+Ocd
cuMHeO/DNddnqP9qtZmod3pc9XFiOsp53IwzW/i5rVX3MXtV1yOscWHeb4XG
6x6b/95cV5PU+Pwnle9E5gOv0P+UfRmZR/wz9brcCy9W+Nv/ys3bP1H1/wcD
7zlRfQfoPU/X/5Vq30Htj1X94+gMUtOd/io/0P2HdD2oe7uozSHMicqfU++H
26BFhenRD3rW1vp/g/oOZn9Fftd7dC/Se/aIzCc/UPgd/lT7P1LvyUP0Lo10
v27k/7Hu9dI4vTgHqvs6nJdj1e51lWPV71ONebba3ALeVbsFqu+jcj1kEPV5
WfCXuveZ6q+E31XdV1XrDv6OLM9zTh7TvddUjlF5h/peA++jfThW6zRT4/+D
rqAwL13T/XaCu1fN2y/JPZdXqdxZ9T2q3rdnqc8qjX+g/o/QONerzW9hDmZU
LSdsoW/pqf/L9bz2GvdQ3d9J5froT5ALVLYpLKcwPjoo6ObL4AT1baG+c5FX
1O9IXYv0/6jEstQL6HQiy1/r6Powsbx/v+qHRJaT11P9RfB7quurcnhk2Rj+
dZtwH3n4q8Q6mUfgU4McBg86G3kVHh59QmJ9wA2ClxXmGZ7Ve76fWHZAhmih
+rqqf5EzXTVPC569qmq+BTweZ37u1+p3rZ61T2TdzUeJ5QvkDPROyB7wUdBe
5LWR8GeF99dvqh+ZGLcsD+cD3vNo+BLBPwTc9WbgT4+kPjavDr3oVpinWqpx
VkeWr2j/PnKB3m8oCpXYOA45sHlhugDv3T0x3zhH9w/nnMOTC95SbYqqdYDz
ssDD6P5kjXF5ZB56meqPUP3RantRYlz0u/rewD7W/d4qH1D/xqrvAx1AD6n6
/Qrzj9CIk3XvrKATQDcwU+1+YQ8KviP3t18g+JRwXjg3/XUtFjyAMvcZnCf4
Kl3tBf+n8nRd36nNG/AYuffHpdBZwQPA/9A1cBp4TOU2+j+kavj4wjq4E1SW
ufWxo8G1hXVtN/M+mtPftbb3Cj4VuVTwY4L/RsYA/zC26tfSHD0ruJfg75k/
nZcTBb8reBJ6NcHPq+9o5Dn976T5a15argSHdyksS0Ij9la5odpPVt8hpWVG
cPtGgrfXdRD6pdI8zyaq37qwvAzt2L0wP9NC8Lasrcb5AL6vsK5vZ/B/YVzX
S/AnKh/KrT8aJfj53LwKPEvz3DqWpaqfq2sq8pfKVrpuqnp+kLuQv3oW1it2
QuFSWu5qHfbGLvBIgneGD0GnrPcpVL9nzTjoLOSXwDOgo3xC999SOS71urK+
Z6j8JjUvcQD7Ue2XVk3Lz+eeyn4qG8bmK5AlXg3lIL3Sv4K7ReZpVkbmadCN
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
LWePbQ==
            "]], Polygon3DBox[CompressedData["
1:eJw1nHccV9P/x+/nfu78CKFEViIlEUIl0iAJSVbIqJQUKqJhtERGZERWCCnJ
jETITCl7z8RXdlb2+L2evc7vj/P4nPdZ937uPed93u/X+3Xu1n2H9Dw9jqKo
XRpFiX77FFG0ZyWKUslH16Io0+83Kv9YZdcrv2sWRc+qwxaSV6vDxmUUNa5G
0Ry12UB9Zysdqfrv1PYL1e2m9i9IPkjpU5VVlb5W2w/V/zrlG+VRNFXyBI31
o9qfrrKlartEaXf1vVXy/9R2L6X3dJ0dCl+f+xim++sq+RnVnU879W8r+T7J
p6n++9L3wf0co7KtlN9Z5YskXyt5seRFan+B5G0l91L+A6WHJP+qe7pb9zZZ
bd5QXQulv3SP66n/RNV/pvqxqvtUZeur7hqlvpKPUP36us+xkg9X/ofEz2q6
0mDV11H6Xn0/k3yL8jcprVS+q8Z8V/1e0vVvUX6s2gxWfrnSbZL3UZtdlW+n
Md+QfL/kbZXfR2XzlN9B+dX6v4mu94j6nq6yydybxl8d+Rnelvo58bx+VNkC
/o/6bKTrrqeyp/R/v1PZZtTrGvtrzC+Vuqnt8Sr/QG1vV/8ePCvVf8/96/rt
lX9FYxyj9zFZY4zn/0luL3kryddIHq/+P5R+Puup7n2VzVFZPdWfpfxZyq9S
/bGq30z1V6hslMq2kny7xv9B8ubKt1J6TvKWuodTdP1T1WeZ8hcp30vXS9Vn
vtoOVdnlyj/MuJL/kPyA2tzB/FN+Y43xuPLNVP+k5C665j3Kb620kPmkNFP5
jXS9S9V2e8ZjjjF/lD+PeaXrfZL42V3P81bd/ipfoOs9JnmU8u30/x6UfK3a
/ap7/aLw3L5MZV+p7jWVZ6wFpUz9D1afxap7XPI5qe//beUj9XlI8hVKb0r+
V+lB5dfl/lU9mjmo/ENKKyXfIDnXeP/T9Rar796Sdyk8BmO9KHmC8m3V5lXJ
cyQ/IbmN5GWSj5A8RvLzei7d1aWO5GM09lu65+2Uf0N1hf7/b5JPlNxW8r6S
N5V8gdqfo7bf6v/+of6PsB6VJqpsP93DGRXrm8PV/hnJk3S9Jiq7Wvk/1X6+
8scrXaj2XVQ2QvlOrC2130P395Laz6pYP3yk1E7XO0pt39P1luo3Vt1VSi1V
N1f9flL+V6X7lX9b4x2o/M/K99d49dT+BfU/V2U3KP+b0l8Vr3ne9yMa82jl
m2usIWp/lH7r6x77qk9ftT0AfRSe1VHcn+S5koehN9W3keTJkntLfkfyMeq/
qfp3Utlm6AqV1ZO8teQn1fZVlbXQ2D009ruqO1DP8xnJd0r+Q/IKtXlU/38g
81n5HdV+geSrIl/zVZXNlPyz5LvUdy+lh5S/jv+m/tur/TzV36qyNbrua0pP
a6wvJZ/E+1X/ObGf0arc65j1/L3kuzX+KvU/QPJxavs++j237r9C8i+Sn1L7
fSVvyxxS2b8a7wflj1TZNcrP0hjfohtVtlJt31CbXPI0pf6qezzxtRqqfmHq
93eo+v6isvuUfxf9rroTkJX/Su03Uf5mpbq6t4a6n4m8T5V/V1qfP6j2TVV3
ut7PqsLzh3l0huQWqed6f5X9rvxvqfOzVfa17u97jXNu7Dl0r+paqH9T5X9R
eQ/1LzVOT13vRpXVlN9dbR6QfLbkjsp/rrKbgq46RO3v0W8fySexx6Tuf37s
OXCk8luo7O7Yz2i28teF/fG7qv/PqyrbXfVPK52kfPPC+vpb3U93jf+Cypqq
bpVSZ433vtJU1fdT+cGqP0/jnabx3tZ4H2q8x9X/HLVtqDaXMJ+Umiv/u8Y7
VO0X6rdP7DnXQmPtyDxX/XGSf0ytb0bHHqNQfaJ0tvJ11aaaWb+NlFxf8v+U
fzF13QiVpaofmFqX8wx4fhfq/kbo/j7S/X2q+xtSWF8/pnb78Pwkn6i222Re
vw9LPlXyYYwl+WL1P1f9V6j/Z+rfXPJw9W+v/t1Uv0Pq+XqmyvZGf6K3mP9K
M3j/Gudo9iP9nqv2P6nsBI2/WWz9+KCud5ba7qP8ANX/kPpZVHS9b5Q+0n9c
t+JnwLNYWnh8rnNqzToYXXyq2vWU/I9+p6jtLkrLU88J5sZk9kfl1+eZMF+V
XpO8UNeYwlxTOkx9r9b/u5S9ROVf6f/WVWqgfC/1G6zx56OHWXvMMZVFGuNa
5acqbSx5XGrbB5sG24b1dFFsnbyB5EcS64aLJW+Y2R46MfKeyN64rtJ45Z+v
2B76U+0nx96jpiDr/vqylzHPdT+DUusCrsF6rbAulb9XZZPU91TV36r2eyhV
sA9Vf6fqW+k/DVK+rsomqO09qh+i/J7MMdW3Vv0ZzCXJM9Bvse2Fh/S8Byk/
Q3120L2sozY3S74ptv7dTGUXYp8oP1b3d22wV76tev/C5sL2Gq57O6xme6+T
6q9WWR+N9bfSYI31utKZ2Ipqfzj6QW1m5dYh6JJZse2ZJrrO/bFtXGzdJ9R+
jPJ1VD5I45+msrvU/hCl+spfgk6veA4yF7ExsTVbYCMrPyXou/9VbT8x/85U
3ZX0Uf0nSgdIblex/b597ufNcz9F1/uvsK13AjaK8l1V/pPkHdX+3dQ2Hrbe
+ZHXx9/q3y+snf1q1ufjVHdk0FeJ7uG32O/wNo23XWb9+wDPUPVnlNa36N2O
6v9x4f2oWdhfq6r/RfIgzBTle6o813+7WvKuzD2lDso/GXt/j9TmZ+UHKHsz
11P9bOWHBJuE9TlFcv+K9RXjr1H73ZhfyjfJ3bYNz6lm+4Gx11HZ+8ofpGv8
jS0c7Odcff6S3EXywbreLiobpPwCpZ0yXx976FF0nPL/6t7n6vqnxZ7fL6vP
HbFt6B7oW13/DtaT6n7W2C0k3y75Esk/ldbx6Hp0KPbhmaX1L3q4U81zjrk3
N7Y/sGVqewWbDtvul9T6sqr7OETy14XXS5Ngr/1X9do7WX0u1jVTjf+76tug
D9X208L+En7TULVvqvu7We3/Sa1vh6n9cWo7WPWdJY9U+f3Yr7GfB8+HPDqz
A/qAPUP5t1S2V+Y9ir2qWWx/bJVSD+WHYsMq/6jurw3zW2Wd1PYb3eNRkr+U
vK/kNZL7S26lMf9T/mn16Yz/ofqOqt9a99deYwzn2TG/dP9t1XYqugP/VvV/
Yu+ofi/mc2HbpKvadFd+otqfjb+qMVaobR3JA5l26r+32q+Q3AF9HOQvsVfU
fz9sktTP/1jl7wl7Vj2NsYXG6q38aWq/Uvc8PPaaZb/sp1RwPfZ35bszx6vW
KV9rrANVuZTnrX7tat6HeLZN1KYP9jD2Afau+neTfBY2k/LzY/uIP4b1zTo/
i/66n4Hqe7LGG1Hzc+B5HKz0Wer11UH595U/u2Z//IzIa4K1wZ7H3tdb8miN
8VVq35V75t7BEcATPq34ffagTHUnVWxvfavn11P5rVXeQeMvxs5hvin1Tqyf
2rCfqO1w1b9SeD9oFNoX7P/B1uoi+WCV/6P6YRpneub3zvvHJnqedyT5ndhz
8C/JDXT9c3S7IxPvn9iY2JqbB3uvDT5p1XO6LXut+h9TNeZxIvuH+p2t/FlK
tyr/ptq/AJDCGLq3oUqrK9ZBq9X/LdU/pLatJC/FllbbByXvLPlFyc+q/grJ
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
            "]], Polygon3DBox[CompressedData["
1:eJwt1wm4zmUax/EXh3NeB401TJRtaiqUfTuIyJ5cjUqRNGVkOWYqDGrGZFeW
IctYsh3UWLNmK8Y2MyEquiZjaTHmwtBEjYj53Nffdfl5/7/vc9/P81+e5T6V
euV2GZA/lUptp4I0MDOVap2RSs0vkEpV5HcXSqVaZqVSG/KlUlew+oKK8oPS
qdRkcdewH6lU4VSqKf6uuMt8DXH5+Vz9tRI3D6ugv13664HVwiZibGqt/36J
NcBmY0Wxjdg8bAL2PZaH1eD70YPYTKw8tlPcs1h9bBZWBNuAPYc1xOZixbBN
2Bj3vAarTiewx8WMo1/zR8T1x4rzlcW9LP5vWDesCj+KVom7h/6JdRX3B+xt
vmrkYw9jr2Hv8NXoKNYZm0wv88f0Nwgrzb9AzbApWBnsfeP9FuuO7cDaYWew
oVgPbCfWHvs3NtIYK7G7o0/sF2JGY6v5e+k49hg2hB7j35PbBDsu9wPsJLYW
q4Pt4OfSeOw7bDFWnZ8Tz4L9B5uOVeKnRp/YSWw4Vpa/6hufN4H2Yh/65hP5
0fgAccXMiSKui9Ir1AfLxn50H9dpR8TKvcX1aW2TPcMIWua6Cn1qjE7yRlF/
vqjcwq6z6S2ahF017nJxdfkXqR22BKuG/V2/g7HO2CqsOnYI+xWWg70R8xbb
Fu/evRRzLxs9wzzqw+8TV8p8PsCvE58Xz0BNXU+SWzrWjdwZ2HDsNDYa+ynf
m5pgE7CS2FZx3bH7sdcLJGvtXSzXOHnMrVTS+MP5V2MtuJ7u+kYsEP5Jqil3
rFz/Uqvx4d7VXCxNhamC99NAzkr3/I2gqvq8LG86DdP+NTZKbnn+KboPG4/5
Sa3R3+yY08x57E3sDv5pY7THlmLL6Do/Em/u/uYaK8t1OjOZCzEnSsRz0Cxx
/eg3ck/Juyo+k/8jnYsxqIf484WSNRxreUfMcxon5pC+v413qa/K2g/zU/FL
2m9Qbc94CV+P3Rnvlioa58rN+RbzLifmi/yZYj6KfSPWmZhv5R/i39Tnx9pb
y73o/q7z1cV2EPcXcSPwGnyJmM9YvtjTaDo2EXtJP1n8S9pK8hXxuvL6ySuD
/4kfrc+6sSfhO7Ex/F+1V469Vf6emCPifk9LXVemT7R11F83rBG/QO7t2GZ5
tbHO/EjXxfV3RlxprBLWI/rF5vBT6Izc4thYz7bTuPNjLmD5Yv3rrwmfK+4V
/oL8GVgFbCD2KnYRm4ndhr0R7zDmEJX27sfqbzfN0Petxphu3CViPsHewSrw
F+jP/Bfaf66v5/1+Hvu+uAE02PUZfJwxWvL9aRD2L2wsdid/MuaXfgbLbR5z
GsuL58PW0BX38omYXVQvzg0xX+pjN7855nisM+wzbAs/Np7P9TT99dP2k1gb
sV6xqVhvsU31v5geju+FdcG6ZCb7bOy3K8QOwTeJ6Yu15N/my8Uc9vsMVhcb
7toUTK0rlHzP+K5L8E76XST3vThXtI2mz7Q9ImYE9RXzBFbWuMXFvEUt5LSj
YZ63oZh5WGO+FQ3BamE/0F38ALkNYs6IWRjzOfJoi7gHxPSkOsZYLK6tuHvS
yZkUZ9NsbA5twZ6k5vFexEyLNcw/JG6/uPn4InHbsMJZyTyJ+VLPONl8a3wr
lh21hLiH4syK76m9FD/NHPmHvraJzea7Uin5t8R6o3Jx9sa+QGv5jeLm6e9S
bH7x7vkX47zISFi0XYz+4hthzcWcMMZ/xX2PVTNuI2yVd9AoK6k5YmvN9d9A
2qivDXRXzNVCSR2TI24FdizePfad/vLp6wSdk3sK/4JWpZO6IeqHr/ivaXU6
2RNibzjLn4v5ig2j2e6vDO3T1kLMAprB56d1WA6/3TNtox3yqhj3UW3Py33G
7368u7hz7uls7GHaG8f8E3tWbjlx94rpzd+PfynmGn537FVxH56tCdZXXG7U
C2JbUgu+Nz2HHY71aozL8h+NGo5f6HoBbY0YekLcLryjuBN4L+wRbDOWg30c
5yo2EysRsVizqLew32UkZ1ScVfVjj6Tlrge6vztotphNYo/EOcFP0lZNzLN4
l1jLsU71dzhqR+zxjGTPjr37ZNQTYjvJKSV3c5ybYrKwOvwgWq+tBb/eGIe1
d4/aBauSlaylWFMPxpyhuXIzsLbe84k4T2hpOql7o/69wffTNibqV/k5rg/E
msGfjrVBlfS3BzuKzeCv3NxrlvjNo+3pZG3GGh0qpj0twCqKnYB14/dH7YA1
SCf7QFusDc2Pb0G1M5J1Gut1e8yXzKSGj1r+A34lPzMzqeeirnvNuLXkTaLj
sS/HOYo35OtRV9fjsa+07ZVX3r2MNW5XY+6K2kHMNe1Xo6ZKJ/XdMb+9Yi92
PUN+trHWF0pqhKgV+qSTWu5kPG9W8h3ie9SmTP60mEXe3+1yKtA6cQfj/cVe
EGeMto/4heLy4nyL726MDrHWojbh/xfvNer2zOTvlCk366Ooky6nk3UT66cn
v8L1+3EWRW2SkexXsW/Vi5oVW8DflpHsebH3DcVm8SXjjMGaZiZ12Dy+HJWN
8WN+0yLXFemguLaxNxdO2iOuc9R8UevFHh21Gx0Q1ybmHjaVL0LbsPo3a96o
fV9IJ7X1qfgbhV53XYDWi7sv/lbA2vBrvIOa2B7P901Wshc2c71P22pxy6O+
cg+5BZN1t4L/PM4t12XElY498OYZ8EBGUvtFDbiffyrOozjz+J8ZozFfNStZ
o7FWP9W2UV8XsKPGzdFXTbwg31Nsx4ykHoq66ENtP+DnxLWKv7nELYt9jjpl
JOd5nOv7CyW1aId4VmwdHeErZyXrNtbvwahr4m+oOKfiOePvULl75f4fLeDk
FQ==
            "]], 
           Polygon3DBox[{{1790, 1789, 2473, 1492, 1493, 2474}, {1923, 1132, 
            1287, 2455, 1798, 1799}, {2418, 1152, 1011, 1010, 1308, 2030}, {
            1916, 1128, 1681, 2490, 1787, 1788}, {2229, 1533, 1010, 1011, 
            1534, 2230}, {1792, 1791, 2452, 1272, 1273, 2453}, {1799, 1798, 
            2475, 1498, 1499, 2476}, {1997, 1265, 957, 958, 1266, 1998}, {
            2180, 1471, 948, 949, 1472, 2181}}]},
          Annotation[#, "Charting`Private`Tag$2631#1"]& ]],
        Lighting->"Neutral"]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0r1PU2EUB+BTRasgUBcnlNRPQCAENmPDH0AnlaUupImDDpo4aWLCwEcb
QwgxRkIM6SB2dZGFVBjEOGsRgWqto/EfUBMTnxuTts/7O33Pue+9bbZ479rd
VEQ89W4cikjW9/mbr45GZLjBXr7nMOvMscU8f/Imh49FVAz4I9+RRw9HrMnd
6YiH8imWeZrLPMcqR7jOcW4n+8yZ1tepvy7vO09NzrZF7Mhn+Snp5y7P8zMv
cI8Xuc9HRyLe6MuYc0ntQO2K9aZan9yQ+/mFA/zKy2xykN84xBavmzWj76T+
7/KBM23JBWf+KOf5ljm+Tp4FXzLLZ8l1j0cU9Zasx9xfVe8D6x71EfUXcpe9
t9V+eX4F/uAEm7zKDxziO55Jfh/7/ybfO0s3ayyZUzGvS15lJ5/zBFfYwWW2
c8mcKWtHiEn3N6/X0eKWep/6nPyE6WQvlWORtsYCPZp4TK8o+3D5uOHL2dT/
/9I/5vRGnA==
        "],
        VertexColors->None]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1711, 1964, 1070, 1710, 2496, 1883, 1712, 2497, 1884, 1713, 
        2498, 1885, 1714, 2499, 1886, 1715, 2487, 2500, 1887, 2336, 1214, 
        2393, 2606, 2288, 1965, 2364, 2382, 2690, 1888, 2347, 2346, 2392, 
        2699, 1889, 1716, 2501, 1890, 1717, 2502, 1891, 1718, 2503, 1892, 
        1719, 2504, 1893, 1720, 2607, 1966, 1894, 1967},
        VertexColors->None], 
       Line3DBox[{1722, 2394, 2554, 1721, 1083, 1723, 2505, 1895, 1724, 2506, 
        1896, 1725, 2507, 1897, 1726, 2508, 1898, 1727, 2509, 2395, 2555, 
        1728, 2363, 2396, 2689, 2387, 2386, 2510, 1899, 1729, 2511, 1900, 
        1730, 2441, 2512, 1901, 2074, 2442, 2513, 1902, 1731, 2514, 1903, 
        1732, 2515, 1904, 1733},
        VertexColors->None], 
       Line3DBox[{1735, 2397, 2556, 1734, 2398, 2557, 1736, 1097, 1737, 2443, 
        2516, 2076, 1905, 2075, 2635, 1968, 2289, 1906, 1738, 2517, 1907, 
        1739, 2518, 2399, 2558, 1740, 2400, 2559, 1741, 2401, 2560, 1742, 
        1970, 2293, 1103, 2078, 2444, 2519, 2080, 1908, 2079, 2636, 1971, 
        2082, 1909, 1743, 2609, 1975, 2084, 1910, 1744, 2520, 1911, 1745},
        VertexColors->None], 
       Line3DBox[{1747, 2402, 2561, 1746, 2403, 2562, 1748, 1978, 1979, 2611, 
        1749, 1225, 2077, 1969, 2178, 2292, 2291, 2612, 1981, 2290, 1982, 
        1750, 2613, 1984, 1985, 1751, 2653, 2180, 2181, 2652, 1752, 2182, 
        2183, 2654, 1753, 1988, 1989, 2637, 1754, 2357, 1990, 2358, 1991, 
        2675, 2337, 2294, 2295, 2184, 2445, 2655, 2081, 1972, 1755, 2608, 
        1973, 2083, 1974, 1756, 2610, 1976, 2085, 1977, 1757, 2521, 1912, 
        1758},
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzj1LgmEYhuE7sg8dml1brKDZ6EdE0OAckqu5VmNTBWX4EypwbixBqiUV
I9cayr7zF6QodDicXOd9PffzvO98fnujOBERa3idjthKRkymIl54gSd4l9dm
IjKzEVPmY/2bLi1XcYI9/bKs25uT+3b7OMQ1LhMRV/LM+ZEcoGov616N3+oX
5J189/aKvs0fsM4/dI+8g5z503zO73GBTV3d/TKGOEVD35UlZ2XfuuEHGKEy
/uZ4T593vsib9v/kl7d7/neJt3Tf5id7O/yHP/Nd/sv/AUcXM2s=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV0LlKQ2EYhOFPiCeJjXXKaBeX3psQ0bjFSosIFopLuoAX4AZRcem9DI0X
IAhGcwHaxX0XBPFJ8TIz38x/ipOfWxpd7IiIMdwnEQPZiEGsd0W05CKf8HX6
IJdpWn7ka/wwX8hEXKQjntxu+Zz7HV3W9dEVbLYznm02OiNW+SIuvZugWxjH
i37Bu1O+23fO6JXNIT1ARfdqc8Qfo6Hbob/YxpD+TT/Jn2MK1zYnvjWrq8nT
eLcp0TXM4MYmo9/n/7CHD5td70bc++WmzafbvFvW7av9P1IR37Qq97j34kf+
Bzq0Ms8=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwNzL0ug3EYhvGnVNuXSFixOAI1K/ZapOliJGEgYdPBR1EfcQBNrDTpIBJJ
j0FxDv1COAkR6W+4cl/3/fzfd37roLSfiogyfjMRI0nEKFJYRWU84igbscKX
sY5b27Htz/uufsL/+SPv4VQP1HkfC7mIe6R51d5Bi+/5z5R8cevaHuSYfsbb
vMk3vNnkPVtRNrCbjjiU26hgB333Nbnk/Tmf9u2r/o43DGzPtoJ7Rl7oefs3
ZvQfuYiSe80tiyf7AJc8wQe/khP45NdyEnf8CznM4sY2J4d69yyr
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVz71KgnEYhvFHy4/MPAeh2izbInBulIwMpA/RIGuopTqGZoka+nLog4g6
gIaWDiJt6jQixH4NF/d9Xw/vH95i67B2kIiIVRQyETMTEbOYxrddyUXkZUHu
czl9St/Ts/p11of6Cfcs09yFzNvLbg+4R4q/k23+1f3L7ti7GNcfuYbblb2D
AdeWH2hhzF5y39Yv0USf25LH6KYikvaGvolPvScXffPi7YR9Y9+ihBX+jB+l
I87tEY64J27ITeod/Vd/+/9ve02uo44f/l2e8lU5jwWUMeetPywzJ4k=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzL0ug3EUB+DTpEmrC/VxATZzDTZRiaRDSdQisdmqVYNFu4pEfbQY3AI2
UpsrUFxE9UMvw/MOT37n/P7veZcPTyqNVERUmM1EDFiZidikxnkuoig32OXK
fumbOYb2tszzah7xlPWNfZ5H+5iS7pPrpLf3qPtPX/erK8sbeSYP9FXZ5IiR
fltmkhv2vQ91Nd0Xdcb2HfnMaTqiJY9pMPH27m7d3a15wfyt/6HAnr6T9Lx5
m/Ci79oX+bPfySU+zFPuzVvywu3UvGpe4yGZ3f4D6SAs/A==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVz8suQ2EUBtDdgbg8AMXIyFwwMKlE5zjeQHTYc8QQ5UgMGLtVzN29Sqnb
I7RUG/EGVgcr37f3/k+aTq1nSVqIiITRwYjp4YgqtZGIslwi5dA85v6tn8gi
l3qH2aGI0/6Nln5kt+V9W1+mwQod95J9pu9ybd6Tq9RI6NotevOsv3Bj/pJN
Xtl269m96bf935T3vPPAhvuv/aa+z51+II8HInK5xp/djvygrX/Kiu8e5RNz
XPkPP8zrZ96M0zWfywl6+oWcJPftjLmuL8h/baUyew==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzTtOglEQhuExhiBYaCEdoKzCEGIMUlHQ2NjTw++lYSuCK8BEY6FbUVTA
ngiiiYkN+PzFm+8yM+dU2slpdyMiWihlI5JcxE4+osif87t8mf/B4VbEha6h
K9Ey+pijanaHF9zj1/4z3TPr2J/JM3mEV/zJj2Zdszd5KNfoNW3SM/2cv7RT
51f8F67kE3nNf+PI7pMu0U34dwTGuDX/TP/KRHzQB2xiioKbGyxwLOfpNnLo
eSurq6Pvjf30b/2AHmCZ3tIK/gFK1SzK
        "],
        VertexColors->None], 
       Line3DBox[{1827, 2420, 2577, 1826, 2058, 2059, 2631, 1828, 2036, 2104, 
        2037, 2633, 1829, 2282, 2628, 2039, 2106, 2040, 2224, 2316, 2228, 
        2345, 2686, 2042, 2335, 2043, 2284, 1830, 2629, 2044, 2108, 2045, 
        1831, 2664, 2229, 2230, 2663, 1832, 2231, 2232, 2665, 1833, 2049, 
        2110, 2050, 2634, 1834, 2286, 2052, 2287, 2053, 2662, 2226, 2317, 
        2233, 1328, 2112, 2054, 2227, 1835, 2630, 2056, 2114, 2057, 1836, 
        2546, 1949, 1837, 2547, 1950, 1838},
        VertexColors->None], 
       Line3DBox[{1840, 2421, 2578, 1839, 2060, 2115, 2061, 2632, 1841, 2062, 
        2116, 2579, 2461, 1842, 2462, 2644, 2117, 2063, 1843, 1350, 2326, 
        2065, 1844, 2548, 1951, 1845, 2549, 2422, 2580, 1846, 2423, 2581, 
        1847, 2424, 2582, 1848, 2066, 2327, 2583, 2464, 2360, 1849, 2463, 
        2645, 2118, 2064, 1850, 1173, 1851, 2550, 1952, 1852, 2551, 1953, 
        1853},
        VertexColors->None], 
       Line3DBox[{1855, 2425, 2584, 1854, 2426, 2585, 1856, 2067, 2586, 2465, 
        1857, 2466, 2587, 2068, 1858, 2427, 2588, 1859, 1180, 1860, 2552, 
        2428, 2589, 1861, 2374, 2375, 2694, 1862, 2378, 2590, 2493, 1863, 
        2429, 2591, 1864, 2430, 2592, 1865, 2431, 2593, 1866, 1188, 1867, 
        2553, 1954, 1868},
        VertexColors->None], 
       Line3DBox[{1882, 2073, 1361, 1881, 2605, 2439, 1880, 2604, 2438, 1879, 
        2603, 2437, 1878, 2602, 2436, 1877, 2488, 2601, 2379, 2381, 2380, 
        1876, 2492, 2695, 2377, 2376, 2072, 1875, 2681, 2071, 2600, 2468, 
        1874, 2356, 2599, 2489, 1873, 2598, 2435, 1872, 2597, 2434, 1871, 
        2596, 2433, 1870, 2595, 2432, 1869, 2467, 2594, 2069, 2070},
        VertexColors->None]}, 
      {GrayLevel[0.2], 
       Line3DBox[{904, 1071, 2496, 905, 1083, 930, 2557, 1096, 945, 2562, 
        1106, 955, 2564, 1113, 964, 2566, 1709, 1120, 972, 2570, 1681, 1128, 
        2697, 981, 1684, 1136, 2698, 991, 1687, 2692, 1143, 1000, 2576, 1150, 
        1008, 1334, 2631, 1157, 1017, 1335, 2632, 1165, 1028, 2585, 1177, 
        1043, 2595, 1191, 1058},
        VertexColors->None], 
       Line3DBox[{906, 1072, 2497, 907, 1084, 2505, 931, 1097, 946, 1240, 
        2611, 1241, 1107, 956, 2565, 1243, 1638, 1114, 965, 2567, 1121, 973, 
        2571, 1129, 2524, 982, 1137, 2531, 992, 1144, 2537, 1001, 1315, 1643, 
        2627, 1151, 1009, 1316, 2633, 1336, 1158, 1018, 2579, 1338, 1348, 
        1166, 1029, 2586, 1355, 1402, 1178, 1044, 2596, 1192, 1059},
        VertexColors->None], 
       Line3DBox[{908, 1073, 2498, 909, 1085, 2506, 932, 1221, 1222, 2516, 
        1368, 1225, 1242, 1226, 1583, 1376, 1639, 1664, 2683, 1246, 1678, 
        1247, 1677, 1382, 2638, 1260, 1261, 1607, 2676, 1492, 1493, 2525, 983,
         1508, 1509, 2532, 1510, 1298, 1299, 2538, 1389, 1301, 1644, 1302, 
        2542, 1645, 1394, 1594, 1317, 2628, 1337, 1318, 1399, 2644, 1339, 
        1349, 1340, 1030, 2587, 1356, 1403, 1357, 1045, 2597, 1193, 1060},
        VertexColors->None], Line3DBox[CompressedData["
1:eJwNzTFLQlEYgOHP1KzmiISWIKXGpFqCctIhGmppERQXB+1GOkXgHxDqBzi7
NNZUa0OCf6EaAmebosChZ3h53/N9596z2bw6T1IRcYq7dEQpE/G6HHGvj/RE
j/SbvshGnKxEjPXxYkQZ73rPrG73oTNmaXzpsVlWP+olfuIct8x3+dp3JZ6Z
/+Abbbsz81/9h0/vd8xSWMDUuc/Pdqv8wl33D/xnH4lZgde5xpd2eX2ot9DT
cyR6m/v2t3pHD7iBOirON6gi540N94a8hqJ+4AL+AVAdJJs=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwV0KlOA2EUBeBLoIQlVQ2URWE6CWgaTFOFqawiJAjGQlpEX4GasnoUm2FN
6sBiaLBUQQIvUNWAwPCN+HLO/9/eyUyX0ma9MRIRdU5GI5rjEXu8TEacOlfH
It70a72mv+td/UtfnYrYzkV866l8Zd1uT5bNBu7v9QfueKRDnwN+zY9kwc6h
/HNes/eh19x9ymBWn2HHbEPOMc+02aLcZIFd87y7cwZcUOSKqtmTvOSZG364
JaFhnnjGFiVa7paz73FfkSvZ+/nuY+849B9MyDOKJH6zb6ed7Tr/AzJbKrg=

        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzzFLglEUBuAjavCpuxENufUPbLRZUEhIIlqcpKGoVsGxmhQFhULddI+o
qaIf0NrY2lwQRBT1NDy8555zLt/9Sq3DrYNURNQYpCOOlyJOOOI+EzHUq8in
JGKhrqqf1dfqh2zEXi5i0+6j+k7vzbys13bO6Sdsk2dfvyC/7PTNe1wx4IUh
acYU7Y3kjjtZecErlxSYccOu+VTeMmfBCiX3K2Zr/9+lzAZds6b+qnz33h/Z
dm6Y/aq/9fre9+EfEznhU70s1+3V7ZzaPeeMjvMfHTsplg==
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzj1LgnEUhvETvWkkSUtLENImQU5NRmARtRjZ1JhYNEQK+SlCaAlydRYa
o6HVGhxC25qlL2AOFkQ/h4vrvs/5P4cnU66WrqciooiH6YitmYhOMqIp78nv
clvuyqezEUf8rBfmIm4x0G8WIupyx/6SX3mX3zjHNfsv75bknlkf+/IHJ+yW
5Sf7P1TQc3/RfN7+Si/Jn2YJva6f6AM9rVcxxLnZujvfk3/kEb94uyGP5Tz/
8DH/8jZv8oXvdvhML+MODayYH5gf4t6dFNbMWryKrPw4Mf4BF+kovg==
        "],
        VertexColors->None], 
       Line3DBox[{921, 1079, 2502, 922, 1217, 1218, 2512, 940, 1228, 1370, 
        1229, 2519, 1372, 1476, 2655, 1232, 1253, 1233, 1542, 1380, 1488, 
        2658, 1256, 1553, 1257, 1552, 1386, 2640, 1268, 1279, 1269, 1609, 
        2678, 1498, 1499, 2527, 987, 1515, 1516, 2534, 1517, 1311, 1392, 1312,
         2539, 1393, 1581, 1313, 1630, 1314, 2543, 1579, 1397, 1538, 1328, 
        1344, 1329, 1582, 1400, 2645, 1346, 1354, 1347, 1038, 2592, 1186, 
        1053, 2603, 1199, 1067},
        VertexColors->None], 
       Line3DBox[{923, 1080, 2503, 924, 1219, 1366, 1220, 2513, 941, 1230, 
        1371, 2636, 1231, 1373, 1234, 2608, 1255, 1235, 1381, 1258, 1604, 
        1259, 968, 2569, 1125, 978, 2573, 1133, 2528, 988, 1141, 2535, 997, 
        1147, 2540, 1004, 1330, 1618, 2680, 1331, 1398, 1332, 2630, 1345, 
        1333, 1024, 1173, 1039, 2593, 1187, 1054, 2604, 1200, 1068},
        VertexColors->None], 
       Line3DBox[{925, 1081, 2504, 926, 1093, 2514, 942, 1236, 2609, 1237, 
        1374, 1238, 2610, 1239, 961, 1117, 2522, 969, 1126, 979, 2574, 1134, 
        2529, 989, 1691, 1692, 2536, 998, 1148, 2541, 1005, 1154, 2544, 1014, 
        1162, 2546, 1025, 1174, 2550, 1040, 1188, 1055, 2605, 1201, 1069},
        VertexColors->None], 
       Line3DBox[{927, 1215, 2607, 1216, 928, 1094, 2515, 943, 1104, 2520, 
        953, 1111, 2521, 962, 1118, 2523, 970, 1653, 2684, 1654, 1655, 1289, 
        2621, 1290, 2530, 1613, 1694, 1695, 1693, 2693, 1297, 1668, 1666, 
        2688, 1667, 1006, 1155, 2545, 1015, 1163, 2547, 1026, 1175, 2551, 
        1041, 1189, 2553, 1056, 1361, 1362, 1363},
        VertexColors->None], 
       Line3DBox[{1057, 1190, 1358, 2594, 1042, 1176, 2584, 1027, 1164, 2578, 
        1016, 1156, 2577, 1007, 1149, 2575, 999, 1142, 2685, 1688, 1690, 1689,
         990, 1135, 2691, 1686, 1685, 1704, 1703, 980, 2679, 1127, 1683, 1682,
         1702, 1701, 2696, 971, 1119, 2687, 1665, 963, 1112, 2563, 954, 1105, 
        2561, 944, 1095, 2556, 929, 1082, 2554, 903, 1070, 1213, 1364},
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzD1IAgAQhuELLdChqSXCoZaWaHFrCNwaQi0MA5ssCRsKggabWsI5sK2a
hWbXaHJszUY3dbShwBSfhpfv77j16tXh5UJEHGAzGfGKo6WIEhrpiOJixKru
BRk5TR+wwk8TEU3+nJ+5+5bv5Jy8Jf+i6M8PHdkatop8a9+ga/898vyQ9t1c
uzm2N+VlPGOAJ/TsF/YOf48kHrHjvkU/7FV72b8v+Y/v0T35xs0n33VT0dd1
WdR1BdtY92Yr0RP5Xd+R9+VZKqLN5/gJ3+Kz/La7XT/OcIoa5ptmLQs=
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwNziFIg1EUhuEznANnMFkEg82ytiK2ZS3CLyiyoBYZbMG0wZQtzGVB0OQ2
DDqXxSZoMKiYlwSrQWXWqU94Od95v3vv/y9sV9bKqYhIsJiOGKCWiaiihy6O
shFz/Dlacoeblo8xa/+diGjLKX7PHuYP1+AK9txkxDe+8MHX+F3+0z6PK1zi
Xbevu5XbmEEXK97rmEP9snslZza4FpfBGd5wik39q3M7zjTtY/PFXOKfzUfd
Fvck17HOj+x3fGI+cEXu3rzhVrm/Kf8oF+SGru/bA1zjhG9yed2FvY5DHCDx
xj94KzE1
        "],
        VertexColors->None], Line3DBox[CompressedData["
1:eJwVzLtKggEYh/E3KiGppmgpi7ZsaKpBCJe2ogYD58o91wYHoxZtKYLmwCmh
ITQ0OuAVWJdgfncQNOfP4eF/eA9rp+XC2UREHCE7FfGE8xSfjljiH9CQV+RZ
/g6L/P9kRI3PT0fsyZv0T5e1u46ybmN8p8/RD/qLOj5Rwzve/HilTSTu8+4y
9lexPL5H105ivs/vmA/5H2zJHbMFOpBLZt9+XPFtXKKFFzvP9BYndr7oBebd
VekcPda37fXlnh9FvsQf6BO+ozukITf5/kzErvzo9l6+1m/LFfkGI+ksK+c=

        "],
        VertexColors->None]}, {}, {}}},
    VertexColors->CompressedData["
1:eJztfXlYzdv3PzImQyEyyzxnapAsc+YhswjJXK5ZMs/JFBFCZQ4lKQ1KKhWS
lNKoeR7OeZOpRH7nc+7vdNz387y+77ab+x2e2z/nedazW3vttddea+1hvd4d
jP8wWFqjWrVqRxSrVVOohv+0rtX8rnolgvTXj7u/ZJonrd7UOmnFqxgKj32k
1nN6Ch0Z8DmwwdAQ+jTc1GfV47d0xMn7mrtHNhnHNMv90eAlKSmqX/IweENn
rFroBl7Op45ZswtvrIui6sa3U1osjaT9nwcPVr9bQDoNAqd9OxJNXcrb3BxR
8oI6n79tltO4kBYdKeytZhBDm1zmu3frH0Z5zulbdToXUqpR7+hkixjafzVg
u2fMc9ge8UfyIPnReJF+WPUp2l/jomlMOpUM7DtlstkzMu0bGH7JO4FuJjfa
du1gAZmbam4JGRJNezzHHI1xCac71sd9lWeJSe2+Vrd56YmUGPV2QHcDT9o1
0N3yyTaORiQ4zSltkEZOrU2nRWx2ow5vTqpMPs3RUt2xonYd0inu4wHNP5Z4
0DaNLu0tbDnyanNlrIVOOr0e4HPJ7boH+fa/MvyZpP3i8s/RW7ukU69ON9aU
r8PtEX8kD5IfjRfph9U+EX8t/4FllzdwJD5Q96n90lQKbn7PMnjnPToamTVp
zmeOXPX7zZ5hmk2Gk6/tUqkX8P/n9x2FWnrUfaeZRzqjPuoqZkRW0G/fsrZu
HZFHLdrdydpdK7qCvqAo8cu65Xlkv3S0t8fJqAr6soAXPTTV8yjWLHlHmW2k
YHvEny8Pkh+NF+mHdb2j+RXSZ/z3d3HntQup68gfk6eEJFXQbx7SLNhlIqKs
S8OTNvlmVdDbN5g50OGkiGy3u97asDO7gm64ZqG6lZqI9IdNq3toS2YFvWHN
Hxe6xBfRuUFRgR/nZwi2R/yRPHz50XiRflj9J1pfQvaJ5O+d9NV/+DCO1Js2
NVn2pKiCXqRee7jBdo4CB5rv/xwqqqBX6zNnZqkiR8Wbiq50Si6soG9XnJVv
+EJMqhorfIaEFQi2R/yRPEh+/niRfljjEfJvQusR2Q8ab7jdBJ0fPzhSrTft
+jfJr4wurje/1cMYjrh2G8U/Rsnppk1mfha5cjTmw7nbZdfFgu0RfyQPkp8/
XqQf1viO4ousX+QP0fpF9ob0Y93uoGarDxzNnf7xk/6zn/Qm7pixo5CjVg3e
t1l0U7g94o/kQfLzx4v0w5ovofgu6xfFI+Q/0XpH9on0efrRloR7HEfhW0du
O+AjrH/EH8mD5OePF+mHNf/8156r1p7/9c//jH/+N9/4Z/KNf/PnfyZ//nc/
+M/sB/893/hnzjeqgb9/z+uq9rxOto6UQ+K0DyRw9O51vxeec+VxOSb70nQX
f45Knikc9cyWx/clYv+VwWUc6Va/ufiBSN5eZfxX16bpHDXP2uxjbCFMR3xQ
v4jPt9FaLu8lefURF23HSw+F6axyVhX//2n65M+7Xo8fne1GRVL8u5gl+h5e
ZMqppBm0jCWrTbn7QwL8yeHlvC7+y29Qifdpr2FZwVSU0uZIgqGY9vd12VJc
lEh5Fl5O1dt4Qjor/2cNMzeceMJRRC/3+e/7Z5JZXPvcTzUfUvVYIz0fE8l4
xm93ntQ8hbaZ1Twv+sOlYlw1hyd65awooL3O2pc7vYmvoIum7VhQKCqkb91f
LHk3M6WCvm7cCIW0TBGFK9+6k5OeI9ge8bd37bToXp8cOpg5rG4NpSeC/Pl8
0LiQHoTkOZMVvcHMv4jeXnNyeCFKFxzXiGsuZomSPNPC8OTGheEFgvQ7WxW0
9+0U0/yxjopdd+ZX0GeNPvH58gGOQucF7hjAiQTtEPFB/TYsutf8j7EcHfze
7KxfjjyPHd74wqD7x8U0a/aOM6rB+dDOhfSD+kV6Q+NF47q68swGd8n6Xev1
JaLxDuF12v/p21kBKzjysC69ZrJezl+lJPprUjFH9Voaemg+5QTbu/3hfFjj
P36qa+seBq/FgnQkJ+oX6QHxQfpB88s63qimU8fHSvzzrVaj9Lv+5J8R/dTQ
dg3TEiX+XNXl/MmFcnrvNP+4UWKOlDqXbFrkLswHtUfyIz58PSC/KjSPSD9I
TqSHSCuXBFOJnGdLO11e6C1MR/xReyQnkoffnjUeCemNdd5Z9cBKR3Iiefj+
REgPrOsR+Ulk58gPI/kRn8ragxB/Vr/KGr+Q32ONLyi+I3+L8g1WedC4Jh76
EmYzjyPn6JE6nQbJ+122ZfAjr+McHQ9NaL1ZVTiOsOYPSM6/m7/9ap6J8geU
B6L8BM2vwmEbbYWHYpoe0sd9zK4CQTrij+RE/Q45bXzd2yGPLpRpjd6z4LWg
PhH9sOG+UdnbC0mkOLbuFb+3zPnt/7T9CKIPzJqzNLR9IXmUikrfrYuhlq25
Oz3zn0M64hM86EjWfjuOzM13Z75Ylk71e13t/6P9A6hPoflF7dH8Ij789r8q
J7JPREd2juIRao/8CeoXyY/4I/+G/CHyn4g/nw+yKyH+KH/gt2e151+Vk1Wf
rPsXFMdZ7YfVnpG9oX4R/e/ardA6ZfUDlfUzqN/f7T+F1l1V0U0cak/K/8TR
/Ai11stj5HZV/YldE2NJnqnS3ESl30/5vyi9ICDjM0eZcbYtLsXL6QPqNAra
K8nzX1ufr2XqIafXN+jjFP+eo6FHfBvHBsnpM7yLGj2Q8N9/2dP17E/vB+yd
VFaGSvgkz222yPqBMH/UPiOx7trMdxydrn904X1/4XEhOVl/ER9EZ9Ub+kXz
gsaL+kV6Q3pmpSP+yB5Y5x3xYe2XdVys84jmC/0i/oiO+LPaJ7IfVr+B2s8w
8J3WoISjE9NDp91MFuYz5eoN+1bfOSp8PGz/7g9y+uJBsdrDyzgqr39tw85C
Yf5V1X65h8WdTl848uFWFvskCNMjBpi/LZDY4eKUFhtf+wu3Z+13Ts/Rts4S
vZU6BTba8JM9v7kb2f2ChN57skFw199Ar6p+WfVTVfxZ+60q+0TrAvXLyr+q
+KDxVna9mJ/TDR5y7jH1uDXytnfNm7T/jMlcx80hkC7j0zx22pZZT0RkN8zQ
YMJM+XnI/cyJ3tPuSvLy+kYn/SfK89uHfXy/HlbnSPXF5s5fR8jzzzmfCver
1RNTkeJMyyd7cwXpBWqW1jq6YjLr26T6IsM8QXlQv75jltM1R456KPQuLFgi
FuSD2o9ss9I/OJCjc5Hxp1U+yOk1x2eGHbzBkZn6nClzd4gF5yW2Z5MHE8M5
GuyVLj7dXk4vXXV/y6YsSb/248PKLOX0SzZ9SjUk/B+VzNyQs03OPzvlx+ce
SRx93/Vo6ptFnKA8SH5kh0ifrHpA84v6/a53Z+XzFxy5hCw4vqCtMN3n6ZR1
rjkc5bXrl2F36qf2n5b76xVx5LZgqM6l28J+BsmD5Gedl8C4U1r/yf9jNMYk
bfgp/0d0JCcaL6KjuID4I/nReFnni3W9o3lE42LVD9IDq5ys65rVPyD5WecL
8Uf2z+pPkN9A8QLpgXW9ID7InyM5WeNLVcU1vn5Y43Xvzpcf2PrdpfMTH1S/
b2JL15wH6q9M9xCUP25V0Iv8NRwtsFu2tdYx+bnQ0JSrtYI1OSoz3XbS2O6n
eJpuoXBBQtd47TzP7byc7nh+/dZ3Dzlq09Xr/Ik3YsF5R/yRXSH+Ds5mxdbR
HNVtaP6sjH7Kl740WHczlaMu21bN1d746/G0rGPz/qlRHC2z6Wh0S1uYjuRh
9Q9IfqQH1vn63XLafv1O4lyOSq4YnP52VpiO/Btqj+ICkp9VThS/0LwjeVjz
lj7xekGW2Rz1fbToj8vHqt5uWfXJGl9Y+0Xzgvpl5cOan7DyR+sIxR3WdYr8
IWsejuRkje+ID4ovrP4KxV8+XSjeWaqHHxjzWUxzu9tMv7+vUJA/kgfJj/iz
6p81z0Hri5UPknPulUGqOyT5dDuThq7jXwnLz+oHEJ3Vb6N5RPkMqx1WVZzl
2wmyW1b6g/Ky/gPmi+nTu16Tb4gSqcZ5N93nap60/WTq/VL/Iup6e1Dv0Htx
VNwgLP25eZDgetk+I3pWj8siUnzdrq1DoLz+SHXqBcV9/cW05dScGj6D5Pmq
kd4OtfN1xeTgPvz0ud25gusC5b1V1S+a99/NH60Xg/pzBtQK5cjg2fmh62tx
gu1Z+SN9vtwkNnd+LllHc96LdZtxsD2r/QiNK8jgTjebIxzlL8zul15XLifK
ZxAfJD/Mr3j0Xx0Xym9Z5Ud80Dyi9YL0+bvtnHX9Vta/sc6Lt+WJL106FZJV
w4J+XuYxNGh7zwvXEp7/ctxH/hnNI5p3NL+sdov6ZV0XrPEO2SGrX0L6ZLXD
v2u3rPbzq/2i8SK9ofXLp7PK/6vjZfVXVeVP+Hpjlb/zsfZdFEeLKS94vkm/
x4lUHHXSNlDsSTucQjusmC2m3IbTv9TNSiTLUbF33472pLvttc1a+xTR1POT
ompcjyMN94fTA2zkft4626jpAh8xGQ0f42e+vaDK+LPy+d8yrv+rehv642xa
9UdF5Nxljk20cxztna05LXaPfLy+Ga171xgppp5/tMmssUNu55f85jU6MUpM
wQvsyh7sy4N8hPRZWf4yesySttWqv5L4nVfdvcwGZVSZnLL2l7N7KJofF9Go
kbdtotdm0xCFF5GzxQX0zuFSjWdKMWR8xb1+/agwytd+p3PmZhE9ql+knLgn
jtqajRo1OyuIuX2XNttqbZDExeE+u5wXf8+iTpNH99HP8ifNJQ5igzMc1T5Q
78rRXukUNOiq3/69Hsztx1Jy8JkVHM1LGNI4yyyFjOdPfb7P8C4zHy0NFasP
Ej5Tju3xbbk5hU7PW+n1dt1dMk1TSo0uluyrj/VKzhqVTaYjOf2EG4/JrqZl
epItRxYnR08M0ksnJW7w9dluHqQ3XGFakoTP1njTk2UbUmihtm+aqim7PP9b
xoX4Izoa14/9xp+0Cjlqv3X8sDNcFjl0mdXXz9+fIupdGn4vgKP1UVO2+6tk
kkF6fd95Lj6U8rLTyhMcR4sT1a+MaJ9Nfjn96vce+Zi+fl6TuyuYo7MjDYZv
1cukks2OqRc7PITjRXy8231MmhzEkfee5eKcTpnU6VXj/kEpPlXGB+kZyf9D
wbzW2F1p1GDGGN8asaEUeX5YsLtuEq3aZaBfc0Yi3dh27NGYpCB6/raLWaZC
Km3ufaSr19x8Sqm7d1uX9EiqJ0ry9lCMoshdzw0th2VSneJearXah1GKom+u
eat4muC48MnYvCJaYBS/9IpCPI3ODD/99mEgzd5pu9QwL5de+Q+2/Xj3FQVF
2DfsFP2aJmtcFFkZcnStzyKtP8YlU/HY+kov6Q6dOhdqt7R2AU10DHx/UPc1
Tf34tal5WQR5TFu2/ct+js5tXBTZdVMaRVqMv2l14j651myhHx1aQPtKX1ru
exRNFibdevgdfEElhZ+bJZzm6Kt72/2aXdPJNtgg8scGDzKddnZ1StNCerBB
3L7RvBiyV9i+Lr9dGLV5NzNrpESfrXc3GtxSK53MjVK0dB0wrkWPHcHTNSTt
rb6UpQzVTKfJHhuW5lz0IO1eDb6elqyjx87PW6/rm07Hy3PNllh5wHGtjPxz
XFrVl0nHVff0XOm41Lc4SvXmeGOMVG89d9r8l3pjnRfWeV+1Zbb4lsRPexRs
s6ph5U6Dkob7qmq/hnblfPSJUdGzfLpay0tFOyCKujSdE92gfiSt0oq8ZJUv
Jrvn1c51r/eWqGHfaqq13cj5eYZ4eghHBUsjtwWNyaS3q169ThssrzdfEBWn
qZSQQ8lNPrTOTH5aQU8bfcfX8Q9J3FIY6zvLVY7fMs9hacE6jzxym2+XcMxJ
/s68naPOzjCjPLp68qv1gvXC+DCoPeKP5OHLj8YL9QP0udhcN8t7p4hMv6k8
M+mXQCNaDTNc1NCf2tZp8Mr2KUcj+zT1ab0ok/Jrq69J2iXXZ7uwqIknlPMp
bZhHdlCpHN9m2rx47vwGEWmUzdvj/U2OI6S82MZtgbKIiofueTxwhjB+EWqP
+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
9eJI371+wMw18v3jioOr54e5cPS0dPWIRxfFgvzRfLU93yVhcBhHxucs+l9t
Lqcf8R4jtav7XQsrZVfXrHpJ/bydx6lK+XmIywrsB8mJ9rnonLl59q2U+pJx
nR0gPnI7Rfj9QFX5N+R/WPmw+nNWOrrHQe1Z5x35TzQvaL0je2bNW1jpyG7R
umO1W5TvIf7IDyC/fVT5plTPqd/S/6Jn5IeRPbDyZ/UnyA+w6gHR+X4V4Y/J
2vPrlGX0hn7e92LzRXRx0ojGzmXy83/k//fnPZC2z1LV/Et7dP7mt9Vr7d71
RTRifN2GPtfTBO0TnR/+XTxAGR35AcSniY+/1O91/OIq9XtCdbUIVw2NC+Fo
seqTP1/IHoTsBNWBonFVVm+/qn/kf5D9oLjJav/o/pRv/+j9JNIzai80v8hv
oPwK2RWaX9Qv0mdl5Qnf3FP6XtR6iuKf70XL9aTvRWsPuy6tw7KY1UxahzXi
wydpHZZyz5bb988R07HvJrNH5iRSO6clouu6nvA96iXXPfojLCXzJ5qRdWBU
Am163PjOXU/5u7WCUbUDLwSJyTRidQvTawXwnT+qE0F15aiODMl/XG2HVE67
hxOkcm4oHPxfyone2bLqR6hfPu4Zq35Qe6Q3NO/ITqraHubVLlM6LIkLbc1L
d3rNzxOkL1m/5U4zbRH1eGC/6mCZvJ6aNW9v1GaXRtRZEd1UzJ6jcz6bcvUP
1NKLKKBm7wb0MA6PplGjjRJumLyoaM+vizkbHuDxVRJ3JtQKs63dP40K75/V
yI53I5rmP/ejhJ5Y0mTm435p9NXt+tSO8bg+CPHxej5nSEfJfMV2zv4RPiCN
Dr7vedQnGddJJU2KSd4naV8vzml5XW3J/JZOGK2X70aaJae9b0vo4+q71vXT
SaOLH1UOpYjc6HKHMeeTJPRtR/YppummUaxRkpXbT++atAZtksppWSz+Sx1T
ZfWA6qSE9MOvZ0R1oxO+3NHr2IOj/fnT3vlavaXaXfoM1Fghr7vh1z+i9qge
CumfdVyoruHe4sFTn4k5UlN5aGLVPJtsAz7bbOj5mFp2a7DTxJkj71f7L2j0
zaBt1bNzdUZ4UWfPo+pcPEcLPuo/O62eRUdzney/WPtVjJdfD8VaT82KC8SK
P8OKR8GKb8Baj4/qphEOgBAOEsLNQHggfFwRGZ2PoyLEh98vkp9VD6h+H9Wh
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
HrOsyxMl+Z6R3Z42H5XkeSM//0f6/H/rm8hp
     "],
    VertexNormals->CompressedData["
1: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
+DmTTwWeifqhvqgn4gIrZ/IjYH7EeMP4w7jD+h/PA/AcYFhB5ZJ2qiVE62F1
wZppDbBuau3RF6fOCPkS8yfmTcyXmD8xb6K/ov+i36K/ov+i39L8KuRbzLN9
i92f/s6sA1WPYXb7Lcogqra7bWCpPfotoX4L6Ld4jX6NcuZ+wc8xTwS+U5vx
8TdHzCZ03fQq0hDul7b0KkwyBHLltXolL8drZn5hnpKvLQMndLxDFjorbihp
4siLb7P96zdbgFyq/fbsZ8mk0XTL/pX7+Lrtf9dWMId7p/JteD7ZpJKw75KU
mFw8MC1EN/0QYLxh/GHcUd4L7HkOfS6wz20prMgz35EMN1e/vfxVlyMfbcZn
2cVbgXf4Fy5LIx+cKtvPeN0iIgu3aGxYmnQIto630roTXwJb/GKbmno0kKFP
R8Y7XD2D8wrrw/kLgwZomOzlIPhn0Pq9mcmkdbSCWdI96uZJi+Hl7g9pl3rn
k2VvV7xsjDkEyI+RLyNP5jY5dlG2zwLfeaMDlieKSXWJiXZqLzdQPX5H7ZBe
MfkB60zT9jeQc6PX74uZ6wsYV3/HmRugv6L/ot/uaYa0l7Fi8B9QI+kWkAU3
3ynVbZvjxtbLQh2B/mCTtjO9/itHZj17vf3+U3+2bhXuR7/Bz6H/dOPs7v/5
fqNRzNhnFUnadDQEXA9dH+C6Rkzo79fzX98TyH3THGO88BLyGcLyGVvz5/LJ
9g1w9NSJiZntimHpMckBEu184UifUh/Vb//wnz5z9+7Rme+P/ARYfoLXyF9Q
3t50x6SP//rdsXxvudL5zwwh0VVxIx8PsLXhzpagWENhZM7fBH6Ln0dehvpT
vQmuA/WnPB7Yer8kx+OY8n0xJHbNlX4xKZu0jm6QL11gpplYRwaoHnRIcyyD
xSdLlc0b7YXnUrsC2rO0anzvTpdKYOCMa/0nDGqA+t5uJnUH/+PngH4eciL8
5zBdDt51SF+QbJIM/Veu9RuQawXp1v59TrYTQ1+3YVHblPMh51rPHYWPDgn5
DPMb5jUmfgX/QVxDnEN8Y+pQYPEK9wf3pbQg53dErDZpzCyI+PN9qtZrQ0jZ
CY/V7C1JTfa9pdm8fHf+3S/h7YzYvC/Mj3ZEu6I9GX4l1K3ox2ycMvtOcN/R
P9g6COMNP4dxx/in4LdMHAnPZeKCoF/hvBgfGBeId4h/iHvIV5C/IG9BHEFc
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
3gLNgcs68bwFItS6trvz0AjeigJHmqeIyegFy5Z0Ns+CwISvUwtr9aBzK18i
ea18CUIoXxoytP5DnFUDWSO7XtVqVjEE9Vq6wt3rPzwHkOc8p/wP+eAdygMZ
3gvIexmeDMiTT/zc7B8e8BJCmypfF03h4FLum+vra2yhvdPkc1cMXxJrN2+H
yYocmKXWP3aqs4UvJY0/x5AE0Gt5OzuMr8sKnb+d6tL5KMtDAHlI0pXePdMO
NcDiviu2zp1bDPMs54139jVmeS8g72V4stAf+6Raj431z6vIt4oW0RzzGjAJ
amyKPKIHbnRdp5h1MXwekJ+MWKmSrJH7mAxebLp39RsOAszPKqdONIGeUgpd
s7OfQPO3Dom52Rzk3PI/KH/JFMp2rhSVPHgCzkWeUxblcNC5MFqUFGwCLoye
Pehzx7XWKeROa50CRrRO0WP6bLejfbZ1qPw6I8c6Cuuq9bSeiqZ5CPMS5iPm
vZVwXrF1h4XVn3MZHCUu9R3VaGjA1nHC+QB9Xwns+0r6vUfCfu9xqn/v9eoy
V+Bh+5SVIb840qHop/LSAEMoldl+IVqiDE7o5owrG1RPNC3HGebWHgDJl1nh
+2c+IW+mK2hW5HLEdqlKukqYCRTRftqRTD/tfJ/u02MeP4Gzl39YTc7hyIWl
XOO20P/Yn6D9J15Tl+0eUwUWbwq6OB6pIS46bmk7eT/xpn22N9E+2+9pn+0F
W20Plfd4D+7a0UdzqyvIinXDZuQ+NcDvXcCw1u9dEPzehcvBatklg58Tl9ym
6o5XOXL60RxVsw5HYQjtS7yX9rXuRvsDt5AfRolxL6GDto3V1skc2Tj5wJx7
knZwq6g2aYtXDvRQ3Xh8q4WYpOw50dg1/yScueZ+3erkS3L4l4tC+DSOmMr2
Va7uaCf0H9an88vS+a3fTuxz6IcYFLNeFp6TzCQThs4J8RxqKvTNHk77ZifT
vtlhj3PuhkWKyXDxt4GdarLg1t2VCeFBlyF/fOrZqpOvwaevfGDPsyKiUqjS
cm3/BRa3/9M3O472zX5O+2Y7tn5PiRyh3zdLot9Tot/XEnjaMvp9LexHvZL2
oz5A+1HPspiS0RAkJpvmO2xzm5BNfCZNOdfofxmWtfIQUKc8ZC/lIWxeRl6K
/aWdaX/pJ7S/9NC/9wu6U3vuvXDy4IIheeTwoTG6rjPEsGF28Lb4MGd2vwD3
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
eH68FjaxM5r5uIh1GFve8v3mbNbXr19AoIE/7dF5k2eZnkV7Cn9Me1i7mI0d
Lput8vYYZVX2K9rEx3k/3q++XHu9atH4bMqo201rZWER06mvU9L48Skauvb3
mp9G+dTIxLnuo4j37OEP9XsNJ1+ldMFB/cmfx/YS1rWZxa/LNjmaz+3OSfPg
f7JHjQ3NZhaejjW6efvTYX4/Hs3vx+P5/Tje3+0T3t81Or9G06dNCW2s8TKw
3ZEMKtxWqJcQd4jqYT0Yft/xl9+P8PGTmgt1Cz2522nDx7GLVV1r5iO0C+MP
YfwRtsPE7fgK7e2555nJvc1M7m124u0pQnsH7nOm8/YC3t6Ot7/l7cW8He5e
V+7weXF/j/9dwt8t5J8XjjtVc9wJx12VX+/wnqKMv6doU6a6fXyjEmp16r3x
3YQM1nS5VojK7UOkO8os9v7VN+ySmvGEpfOL6XC/mavs7+wX+zNDfxbmLVTN
vIUwbxHqWwj1LcI8hDAPEfotod8K8xDl85D1n8+bH3pVRA8uPi4wXJNNtfqU
Dzd45q98PrNTeD6Dda+8+fOQB/x5CD+vGZ6D1efbv1+3IveoUTbp/Rw68t27
IvZMxfZch7reFFw5n2HpfD4zic9nGlf2f2bL+38W7//COMwwDgv9gdAf8iqv
CyyWXxfM+HWhbeVxZM35cazDj6MwnlA14wlhPOktrGcxm48Dwn4g7IdlDt09
styz2bPhp2s9iC0i23plpo5NvUnzwvrNRmuzqUzXufWxtCL64PDn4xotbyrx
WzDOx/kJ1XTa2tJgjJwy89fvqOi6k+8Hg1uil3g4z26iX0U0i3vpKYt9Jmc1
nDv1GDF4A/3K333kaModNnmuwakR96T5yGnXd5vbO9C3g4dOWoQ9oRuBmfbP
R8nZ9RlvkrSvO5F182txnTbcoVE1C7JC4+XMqlFe6SVNB3r+2axwXGAKmYT2
me6qKWNjTV53WP7cg5YEqst9vsrp+kenCeNahrBJia4vYr7ZKPsz5ueOvD/7
1pBtyLkmo6O1Ps/rWf6S2rs9MF8fc1icFxHmRTgfnbhPpsNdMmF+Qpif1OTz
xsZ8PLTg46Hg8qm05v7YsBEpJ+aqfKQWiWZq7T6ks5EVA37/8Uil061jij//
n/zp4c8N3tjWtOTPWx7q2XBPT4u7aj1qTNr297yMLuj2sxo8KpG9uGPIDkQd
VvZb0cH7GHbU0dwphYrHtzbx6SKjYXb7h9c76UHzR88/mPNFTrc6mkZvfhtC
V/v1Dlsp7U/heBGOF94v1OYeXR/u0aHeT2z/Pr0ib9iMd9Ti5atXFts/sr2x
W42zE4LE38Xwu5yqunAqA/n+F/YbYb/x8Zyl8XE4g4/DuI8Q/bdlXlOWRvws
Yj7sStfsQdlkrbp14F1Hf7H/EPoP3ts+FN7bCv2f0P9PzrFLW/H+Dguuq29V
Gienwpwh4eu6OtCVtrlGn7rH0EJdpwFT7shp4pT+hzqrO1K7O9FFZ93ukMfa
rtvM4uUUpNPX+ng3B+X+rBHSMFtRp3/OJk9e1MSS/645/3U+Is8lfp6fLyyc
ny8T+PnSkY8bi/j4iefe1yvnVzSRz68W8fmV0K+UPtuawX3O5g17R2npKT1s
D3ykrddL0t9eCUK/Yoz3qzDer1APcIvvzyi+P4Xvo3wO3/zof8YlpsLHpQw+
Lk07Kbe9WxzG/pmT17yuTM6mfG1d6uNkTt0rc1gMOayaPIdVe7Lh+/6TXVhf
u4gfZ6X9c0Ilauj0oRb08qvdH/cRPswh7fKl/tLv+jrzxuJzOy3obphHw2UJ
u1iAAX1fLX0+aNGqprcnWlDjyJE6zffHUa8ab8e6BsrZ9uHpbSa12Ea7Hx8/
0uaHnLS72KZ9e3KWnbR2cVkZY0Zf141Yrjgf/HrdVT0fZMC8czN/92hhQTt3
F41Lltpdf7Qf/KKhPdW5pX+kxkgLqpdpfqzVo9MUuGKWg7vUb/2WdSxxLjOj
+Z0T3k2v2EENokfG7pP+O88dn6wb9pO+p1YzWeT9XTRp0qzxxlL7/NUZ9W5I
33O0v/7ZsTvjWN9llpPKA6VxYIbhIp9a22jCul5Tta6HkdoUG6Ot0n4rOdwp
R2WrOX1o2X/20Jo7Ka/45h5p+2zw42kddaX90/j01VzblYfI2rmz72Zp/4SE
l7mWSPun555CzUEPdlHcthsk/V3maJ7pq9g/Sdw968Pdsz7cPRNyEAw5COe8
1HGK/WMeM/n9DcOJ7G2/wxcU+0fYn4T9mbn/5eRH0ueXD2+xwDtyE8vQUD34
c4QFNa3cbwz77Sjfbzorr/268jGMbQ+xmltPmv8OeL/DeMBmc9K679+s1MCF
+bZ/1vmctL0TNjb2XaT9Gf38daYT+TDrbteS+0nj57d6R8yPeFiQhZ/fxEdS
f8iLnfdZ6g80fqKW9XXp94be9N84pS+jxXKToVmxchb8wy16dLtNxLLumlsO
Y0zf194wKlZOpsevDihuu4m6dR3daPqwSDo+Rbumon7+RsGuJk1f29IZ/p6u
NX9P94i/p0Od4S6hznC+v2vd0Ioo+mf07HM6iXIKVLlwrUH/DdSz/rVt13de
o5seLmfbFkr9s9Tnesojc7q9eFoP7VI5+9lj5OTGEy+QvvX8rntKrShtHTW5
Jh0/86Unp8XHbaOBtqc+qSdY0JHwcVYPFP6eR0DPP1qbKa6Rxv6miRY0/t3z
XW0VPqDbmksr++5l/jPVtpyfbi1uh2E7SX42H6OkdrU1HufXxDoxj1GnU5uf
siDLm+4jJnyTs8XN2reNm3GRmfyZOXZbMyuavzyhtIf0ee2Hz3xCbD0pfGFI
3eN25tTm02QdhS+hToZTSj2WshdFmpmef83JuVX0hqtS+4rPabf0WztT6u1T
4/KPmFMz/yn7pO9J2a87/ed7Blkeitwy1ZpMdbbvnvRNTp2ddu+qYXiR/Rlx
e8TBcis66NpZ8f1pwZg5uSPubWNOsz8cHP3Egp6c7r1H4UIYjHKMMYhbwkbO
KZIVyCwofVAfsyhFTv7miZXL0p3YtyIDm1rS/nl1anbivqQw1tVgYYCu1N+c
Z399u2iwNWkXNFMp3eLM1v6VB4ZK/13+pbkjt8yxoI2ub09aaawnmw+FullS
e5BmyMcbOtJ+/tq3xuvOfmxTD6sOm//IaaSl21SnHAtyMDuae6/Nehpduq5H
liJfWVMW1IAsaOC0I0GKPNT38D+987Y4k8b9S3IjafsLf4xYGyK1k03sl+Cb
zhQwZL5d7VPK38U2/u/fxX6FV/1dCVcfsV3z3IjNq+tjL/37M6+f3szbaE4R
HwfFhE0LZq3W2tzTLJez2TdKOqh7WVJJDz/Z/r2HWH6D2/m20rghy1zn9vuc
BV3ZcOqyaa0TLPG+UWOzX3Jmqvu+oYquJeVnbx9w7o+cpf91u/pj8BHSyfaM
WZJlQfC54HXB6UL9AeoRUIcAXwneEpwleEDwgeACwc2BowM/B+4MHBr4M/Ay
4GfAzYBDAZcCHgUcB7gO8BzgGsA5gG+AHD5y+cjjwx2DQwZ/DE4ZcuTIj8OT
gpcAJwH+ETwkOEhwguAGwQuCswMXBB7IrZmdrXYfCqWKWhdbzPwsZ/13JLt8
KbRSzl8D2P43iv41QTP7YcQ+a2yHiduB0wG3A14HfAfx+8MjgE8AlwD5eXE/
wF+DxwaHDV4bcvbI18PbgicBVwE+FLwoOFHwhuAPwR2C4wPXp6rno6ICFwce
DrwY+DFwY+CtwF+BuwLnQvyecBngNMBngCMg/l54c/Dn4M7Bp4M3AGcA7hgc
MvhdqNdB/Q7qdrSEdeRRf4L7LtyH1anqsavAB4ILhOfX4uenCevOo24EdRWo
s0B9BRwQuCDwNOBWwLGAXwFnQdwPcPfg8MHfg9MHjwEOAxw0OG3w0HD/jPsJ
3Eegbgb1F6i7wP5BHQ3qZ1CfIX4e9yfi9uGMwEGBfwKnA24HvA64EuLvgicI
XxCuIPxBeIRwCOHQwaWDRwdnDe4avDXURaHuBvU2eL+L95x4z4t6d9S/o+5d
2a/4/SXuK1Fvjfpr1F3jvSm2j/enqPsRvw+cHbg78HbgyMCVgScD9wQOCvwT
OB1wO+B12LkWpyp84VHpvd7lNHajs52GO/czsSDc71Xe/1nfwn0fXD84f/D9
4C8g1wiHAZ4dfDs4dXiPCx9I6QJx9w1+Etwk5Cjw3gBuEu7/8TwAzwHw3h3v
4fH+HccLdf2o58f7crw/x3tz3H/ifhT3oXCdqvmeJH5POEdwkuAjIScs7gd4
QPCB4AIhZ6vC9zNcILg2cG7g26BeE04G6jZRp4W6LdRroc4SdZeot4TPCK8R
TiP8QXiEOL7w++BawbOCbyW2Y//AhYIHBecI7hG8o6V3Xi4NKJDG6+INX7p3
uE65GQvP7pHuR+BFwo+EGwkPET4iXEQ4U3Cn4E3BUYKrBE9pWT+D4wrnWtN3
nG9U7AmKH91v9kTp/IIrCmcUvigcUng2cGwwbsOzxLiN8RNuE7wmuEJwhuAL
wccRtw+3FI4p/FI4p3B04Oco3UzuaOL6i3pW1LeirhV1majTRH3msqrXX+Xz
TOH6S3DzllW9/io/j3pKPL/Hc3vUL6KeEXWMcKzgWuH6C3cJDhP8JfhB4n5Q
+q3cc4XjCu8VzhB8IbiicLMwX0K9L+p/UfeLOlrU1aKeFi4knEj4kPAT4SnC
UcT+hDsIbxBOH9w+eH1w8eDkwcdD/SjqSVFHCmcN7hq8Nbhg4u+FYwXXCp4V
PCZxv8G9hYML/xZOLtwmeE0vq953KP0x1E+jnhp11PBA4YPCBYWzCRcQHiA8
SviUcCmxn+E4wm+EewgHEf4hnEFx+3D64PbB64NbB8cOft3Lqvcpyt8LFwxO
GHww+FbifoMXDD8YbjB8W3i3cG7hwMKFhQcLRxWuKjxV+KTwSuGU4vkjnkfi
OST2J95L4H0EnrvhORyev8FnhNcIpxG+IbxDOIfw/uD/wf2DTwevDk4dPDX4
anDVkE9AXgE5heePdKY/KM9hrwof2DnGfWAa0We0B68zpYR2sSXf9TLZJrP7
U1RLi1nrC4en148woR0z9KfaGCewgw7b0iq05WxEnf73MsmU+rW+VHO0/lX2
Y2RMuvpHOQvUbjDy/jEzgvsDBwj+z75qfLBAr1thb16epdPv03srnoPmq54J
Vjz/nHphQa8OaQ+plyUL67VazjqXenW6ssCUjI8MdfVKT6OiU3MXjXAqYTUe
xE7XPGNCs+fVerdUNYdCrj//3sWuiJ2zyDpQv4UppTU5eSW8OJ8G2bltrjf9
PavRktavf29GcB+Q70e+o1GD7LIVJe9YkGbXseXdPzK1+tl9FS5H0j85+ppl
L1h0vSUDAjJk7Nnv5OlhW82o+InfkMEDg9mGA2MODpCu21rGbTRGWVtQy645
dsExZ6ho7fRbadLv6pXWt1nwTiuCa3OZOzdTuW+TMWHFkKN696nWzXPZK3fI
WY8zai1W1jEnuC1wXOC3wEOBj4K8+R6PzzXeziqk2i8LbSse57G/gdEJub9M
6ElwzK/L1kV0Zu6xWPM6OWzse4Nx146YExwruFbwrOBGwZGCHzVIa9GA2IF3
qNvQGV8j7kvX/8g9P+NTbAmODFwZeDLwWeC1wGmBSwKnBD7JakMNI8cdxfRh
6hTTAw3fsK5dEyPVtczo3pwOas5GMirdHmO9WT+ZeXi2M/weZEoP8gefSz0u
p4vziod5n4ljPvdqbH/y24xOvOg+P8xDTuaj235p6xTPGv5sHVf01xTzycp5
u/Ns5Xyy6vx/u95IPv+vOs/foweXTJzPo/4HdXt4LwRfC44V6sJQJwZfqbI9
RW8wb0f9E97XwTWqOj+/rgdHqOo8/Jwe6kurzreP6cG3qTqvdlfuB7gkeM8G
n6SBb2MdA5mcDTnpadjsWRiz0DT2+9LPmjL2r05Mk+bPzKvkId2JY84/o5da
SPNSeGeoe0K9E3wx1KOhDg2eF3wvuF7wm1AfirrQohsh3UJcZOTfYNfhGtOT
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
hwIuBTwKnKdwI+BFwJuAPwF3Avk95NiQX0PuFzlg5H/hDsAhgD8AdwAOAfwB
5OSRj0cuvl017cjRid8HeUvkL5G7hBMBNwJeBHLFyGUij7lX6G/oP8jZIneL
vC3ypcqcK883IdfaSWhH/hB5ROQQkQsVvw/cEPRz+CHIhyMvjpw48lHIlSJP
ihwpclSuvB3eB/LlyJUjJ4y8L/K8yAl3F9qRBxY/71v1ebWyHbli5IyRL4bD
ApcFHgty7Mi1I8+OvDfymshpIu+NvCZymsh1I++LnG/V+WqUHvKkVZ9HPdSD
a1Hd+IBcMXLGyBcjR1rN9yTxeypdFZ7LRx4f7gwcGvgzyty+8HnkqJGrRp4a
OWrkqkt4O3LFyBnr8RwxcsXIGSNfDM8FvgtcF3gu8F3guthUHU+UngB8BHgJ
cBKQT0ZeGTll5I2RP0buGK6K+PlWVcclpTfSuJp2jarjD8HB6CC06/J2m6rj
kvJ3wSmAWwCvAA4CXAR4CMg5I/eMvDM8FPgocFHgocBHgYuCPDPyzcg1Y/4W
J8zrkENGLhl5ZOT6kPNDvg8uiXj+4nypPB9i9ODDYH3cyvanelgnV6/Ke+d/
30cXVnl++1APbglytsinIpcKxweOCPwQeD3wSOCQIN+L3CryqnBJxPfCcEnE
7cN9gAMB/0GdHxd4M9uUx6XKcRTf65H4Xg/uTI//3c7EduF6RHAPkEtHTh35
dLgAcALgA8BdgsMEfwm5U+RQkT+FWwTHCH4R3CL4K3BX4FnAt4BrAbcFjgv8
Frgt4nbgL8BjgMMAVwXOCnwV5OqRs0e+Hnlj5I+RO0ZevZrrKROvp1XrJaL0
LvzP5xv/Xl/gRonjKpwR8bjANYBzAN8A/oXYDocLLhc8LrgkcErgk8AlgVMC
nwQeBHwIuBA7q6kvfVjNc2BcKbFONdanRv4ZeWjkoN2F95vIVyIXjVwy8sir
eHsHoR05Z+SekXdGnlncDq474naQG0eOHPlxrA+B9SKwTgT8VniucFzTql6X
lbl4OKpwVeGpwjmFewrvtLUwr0MuHo4DnAD4APACxHbk1SuPjsEt5Nar5hfm
KPMLVT8/R/l55M/Rz5FDhyMgjttVHYYYPTgAcATE8Rl+AZwDOAYhd2Y6TXou
p8Z7X+buS4um2JzuzgcGb1Dm+ZHvR64feX7k+5Hrx/1Oe2H+gPsOsR3OEdwj
eEfwJuBPwJ1AvgWOBfyKqtfBx3pYf7zxuiXLxxh/ZAuHt+jezuUdC2j7RPta
VBBh3W6s4431u+GqwFmBrwI3BI4I/JDrVc87gtdxq+r5onQn4IbAEYEf0loY
D9EP4VyI/aHqcZyjPI5V674slXVf/Pgy8fjCJYFTAp9kXzXv14zCAnYtVrWn
VJc+a5Kl/pvUP9xMNsyCSsaPvNeox3Oy8kkzW15PzrJ2hK1ccGkryZvINyjy
6vlR3c+0eXSalXkZXlPk1pFXR34duXXk1ZFfR24deXXk15FbR14d+XXk1pH/
hwcABwD5f3gAcACcPBb1LD38jJ0pU6mY01xOjv/5562k32qgecTNCaygySJD
xfm6KHLyBUUd7K+6vXR1QzaxmNr2Gx9J7dcCFtjkSfth79Jfx00D5Wz1r+Cy
2INxLOlip+AhLbYRHAe4DvAcxjrpPFQ4DqHvb/W1f3aa1c3p9dBIxZzgOMB1
gOcAxwGuAzwHOA5wHeA5YP+/rdz/VM73P5wFuAvwFuA4wHWA5zCe5xC1eA7R
hOcQo6upM4HXAL8BboP99vN7jz15SGs6rWh1d7Wc9h0qOh4yxIY+N4j+WBIr
Zw7Lr9ye3JMxmfrFgqntNiHnr8z9I++PfD7y+sjpI5+PvD5y+lXqRVW2K+sk
q7ZbK9uF8VkP43Pd8i9PkhX7/0RY47N5+9mWLhmrwyMs6HbU+vAF0ueXqbt6
fXjqzvZkTurUzMRCmWNHrh15duTMkTtH3jzgSeaqQ7/lLIS1nbfPOIBmvQpJ
alnTnLD+N9YDxzrgyP/DA4ADoOo/KHWc4UX22MRzlsIDSLp+epdvuZUy/w8P
AA7Ap1u7/26PcWLh9j9LFbn/WQ8mbfsnyIJWtiqyb2J0kV0L26I3WtpOU7lX
8dl2VvSuYmjiOXNPWmT6a1lP6fPLZnWvv8rCnA7/fDRnXuRSptmrZx+5wsnR
LBmf9tectsTrzO+l7kxpLroBV6X204UuW/wOmBPcBDgK8BMWbMhf9FH6Z+vG
6v9M8TZmoT9KPVpJ++1mv9Zen/7PcSwqCl123MqKkM9HXh85ffgL8BjgMFwY
WcCOmIayoR/Hbd34Wc7a9z9m9vaQFX0yvae/Qtr+lLFbw9J7u7Mb9xcMSJKO
i0HC7mb60vY9O9Wt5do0mD6F243Slbb/vNnfTxFSf2iXl/q0z7UD1K1Tyzd6
5y3op7lluwu/pPnZyGt9x3kGUf8Cj5UjdS0J7gMcCPgPxpX1gUysD8ysrJ9k
KyvrJ1k+r5/s3s2xV5vPxnRL7YrXe4Xf0i8h9LitNTU8/jOrzYSLTG3SzQ2K
dWL73tf+eOObFRkGvffOP1DMagd+PxiR9Jqlta6/f+RhU9RzsueV9ZxsMq/n
vK9R6nxPJ4Ael6R1VKyLq9K0p+2lR3Zk3O7so0OTbrFBVndf3kmQM6MJqXcv
7bOjg3viK7K/RbHCp6ciFOu7NnCL1K4fZku1L4e3X35CxlpvNrp40zWRrYnL
KkgrNKXCX7XkA5fK2NEajhMn9U1mTqvHbN2ZbEof8wZ7eAfImdn3nL559+NY
k7KmfRTrlT9c0Uf2JkY6L1rdPOdzg7HHsm0TlyWbUSt7/6HrpOO3JSvJ7sPG
UDLXLWm+vrkNTeuTMlGxbugrt+5tjB5Gk+3p/l3aGtvRiLTO7e5L99c5SVvX
OaldoeO7W+j7j7ehgz4nDJcHyGnkiE5vJz2Oo4Dcmn9DSjZQbY+ELMV6mY4v
3xrFNr5CyZM/bhhG/67Pu01Yn9eCvzcR3wtgnD9fOc6TGh/nkR/AeuBYB7zu
ht5jm++Tsx579x1IN4inDtGtbpT/MSVPva0na0nXl3mBa3p+OxFHQ9ZETKlZ
bqZcr/a8UO+BdYixLnEvvh5x6IB7S4YHvWAOfcueJOTL6HfjGpsTAveRd4p+
tvdiGYvs2Wj7n2HJFJE/+OGeQFMyrqznZwWV9fzUjdfzP9PfdaZo4S2a/KSD
ikuCnDJ6Tf9e7m1HEw2Mp7jWOc6eF+rqKdYNnp23MD/5iR010l3YvJb+HTby
YNYgh/tyynbxumGRZUtefxuPvb2+iBmuOJtlUjOHNJOfjVQNMCfPyhwEq1mZ
g6AKnoPoO2S4nvW4++z0zZeftHbI6XavQbubNDCn0+V9Twwec4mcIw54K9ZV
zvF9FHdS3Zoi9u4ZcrxWMDX77Dj4n3I5rd/czSLHRppXdLz7OP7nC7qet3PA
+QwZGYY1G13uZkYNK/MjdKIyP0J1eX5knfrAjUML8tmG3G4dus19T8taZO5f
WWBGcypzK+xCZW6FzvDcSre7PY5HytJY04fyy7EbS6hD3QtJ6WdNqKnr1u+D
mj5i8tFFBitWyMlu4pjLuYtMadLboscmY65SkOGv+e0+yunCbPPV0b5m9D36
dXdHSiB/lSC3Ed2l6/bStK5jJprSs+L0Pln9M8k+8flj9Z/FNLFZcOK6GBPk
g4jng0id54Owrqf4fLILX78H6/lgHZ/4itjnPRtnE12xn2jd4iNb49rHMW6G
CWH9QqxniHUMsW4T1nHy5+sHzeTvyxcJ6/dhHUNxfT2sX4j1DBlfx1Bc76+A
191hPadmQr0u1inEuoVYrxDrOWF9J6zr9EC1t9aGLTLWbh71aGufRGEDHh7J
dXAXciL/5jWOtUr/bOMsY6mBRT1vz0tivi71ZFpO7rRjkCwrylFGI70nZ2lb
JlGAc1+752vcq+Y1nPVvYb6BdRCxLiLWQ8Q6iFgX0Y6vh4j1orB+FNaNwnpR
rvx5siF/niyuo4R67xC+LibWycT6mCn8OD7i60EF8OM4XFg/6BVfP+heZT9h
vJ/QWt5PsC4m1snE+pjiuj9YRzWxmnV/mgnvcfC+ckSVPM6/uRusZ4D1Ddry
97nwMeFlwsmE876Nu+9TuPdeNTf0bx4HjrD43kfM3SNPBCdXfK/RkHupeJ/y
gL9PqVp/G6MHNxWOPFx5ePLwiMcLOZ2qOaYYPTjk8NnFPI4u96bxvLcff94L
Jx1uOrz0KTyXAU8ajjTPAzLkAQt4HvB83xfPvjw5S/VknY8q/LPXT62iFe4Z
b2dof8Pb8/v4WUyXy5nxvo5agwzDKPz7Sq0t/a0p06RltsKfWjzf5IplUhjL
7V7KFg62JoNqHKrRgjelx70puFLlgisFrylV8JpW/DKLNN+cy8b/NZi/c9UH
1nDT6QYloabU5ccHtSjtLEaze38wH1HMXIP1D8uLTMjLYcyX4eeTmIvvzw2J
tjK2x9Jqp15zU3KwYevvLIxj/eZPC044IWduBx1Pyt+Z0tAM44gthcHMbUWL
53fL5KzR9jnjSirMqM61LZFlKXF0Ye6XbhXH5Mw7J3/Y/gemdLLzh2CTWsm0
eHVmwbfVMpb193NspqopBSfJNs43yaLyJe/iVHoUs5Dlp8euyzchc+t4J3/3
XKp3tPmOYws+MKtBQbMfXDalT5r60Xfis9msrfE586V+4fpc/dPSOybkGdTU
suWLFPat2KfuRg0ZM+0mm2IpzT/DT1w6MVszhn2SG4yPl8anHo4TZs6QrteX
pz9WOVmxn7rfsH/2QpoX12nv/+bbNEsasrGmRa2b52n8V63BfqVyptZvbP+g
+tY0VMhRGvL5z+0rebcXbY+lWolap9LPS/dbP7rtyF1iTl3cJnnnT0yl0w3K
hjv9LWEd/I+9d3GQfu8AjZdv8rPpcME/0x+6FbFavlODxow2oXkvlvXfG1hA
D5I95544UcBC7Z64T15hQrfUzw1qv/ADFe52fVq6K5e97h9TeE86jnm8fjJD
qJ/0X3Vfo86VCArunhgYni5nXr/KXKZttaW+tY3WuxXcJlt333bJ0nXsUZee
FXEr7Gg6r5PswOskL/M6yRmtd14do11M1065vRnmkMVmT8u2SJWOi+5rzR3y
5TJa/Uxranz7ZHZXta1Xn1qm1DKV3fQ9L6fojhfvu+yOZboOjSP6rDCniOl+
26b7y+mr3tnuYSr3mPfER2UrH5oS3KXK832PHvwleEMYl35y90CHOzuq/Lo2
hdc/w0fA53/zzxfwnH/l54/pteF5f+TSKz/vrod8ehX3VbreIWetOvZuQkCU
nK1daJcVfCyGpbwZPC7eyE753laXv4cdzt/DJtz2S/YoLGEDZ1TMeXQrlRXd
tZ+yZo2X8r3taP554p93NayjkivNL1eNalzbsNsdFjJmur+qqR2Z138weak0
L/znon5Smd0ltrZReOuI71ak7xJ9aWma1P9+TNCRd4hk9XYFxsV52CrrIXfx
ekhLXg+JusfavO7Rntc9jqXJEyLS5DTNcUayU41ItntDL+2bbrZ0c2hFzq0K
OY1INT7b9uABFq6+2HTejH/rHuW8zjCZ1xmi/rCct2fx9tjyGe+Jyemdqa3t
oMYx9N328q6Kk+ZUz+TG6uiTcqrQetVr9dg4Uj+8osHcHFO6U+jX17ylNM9p
PSQs8XEKjWvTsVdcKzPS0D/5yc1eRh/+uAZaHUkifbXfnbTbmtKWjNzP+4Mi
KLFUf/GHdDm9eLXs6RJfW5IlzU+edDiGPJ9m7H4cJSer027Ho1fb0W215Wc8
jxXRvi0jIq3is8m75dvd5tK40epj78edRxWT7lc77/1ts2jNIavNWz+bkHfm
05Vm8kv0fFjesuLPcko2zG0+rq41yb8P/7pn1QdS2+epuXpzLiVsHmKUdMmU
Qv22fpHambzl8/ZSOzN0H/6tiTReWUc1qKNwZOCwTeQO2+339drsk8Zf3ZQb
4aOk8fjqqGGftT5K53vl92T8ezJ8T/MT+jaK/orzxpifLzPXa9f8ERDDOphv
uHZQ6qcqhbGdNBfZ0ZJ7CendOkay3pv6ViyR+ktbe9e296R+MtI4IF3VTsZc
jNdMUz+XxDpPabnVVBrnT7yf+s+AljJWOyh4i+bTFPZGv0c/J2n8rL9ht2mW
NO6rz/Z0q7sgjgU9iVdrmm1KrwteTVRh0vXghJ6sUcsYNtnYNCdfGlcxTz4o
rPeN69R94Tp1qMsZrRBpnFr/eGbu2usRNObIphm/pPGqCX9faMXfH5bw94aZ
S49XKI63i/oL28XS8W91vdn3xdJx/7QgV9Pvq5wdqxje4kSrEGqTq1akGm9F
55qlT0iXvs+p0Z06dc+/TSEJ/o8mSuOemt9BowF5JTS9W72hV5JSqcC+4uiY
6V7U9mtFZIrUbx62aLT7i08MjSvcdXm51H+StOzOKvrBkkZ6DTtK/cK5sa7j
aKk/7ND0yf4uXeciymp2vJYaR+ksco+HdL17srWF6j3petBq5t6Miztjqbhg
2o+d0nWhW46sbqh0/dvfNUm1dZ1kWundr99D6TrYxzf1xPLuxWzobo3V58yy
qOO8hlGLpPH2Pp8Plwrz4Y0VbaYq/CPRM/E7fbT5ze53WG65f9AbaVwZWG9K
haM0nrx8ZR7W5G8E+1YR3ihOOu/L+l/ZV0c63xtVM0+eOtXKvrZ03R3RKtJ+
2e5cyr9WZnpP6s8LKq9TLL7yOkW4Tp2uvK4xn8rrGuG6FnnzzTjdOalsTs9d
kYP+lNBXB487j6Tr4POiCR3774pldWYu2xiiuG5ozXLzkK4X7jvT1BT9XPRD
FgjzolF8XrQg1rRitUYMqdWaFFBbGm/e9g9KsZTGmdSez5bEPUuhz20yNtzQ
kNHWHzF/r0rjibxy/kCzK+cPhPlDFz7PvyvM80cVB9joSNfda7maGaHSdTji
eb9RD6Trr8r+6JJCuywWpRMy5510nZydfc8/TzpeV7ol/m3aLpmd7jMtXGeF
jNbv7Rw+Vro+Ri1YYPT1bxy76KzzY550PWzZr0PMGuk6eHmV3oUBucHs6sjw
DvFlckqbM+1CTpkZParm/qKRybN9g/ROklarxWPvlstp8pULgfnlZhR8LFm7
tX4cvSgd9+yCNL6mjHxqM0waV49tLml41C+JZrlv/DxPGkcP+QQlfG9jSssb
To5u1C6LfDbNtFKVxj9DzbO//pHGvWm1e0ZJ80aa/lZlgTRvpD2yAfph0vjW
ZGjz/7yHE9/n4r4I+28u32+o//7J68EP8jrwMfPmfbgs9Y9pJ03KVQuyWd7D
x7N+jDIh32WZUYr+0TlNW1/RX2aNDh0+3N6UML/J4fOdYXyes4vnIvbydT9d
eT6iXFjfcxbPQZjycaQpr7fJ4eOJn2XWn1+ZqTQ3bc0ev5wSVhFtcCNihRe9
u2Bx/syaD6ygz3Bf7RW5ZBPQLXTj7RCaZHaU5kTksvbrOuiYd/nAImvsWNnV
I4RSJv9wnOmZoteeO2mfuJOmznODuO9T5/lB8X0ocnY43vFCblE1gM6u6PKB
YuokvLKQ/v7G0Y3Oxm4P+a/15nC/Weede0Vd6XvnBGh7XFnzgQ5P/e6n9SCE
OubNKq2lEq4n5sia1+s6JONGKusyL7bszYcSymvarNfQ+V7K53XIZ7Xhz+uM
+PORWcI6127C+sVHea7kIa/7H8NzAHq8/r/nm0kjFfPjzeMP/Ge+bDhBo6R0
gymNrewnbGplPyH0k458nop5ayifr9bh85vNfL7jwOc5vlXXHVZejzCexvPx
NYSPq7uE9V4t+DwK/Qn9C/1K2J9KBxK/fxffH/58P5wx+rXwqtTP4s+XPtks
9bv8tSkprZd7YX5LmN/O4tuZq2F55rd0PI60+t5vuHR8RuQmbbeb60Vl/Lx6
z88zb35+jeX7F/t7NN/PbUrr3lh1O5WtnVq0zFKan05d5Xmm0zov2n3Tdadu
cipZ7LcxaSldD8ccP+KfP8OLMnh/Rv9twfutJu/fNXh//sz7+Vz+HGM3f46h
zZ9juPN/xr/vzttNfe6tryXN1zHf/8Hn7Z95vUI4r2u4yusWhvN58yw+7x7B
58/ofwsFT0BdqIurzeuF8HymQKizRd5qH8YVPp5kVo4DVMzHAVc+DhjycaB1
5ThAz/g4gPqk1vzvN+F/t1xYpxvzZGE/EO5fflTdDxTB9wNV3Q80hu8HFX6+
F1Se72wHP9+rruMQowdvs3bleMKi+Hiyio8nTvx5pRl/flnMn1tiHoZ5WTEf
P1sLdVn4vfjvsb0Svh2MvxiPc/l2cJxa8O3heKkJzr8Td/5R9/KJ76crVdbF
+HfdEPxe1MN855+/yT+P61nlfd9sPeV1jedSzwjrzqcfbvKf6yDuF4/w+0Ts
XzE3jffsy/l79mf8Pbvfvq89FNf7hY3PDdCSrv9fegRH50nX/TulQcfvlMtZ
YNOO7vfHnKQ/fZ+ezlc1J31hHYE0vo5A06Xz0xXPXzZMd9I1Kwxm6Zbf5sor
zEhr7bSpr6Ttn/X+dftdfDDZN72//5u0fbdWd/Xt00JYTB/dqSVfpPNr2tzJ
8+9Z0d5qvCz8s5fw/gjPQfoL74OQW9fhufU0nluPH5h3sfOGS+yFXmttxX2t
msmeDrel+9mx1TwHw/OuL8LzLp3OnsPkyucD2/UWh9T9Z/sqa4p36bZF8XtO
vqw5bZz0+/72kWYc0u9atf6PS5S0H7vrbz2t2K9vFjcZpNif/w/eOKif
     "]], {}},
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["x", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["y", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      TemplateBox[{0}, "Spacer1"], HoldForm], TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{332.0121192101514, 297.02094219926084`},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-2, 2}, {-2, 2}, {5.901886783244042*^7, 5.90193155246059*^7}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.0064141646835507975`, -0.3155300294810553, 3.369035419669412},
  ViewVertical->{0.02023543417320586, 0.995435486339875, 
   0.09326692735969287}]], "Output",
 CellChangeTimes->{3.80996345750764*^9, 3.809964629205411*^9, 
  3.809965161531958*^9, 3.809965463113716*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"594b09b4-d373-4830-8ee6-9a3fbc905905"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`z$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`z$$], 0, 2}}, Typeset`size$$ = {
    220.80000000000004`, {34., 37.99718764839629}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`z$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        $CellContext`U1[$CellContext`x, $CellContext`y, $CellContext`z$$], \
{$CellContext`x, -2, 2}, {$CellContext`y, -2, 2}, ColorFunction -> 
        "SunsetColors", AxesLabel -> Automatic, 
        PlotRange -> {{-2, 2}, {-2, 2}, {5.90185 10^7, 5.902 10^7}}, 
        BoxRatios -> {1, 1, 1}], 
      "Specifications" :> {{$CellContext`z$$, 0, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{981., {63.3, 68.7}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.80996345750764*^9, 3.809964629205411*^9, 
  3.809965161531958*^9, 3.809965463332507*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"ad8dec09-2f71-490c-83ca-ea75d3279337"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part C", "Section",
 CellChangeTimes->{{3.4501379520625*^9, 3.450137958125*^9}, {
  3.7977946067755513`*^9, 
  3.7977946070875697`*^9}},ExpressionUUID->"6c577261-2de2-4919-bcd7-\
c3711dbc3e2c"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s calculate the force on our test charge when it is \
located at ",
 StyleBox["r",
  FontSlant->"Italic"],
 " = (2 m, 3 m, 4 m). Use the Grad function."
}], "Text",
 CellChangeTimes->{
  3.4439865568061743`*^9, {3.443986597744722*^9, 3.443986646980357*^9}, {
   3.4501364524375*^9, 3.450136463328125*^9}, {3.797794614711594*^9, 
   3.7977946493756323`*^9}},ExpressionUUID->"6f68f8a6-bbd6-4414-93af-\
d1e81fc0263a"],

Cell[CellGroupData[{

Cell[BoxData["Utot"], "Input",
 CellChangeTimes->{{3.809964219919185*^9, 3.809964228197968*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"75df6d26-b440-45a6-a8e4-e6e469d2c4d6"],

Cell[BoxData[
 RowBox[{"5.901816822752555`*^7", "+", 
  RowBox[{"248.12399999999997`", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "-", "x"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "-", "y"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "-", "z"}], "]"}], "2"]}]]], "+", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"1", "-", "x"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "-", "y"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "-", "z"}], "]"}], "2"]}]]], "+", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "-", "x"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"1", "-", "y"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "-", "z"}], "]"}], "2"]}]]], "+", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"1", "-", "x"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"1", "-", "y"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "-", "z"}], "]"}], "2"]}]]], "+", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "-", "x"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "-", "y"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"1", "-", "z"}], "]"}], "2"]}]]], "+", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"1", "-", "x"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "-", "y"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"1", "-", "z"}], "]"}], "2"]}]]], "+", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "1"}], "-", "x"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"1", "-", "y"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"1", "-", "z"}], "]"}], "2"]}]]], "+", 
     FractionBox["1", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"1", "-", "x"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"1", "-", "y"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"1", "-", "z"}], "]"}], "2"]}]]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8099642293321075`*^9, 3.809964497760572*^9, 
  3.8099647030273294`*^9, 3.8099650806070027`*^9, 3.809965168566253*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"b5813509-3118-4317-8bb9-93074eb73b8a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"F0", "=", 
   RowBox[{"-", 
    RowBox[{"Grad", "[", 
     RowBox[{"Utot", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.446567734052229*^9, 3.446567746833479*^9}, {
   3.446567822724104*^9, 3.446567835505354*^9}, {3.446567894239729*^9, 
   3.446568019317854*^9}, {3.446568061583479*^9, 3.446568232770979*^9}, {
   3.450136633328125*^9, 3.450136668390625*^9}, {3.45013679015625*^9, 
   3.450136816328125*^9}, {3.450136923609375*^9, 3.45013692965625*^9}, {
   3.45013702440625*^9, 3.45013705540625*^9}, {3.45013919803125*^9, 
   3.450139201859375*^9}, {3.7977946608885093`*^9, 3.7977946986248517`*^9}, {
   3.797795644968854*^9, 3.797795650647853*^9}, {3.8099640046024237`*^9, 
   3.8099640496539164`*^9}, {3.809964141176143*^9, 3.80996414513042*^9}, {
   3.8099650859396667`*^9, 3.8099651014823666`*^9}, 3.809965174267746*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"3116b64f-8c1f-49e9-97a2-8b29f72dd9d7"],

Cell["\<\
We'd like to make a function out of this, so we can evaluate it anywhere. \
\>", "Text",
 CellChangeTimes->{{3.4439866773405094`*^9, 3.4439866923721447`*^9}, {
   3.4451885449495845`*^9, 3.445188575652513*^9}, 
   3.45013726396875*^9},ExpressionUUID->"78da51f4-a48c-41b9-a8f4-\
68a8f30bccbc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], "=", "F0"}], ";"}]], "Input",
 CellChangeTimes->{{3.45013695465625*^9, 3.450136971765625*^9}, {
   3.4501372258125*^9, 3.450137250703125*^9}, {3.450137299609375*^9, 
   3.450137302203125*^9}, 3.809964063013523*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"a2f9d42e-fe83-4e1e-9d49-83b7201b7358"],

Cell[TextData[{
 "Now we can evaluate the force anywhere we'd like.  Try a few values, \
including ",
 StyleBox["r",
  FontSlant->"Italic"],
 " = (2 m, 3 m, 4 m)."
}], "Text",
 CellChangeTimes->{{3.4439867082163*^9, 3.443986725451116*^9}, 
   3.446573616474104*^9, {3.4501373269375*^9, 3.450137327609375*^9}, {
   3.7977956602639637`*^9, 
   3.7977956700956435`*^9}},ExpressionUUID->"385498ed-7bbf-45aa-a045-\
4700456b5f8f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"F", "[", 
  RowBox[{"0", ",", "0", ",", "0"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"F234", "=", 
  RowBox[{"F", "[", 
   RowBox[{"2", ",", "3", ",", "4"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.4439867312637653`*^9, 3.443986755014373*^9}, {
  3.446570003192854*^9, 3.446570023380354*^9}, {3.446570482067854*^9, 
  3.446570524489729*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"d4293ddd-b6d6-4b18-b6d3-b9ba7be7ebc2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "248.12399999999997`"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "1"}], "]"}]}], 
       RowBox[{"3", " ", 
        SqrtBox["3"]}]], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", "1", "]"}]}], 
       RowBox[{"3", " ", 
        SqrtBox["3"]}]]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", "248.12399999999997`"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "1"}], "]"}]}], 
       RowBox[{"3", " ", 
        SqrtBox["3"]}]], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", "1", "]"}]}], 
       RowBox[{"3", " ", 
        SqrtBox["3"]}]]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", "248.12399999999997`"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "1"}], "]"}]}], 
       RowBox[{"3", " ", 
        SqrtBox["3"]}]], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", "1", "]"}]}], 
       RowBox[{"3", " ", 
        SqrtBox["3"]}]]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8099640798413997`*^9, 3.8099641507470474`*^9, 3.8099642532786245`*^9, 
   3.809964506233475*^9, 3.809964710988121*^9, 3.8099651114042563`*^9, {
   3.80996517684547*^9, 3.8099651813774395`*^9}, 3.8099654731756077`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"aa928e62-4cb6-47b3-af19-bb7bdcdd5186"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "248.12399999999997`"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "3"}], "]"}]}], 
       RowBox[{"250", " ", 
        SqrtBox["2"]}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "3"}], "]"}]}], 
       RowBox[{"22", " ", 
        SqrtBox["22"]}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "3"}], "]"}]}], 
       RowBox[{"34", " ", 
        SqrtBox["34"]}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "3"}], "]"}]}], 
       RowBox[{"38", " ", 
        SqrtBox["38"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "1"}], "]"}], 
       RowBox[{"14", " ", 
        SqrtBox["14"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "1"}], "]"}], 
       RowBox[{"26", " ", 
        SqrtBox["26"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "1"}], "]"}], 
       RowBox[{"30", " ", 
        SqrtBox["30"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "1"}], "]"}], 
       RowBox[{"42", " ", 
        SqrtBox["42"]}]]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", "248.12399999999997`"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "21"], " ", 
       SqrtBox[
        FractionBox["2", "21"]], " ", 
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "4"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "17"], " ", 
       SqrtBox[
        FractionBox["2", "17"]], " ", 
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "4"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "13"], " ", 
       SqrtBox[
        FractionBox["2", "13"]], " ", 
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "4"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "125"], " ", 
       SqrtBox["2"], " ", 
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "4"}], "]"}]}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "2"}], "]"}], 
       RowBox[{"7", " ", 
        SqrtBox["14"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "2"}], "]"}], 
       RowBox[{"11", " ", 
        SqrtBox["22"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "2"}], "]"}], 
       RowBox[{"15", " ", 
        SqrtBox["30"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "2"}], "]"}], 
       RowBox[{"19", " ", 
        SqrtBox["38"]}]]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", "248.12399999999997`"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "5"}], "]"}], 
       RowBox[{"50", " ", 
        SqrtBox["2"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "5"}], "]"}], 
       RowBox[{"6", " ", 
        SqrtBox["30"]}]], "+", 
      FractionBox[
       RowBox[{"5", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "5"}], "]"}]}], 
       RowBox[{"38", " ", 
        SqrtBox["38"]}]], "+", 
      FractionBox[
       RowBox[{"5", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "5"}], "]"}]}], 
       RowBox[{"42", " ", 
        SqrtBox["42"]}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "3"}], "]"}]}], 
       RowBox[{"14", " ", 
        SqrtBox["14"]}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "3"}], "]"}]}], 
       RowBox[{"22", " ", 
        SqrtBox["22"]}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "3"}], "]"}]}], 
       RowBox[{"26", " ", 
        SqrtBox["26"]}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "3"}], "]"}]}], 
       RowBox[{"34", " ", 
        SqrtBox["34"]}]]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8099640798413997`*^9, 3.8099641507470474`*^9, 3.8099642532786245`*^9, 
   3.809964506233475*^9, 3.809964710988121*^9, 3.8099651114042563`*^9, {
   3.80996517684547*^9, 3.8099651813774395`*^9}, 3.8099654731912355`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"e0be0b14-c708-45f5-8f46-19d28f43f604"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.443986760202006*^9, 
  3.443986798874871*^9}},ExpressionUUID->"873e9732-0ad8-4500-aa5c-\
b539618a483a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F234$", "=", 
   RowBox[{"{", 
    RowBox[{
    "25.281354656338923", ",", "38.36714751427157", ",", 
     "51.70647124860129"}], "}"}]}], ";"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"F234$", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "-", 
       RowBox[{"F234", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", ".01"}], "&&", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"F234$", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{"F234", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "<", ".01"}], "&&", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"F234$", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "-", 
       RowBox[{"F234", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "<", ".01"}]}], ",", 
   RowBox[{"Print", "[", "\"\<F is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<F is incorrect.\>\"", "]"}]}], "]"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.4439867793743715`*^9, 3.443986798874871*^9}, {
   3.446570576395979*^9, 3.446570596145979*^9}, {3.446570650864729*^9, 
   3.446570713442854*^9}, {3.446570897411604*^9, 3.446570906177229*^9}, {
   3.446570990036604*^9, 3.446571108161604*^9}, {3.45013737665625*^9, 
   3.4501374535625*^9}, 3.45013923109375*^9, 3.7977956347868023`*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"81cd6197-6a22-45e6-9c60-44edbfa48823"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"25.281354656338923`", "\[VeryThinSpace]", "+", 
       RowBox[{"248.12399999999997`", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "3"}], "]"}]}], 
           RowBox[{"250", " ", 
            SqrtBox["2"]}]], "+", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "3"}], "]"}]}], 
           RowBox[{"22", " ", 
            SqrtBox["22"]}]], "+", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "3"}], "]"}]}], 
           RowBox[{"34", " ", 
            SqrtBox["34"]}]], "+", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "3"}], "]"}]}], 
           RowBox[{"38", " ", 
            SqrtBox["38"]}]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "1"}], "]"}], 
           RowBox[{"14", " ", 
            SqrtBox["14"]}]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "1"}], "]"}], 
           RowBox[{"26", " ", 
            SqrtBox["26"]}]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "1"}], "]"}], 
           RowBox[{"30", " ", 
            SqrtBox["30"]}]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "1"}], "]"}], 
           RowBox[{"42", " ", 
            SqrtBox["42"]}]]}], ")"}]}]}], "]"}], "<", "0.01`"}], "&&", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"38.36714751427157`", "\[VeryThinSpace]", "+", 
       RowBox[{"248.12399999999997`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "21"], " ", 
           SqrtBox[
            FractionBox["2", "21"]], " ", 
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "4"}], "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "17"], " ", 
           SqrtBox[
            FractionBox["2", "17"]], " ", 
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "4"}], "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "13"], " ", 
           SqrtBox[
            FractionBox["2", "13"]], " ", 
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "4"}], "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "125"], " ", 
           SqrtBox["2"], " ", 
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "4"}], "]"}]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "2"}], "]"}], 
           RowBox[{"7", " ", 
            SqrtBox["14"]}]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "2"}], "]"}], 
           RowBox[{"11", " ", 
            SqrtBox["22"]}]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "2"}], "]"}], 
           RowBox[{"15", " ", 
            SqrtBox["30"]}]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "2"}], "]"}], 
           RowBox[{"19", " ", 
            SqrtBox["38"]}]]}], ")"}]}]}], "]"}], "<", "0.01`"}], "&&", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"51.70647124860129`", "\[VeryThinSpace]", "+", 
       RowBox[{"248.12399999999997`", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "5"}], "]"}], 
           RowBox[{"50", " ", 
            SqrtBox["2"]}]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "5"}], "]"}], 
           RowBox[{"6", " ", 
            SqrtBox["30"]}]], "+", 
          FractionBox[
           RowBox[{"5", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "5"}], "]"}]}], 
           RowBox[{"38", " ", 
            SqrtBox["38"]}]], "+", 
          FractionBox[
           RowBox[{"5", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "5"}], "]"}]}], 
           RowBox[{"42", " ", 
            SqrtBox["42"]}]], "+", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "3"}], "]"}]}], 
           RowBox[{"14", " ", 
            SqrtBox["14"]}]], "+", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "3"}], "]"}]}], 
           RowBox[{"22", " ", 
            SqrtBox["22"]}]], "+", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "3"}], "]"}]}], 
           RowBox[{"26", " ", 
            SqrtBox["26"]}]], "+", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "3"}], "]"}]}], 
           RowBox[{"34", " ", 
            SqrtBox["34"]}]]}], ")"}]}]}], "]"}], "<", "0.01`"}]}], ",", 
   RowBox[{"Print", "[", "\<\"F is correct.\"\>", "]"}], ",", 
   RowBox[{"Print", "[", "\<\"F is incorrect.\"\>", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.809965187012276*^9, 3.8099654914503336`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"14b9eb66-bad4-41b7-aadf-d0cf5ada3d09"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part D", "Section",
 CellChangeTimes->{{3.4501379520625*^9, 3.450137958125*^9}, {
  3.7977946067755513`*^9, 3.7977946070875697`*^9}, {3.7977957020721035`*^9, 
  3.7977957024561553`*^9}},ExpressionUUID->"5928966f-87b2-430c-9312-\
c22d747681f2"],

Cell["\<\
Since the force on our test charge is equal to minus the gradient of Utot \
with respect to the coordinates of the test charge, any terms in Utot that do \
not contain the coordinates of the test charge will not contribute to the \
force on the test charge. Earlier, you calculated the total potential energy \
as Utot = U + Uq, where U is the potential energy of just the 8 charges on \
the cube (and is therefore completely independent of the coordinates of the \
test charge q), and Uq is the additional potential energy caused by the \
presence of the test charge q. Demonstrate that calculating the force on the \
test charge using just Uq is consistent with your previous answer.\
\>", "Text",
 CellChangeTimes->{{3.797795712668042*^9, 
  3.7977959165455947`*^9}},ExpressionUUID->"4225acb8-5235-4445-ae4d-\
1da19e72f1d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"newUq", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Uq", ",", 
       RowBox[{"Assumptions", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "\[Element]", "Reals"}], ",", 
          RowBox[{"y", "\[Element]", "Reals"}], ",", 
          RowBox[{"z", "\[Element]", "Reals"}]}], "}"}]}]}], "]"}]}], ";"}], 
   " ", 
   RowBox[{"(*", " ", 
    RowBox[{"cleaning", " ", "things", " ", "up"}], " ", "*)"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"newUq", "=", "Uq"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"F1", "=", 
     RowBox[{"-", 
      RowBox[{"Grad", "[", 
       RowBox[{"newUq", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Fq", "[", 
      RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], "=", "F1"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Fq234", "=", 
    RowBox[{"Fq", "[", 
     RowBox[{"2", ",", "3", ",", "4"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7977959232365913`*^9, 3.7977959722212152`*^9}, {
   3.7977960650812817`*^9, 3.7977961125623827`*^9}, 3.7977966412100496`*^9, {
   3.797796718240985*^9, 3.797796774227045*^9}, {3.797797115697817*^9, 
   3.7977971205697927`*^9}, {3.809965258774703*^9, 3.809965259950831*^9}, {
   3.809965297785219*^9, 3.809965298738598*^9}, {3.8099655234091105`*^9, 
   3.8099655372339215`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"4f046456-6f9f-480a-9b89-fa87a106f689"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "248.12399999999997`"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "3"}], "]"}]}], 
       RowBox[{"250", " ", 
        SqrtBox["2"]}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "3"}], "]"}]}], 
       RowBox[{"22", " ", 
        SqrtBox["22"]}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "3"}], "]"}]}], 
       RowBox[{"34", " ", 
        SqrtBox["34"]}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "3"}], "]"}]}], 
       RowBox[{"38", " ", 
        SqrtBox["38"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "1"}], "]"}], 
       RowBox[{"14", " ", 
        SqrtBox["14"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "1"}], "]"}], 
       RowBox[{"26", " ", 
        SqrtBox["26"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "1"}], "]"}], 
       RowBox[{"30", " ", 
        SqrtBox["30"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "1"}], "]"}], 
       RowBox[{"42", " ", 
        SqrtBox["42"]}]]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", "248.12399999999997`"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       FractionBox["1", "21"], " ", 
       SqrtBox[
        FractionBox["2", "21"]], " ", 
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "4"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "17"], " ", 
       SqrtBox[
        FractionBox["2", "17"]], " ", 
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "4"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "13"], " ", 
       SqrtBox[
        FractionBox["2", "13"]], " ", 
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "4"}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "125"], " ", 
       SqrtBox["2"], " ", 
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "4"}], "]"}]}], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "2"}], "]"}], 
       RowBox[{"7", " ", 
        SqrtBox["14"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "2"}], "]"}], 
       RowBox[{"11", " ", 
        SqrtBox["22"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "2"}], "]"}], 
       RowBox[{"15", " ", 
        SqrtBox["30"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "2"}], "]"}], 
       RowBox[{"19", " ", 
        SqrtBox["38"]}]]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", "248.12399999999997`"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "5"}], "]"}], 
       RowBox[{"50", " ", 
        SqrtBox["2"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", "5"}], "]"}], 
       RowBox[{"6", " ", 
        SqrtBox["30"]}]], "+", 
      FractionBox[
       RowBox[{"5", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "5"}], "]"}]}], 
       RowBox[{"38", " ", 
        SqrtBox["38"]}]], "+", 
      FractionBox[
       RowBox[{"5", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "5"}], "]"}]}], 
       RowBox[{"42", " ", 
        SqrtBox["42"]}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "3"}], "]"}]}], 
       RowBox[{"14", " ", 
        SqrtBox["14"]}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "3"}], "]"}]}], 
       RowBox[{"22", " ", 
        SqrtBox["22"]}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "3"}], "]"}]}], 
       RowBox[{"26", " ", 
        SqrtBox["26"]}]], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{
         SuperscriptBox["Abs", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"-", "3"}], "]"}]}], 
       RowBox[{"34", " ", 
        SqrtBox["34"]}]]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8099655381575456`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"5d56275f-f68b-4196-8153-e824dcc6a855"]
}, Open  ]],

Cell[TextData[StyleBox["******It appears that the assumptions option causes \
the evaluation to go on for an indefinite period of time, at least on my \
computer.*****\nBut we can see that the Grad of just Uq matches the Grad of \
Utot",
 FontColor->RGBColor[1, 0, 1]]], "Text",
 CellChangeTimes->{{3.809965386139968*^9, 3.8099654177919817`*^9}, {
  3.809965552921392*^9, 3.8099655578169427`*^9}, {3.80996562513617*^9, 
  3.8099656398717623`*^9}},ExpressionUUID->"4bb7e9e0-45ce-4084-8d6a-\
410a5116dc4c"],

Cell[CellGroupData[{

Cell["Solution", "Subsection",
 CellChangeTimes->{{3.443986862282744*^9, 
  3.443986873017394*^9}},ExpressionUUID->"b5b7552d-3c4f-45f3-89e2-\
53b53cb10667"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Fq234$", "=", 
   RowBox[{"{", 
    RowBox[{
    "25.281354656338923", ",", "38.36714751427157", ",", 
     "51.70647124860129"}], "}"}]}], ";"}], "\n", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"Fq234$", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "-", 
       RowBox[{"Fq234", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<", ".01"}], "&&", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"Fq234$", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "-", 
       RowBox[{"Fq234", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "<", ".01"}], "&&", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"Fq234$", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "-", 
       RowBox[{"Fq234", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "<", ".01"}]}], ",", 
   RowBox[{"Print", "[", "\"\<F is correct.\>\"", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<F is incorrect.\>\"", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.443986874579934*^9, 3.443986889783448*^9}, {
   3.4451887840418043`*^9, 3.4451887863542895`*^9}, {3.446572761677229*^9, 
   3.446572921786604*^9}, {3.45014120753125*^9, 3.450141214546875*^9}, {
   3.450141262890625*^9, 3.4501412965*^9}, 3.7977967924860306`*^9},
 CellLabel->"In[39]:=",ExpressionUUID->"de8f61ac-2fb4-42de-94f1-4848368f6eb6"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"25.281354656338923`", "\[VeryThinSpace]", "+", 
       RowBox[{"248.12399999999997`", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "3"}], "]"}]}], 
           RowBox[{"250", " ", 
            SqrtBox["2"]}]], "+", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "3"}], "]"}]}], 
           RowBox[{"22", " ", 
            SqrtBox["22"]}]], "+", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "3"}], "]"}]}], 
           RowBox[{"34", " ", 
            SqrtBox["34"]}]], "+", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "3"}], "]"}]}], 
           RowBox[{"38", " ", 
            SqrtBox["38"]}]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "1"}], "]"}], 
           RowBox[{"14", " ", 
            SqrtBox["14"]}]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "1"}], "]"}], 
           RowBox[{"26", " ", 
            SqrtBox["26"]}]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "1"}], "]"}], 
           RowBox[{"30", " ", 
            SqrtBox["30"]}]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "1"}], "]"}], 
           RowBox[{"42", " ", 
            SqrtBox["42"]}]]}], ")"}]}]}], "]"}], "<", "0.01`"}], "&&", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"38.36714751427157`", "\[VeryThinSpace]", "+", 
       RowBox[{"248.12399999999997`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "21"], " ", 
           SqrtBox[
            FractionBox["2", "21"]], " ", 
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "4"}], "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "17"], " ", 
           SqrtBox[
            FractionBox["2", "17"]], " ", 
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "4"}], "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "13"], " ", 
           SqrtBox[
            FractionBox["2", "13"]], " ", 
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "4"}], "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "125"], " ", 
           SqrtBox["2"], " ", 
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "4"}], "]"}]}], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "2"}], "]"}], 
           RowBox[{"7", " ", 
            SqrtBox["14"]}]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "2"}], "]"}], 
           RowBox[{"11", " ", 
            SqrtBox["22"]}]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "2"}], "]"}], 
           RowBox[{"15", " ", 
            SqrtBox["30"]}]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "2"}], "]"}], 
           RowBox[{"19", " ", 
            SqrtBox["38"]}]]}], ")"}]}]}], "]"}], "<", "0.01`"}], "&&", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"51.70647124860129`", "\[VeryThinSpace]", "+", 
       RowBox[{"248.12399999999997`", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "5"}], "]"}], 
           RowBox[{"50", " ", 
            SqrtBox["2"]}]], "+", 
          FractionBox[
           RowBox[{
            SuperscriptBox["Abs", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"-", "5"}], "]"}], 
           RowBox[{"6", " ", 
            SqrtBox["30"]}]], "+", 
          FractionBox[
           RowBox[{"5", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "5"}], "]"}]}], 
           RowBox[{"38", " ", 
            SqrtBox["38"]}]], "+", 
          FractionBox[
           RowBox[{"5", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "5"}], "]"}]}], 
           RowBox[{"42", " ", 
            SqrtBox["42"]}]], "+", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "3"}], "]"}]}], 
           RowBox[{"14", " ", 
            SqrtBox["14"]}]], "+", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "3"}], "]"}]}], 
           RowBox[{"22", " ", 
            SqrtBox["22"]}]], "+", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "3"}], "]"}]}], 
           RowBox[{"26", " ", 
            SqrtBox["26"]}]], "+", 
          FractionBox[
           RowBox[{"3", " ", 
            RowBox[{
             SuperscriptBox["Abs", "\[Prime]",
              MultilineFunction->None], "[", 
             RowBox[{"-", "3"}], "]"}]}], 
           RowBox[{"34", " ", 
            SqrtBox["34"]}]]}], ")"}]}]}], "]"}], "<", "0.01`"}]}], ",", 
   RowBox[{"Print", "[", "\<\"F is correct.\"\>", "]"}], ",", 
   RowBox[{"Print", "[", "\<\"F is incorrect.\"\>", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.809965542136696*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"d77527b9-d15d-4af8-97d8-65c318ae50b6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Written Problems", "Section",
 CellChangeTimes->{{3.7977974021601896`*^9, 
  3.797797404112193*^9}},ExpressionUUID->"3a3b8d04-5c5e-4a8d-ae0f-\
8e543b1e9332"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
8X6x5Uyh1qCwmi645CGNGfKMqm/1I8lsCUcuJWdN4Uwe7rfURmYkrUammPHc
I9ko+PHX8i/ja+2EgeUn1HiPjGLUVFffl0tbum+UOxRq4dg0KMSgYabQok+N
2yXkbo1qVdNaxxXzD5mGG1Sr0BaNdUNvTX2/fvmU7+o0fti2jHYDPbE6taZl
uLq+ZZHkbchm1do+lRNWtji9fY/DQLkhbQ2XJBanV6rniJTpHfNirJLgpP02
Msz096/r3is6DBQCRhp0b1Ycbf4q/EmSiJ9TF6bfKjfFUy/QYhPfk1rHCeeK
2YvV4vx4/EnJdUy0sCgidW9gRYoh79QBw07HrVRR2YgSIwByryk/ycKs0uFw
WJQ0V6ffFxfv0t+XVbVmtaOuSKAaKKy7c+/Rmipknq2/uaS64NtTizMmj/NZ
fVZf5/FGVxjIt2RYGebb+zQLFQndFf7pqN50bi0gb+ZS+kuaqvyowuj54RNV
JJ0RtAgEeMGKYw75pVr/ZM3lVa5M8KIOGbkuLFY2+zmdLpecC/XLPITV1fT4
Z+ZsOFVo1K0H1mxw8Wu1/FK0LP3vzNEnyiz/IUJC1KYwrZVDCbtwHYd310h0
k72dr6rk3wIaM6zBffpWWZ7OC2atGLKud7sBZR1pl5VOtJUL7XI2mVjnN1xh
oLhC3bxzh4DOn+xIoS/joH8sZ+8mpipeLS/fJtR5XnGDtnG5BoncNCiOGOT9
PRoOnxT9nWuDzOV7nf7xQxlnQQOw7NYyus+19OjZ8Il6At3tobXXcdpvK8PP
lo21g6BkNQ7NUIbSxkvY88amjjBPLKLW0gNnUUBmOk/GudUIr69SJLmakMVj
py+eD39SDxEHzUJH21Z32WL0ttel32aWf0z4sSB6R5xiUBrk5CfJZYBNR1e5
YVpWQ9fdqbUzRqqZzajT7mUpmKa12kpYBG0erPyj6xCE8EJN+bSXsMOfdFQw
6OfqONWNrFIX7QX2lgPHk+a31Ezge+WQVFuYvEi9HNdm4R11dEq19ery0846
xglAObegNsI/y9GkRMHeWisDkMS8BDyku8X6SzlVyEZBQHNpWwplU7iviuBN
5AgDyyxnAVayzqez1vjlhJy/ivp0cG8qvpDem6XMG7Pl+VKvKXlZeb58FsXz
3+ih74AqO5qcV7d+nNu1yHkzZ3Y+pkDcX1RaRhcz9foSpd1UFaqpGkXCzbll
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
jO6UpPQSs+saIOdJcDoMdN5REojMCzQYJTdM5c6m4+HweV6ILJZZL/96k3z9
uYnVGyRS81OoHVFk51ZvaEp12vu3o2dWGKjcPce1Xz4Ah2fTyXPlA0ZSX6KR
6flJmeCI70Jk2ukk1a35N9Og7Mfy+n3yRUkVJQLYdHieTT6vtBrZaIPRPesb
o+Sjt7gLX4gFJukAPPudBZul1+hQD0TIlfNENh0GMvUVvGmBnnAOlsNiA2rQ
Fmul1K7RIF545HhnqJx47xHblOox/Rnnni7F+tvtVDJnuGXdAkAljBFXMtLX
dzfvRmc7uefakWVChTlOwmET+fatPQ/qqkyVpRapfH55PfnVf1WEsvViOLkS
80hsUitftCN28ts6kHeKFrCTPeW+FNV4Tq4OeFBeUqnFmHMunFiu+cmdFeIH
xHUY2pdLl2lk8lX5k+xz35T7FFiDKxZQr05xANPommJSXXl5apCuRfHKN6EZ
1iTs7gPupbdzkN/1zUApMrHMJR96fLwcT/76djm95K3t3xEqgi8PRZuo+xmC
L75sU1dESz6l3OIkP2O1SMaiIWzpktPvSkzBzhOZtVYan6iy6j0aGSrkGDEW
sHgeqgxVaxWKTt/9pfxd681Ca+nvL7mZ6NFw8sk7MPX5GVke9bW82PF6g8Yh
3mZHKCsmBZk/+d0TDqtkxf53kdZJXctwNb6zf3Xrw0v7P0rOKKVTDPuitJWY
sbH6SC2DmAA5IiU/VMlv9Om7kFmCYpsiKxUXP3959A8pwzxcrpSfa+9XyqOZ
+5IbgvTbZt0DNlQO7RvevSi2MrWKyVzRBNrtHtoSpEGInCjPkGpfHa2eky9i
E4hnrlURAL2dPSqd/3LrugWASGgD6p7yWs7Oz2e7iAFzgk695XODXDm49Axz
S1J36NWo/6TK1kfVEvm3X2Z6L0mS4mIjMfZH08QZNYgrOcwqCL2nTg6rBCg0
9p7yq2PtXamVWiyfMu7LKhcbKihYq9KbmgajyYt+eTS0vlt84k1dWCCZCYel
6qJsaDb/Rv1dnX/jmdKFaOVJ6jJf3TR1JA7DXb7xMu/TrZ7D3QSvKVvwTB2G
3DJTqAutb0eobToJ6VSu/RXecv/FZDSIWTltU1dEST6ZXSdC8l0ZXC0BS0tV
3FpFaSFt47JETra7xoh2skC+PQ1SyPcdT/7zb6LA6Vd+UBVx/V0GQSyDpU9k
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
/W1yfpE1KfdnzFK1FAbKrc798/ntVXByGO3rtc8GBipV90dDe6d+20Ypdj/K
vE06dE+lV1ks0V5dvx2QvmL4iOPxl/FkAyli5JQXEcL7UsT4hd9bO6Oc1c1Q
U0OsJAzU8nN+J7dhBItToCouRewD70/+81ZLDmOUx5u1SflV7TCwKeek5sAs
+flm/e3y4q9MziMG1KaSIdBMSRNhYFPS3lQYyM77jMeTF33W4lWSPwCwEwoN
aV6sLI9vK85MsTCUDbV8Fz9/+n45TybDE0V1Nzal33/xYuixNYavRWdt8myu
CIhNSkoS3ixpMYYO873DMFA51JNdkUxcjSoy27jzqGuTco6uKS74jjHxYn3h
xdvfT8fqdSGizP1+37XphQ4Dk6HthdoZxV07vloNA1kx6KuXjJLIy3bpKzLD
NgKpmehSs5XMlQS22bGdk1dKD5Iypr5BP+i6zmWfjRfH9iRRtcbDwCL30fPh
L5Zb6KepTKGhStX90bDeqdS2jodDFLsfGa389vbtaGxeIpA1U7//lN45Fjzi
HCNCNBcZBgbuCi68WXMaX975qDRdmPBrtascBpaZoSbEQP0ndxgoV98GL0ZD
chtGqDgFquJy5CnyX4bPHxM3a8j7Op13uOhJ0uJUrk0V54RUdzUHpvrz3lBc
f8f/LQ1bfmMjNGZAbQIMQYkpiW5eW+E3Ju0NhYGZb2PdHwrAviATeiuGLNt0
Pf5t+Fw9v8bUskzXT6Bn6/Jccpf/u+vewAKpWMgN53L8ynumVovZdDQcDmUa
ybQab5Iv2WgVmyvYLTDr29nZ70IpuS9sCi3JJrhZMt1izcsxxfLU2lpjN5mn
SUNq4Xs1de+D+u/SfTV2p7DvGltflMuYeNfk5w6GZ9PJc6VhAhOgybalsoL7
OsVzb6A1Y8lcTSX+csqne4taamjPr5flhsB1byDbR9Q7md7oPVDcYcQ3nORn
Ik7H09dqa4ryeESdohj+hOTqJZQypntovjdIwZDbk8Qx2Lt0sI6Hw+d90YOp
q/Am+ZpVIVR1+J0xIgFgEK6vyxNGZqkoxyBOqbo/GtQ7MW3rFI9gxV6K40pu
ZYcbHZFFjDi5A42PiHVW49FJqvrF+38sr98nX+7UmCUP69Khej7xyYPcGnGk
pCvJ1Nf4xclztStYQBEk/N7aceqboUbEoHz0ac84g+swcQpTxUFQ9z4oyJlM
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
ZTKwMcUgfVVCi1OF4bPx3nGgG+smR7q/HQLHaanYWAOEdRLRiUVNtVFTPUwj
w8Dgpvazzm+5ZK0zfHOdNU6mss6nf1XM9OeWagcxPlXjpfVck0QTlQGYXSHK
EgkOzzOlkg+r84vPLeVeM7Sx+vdYWyyxOjR/DSV+hdpSU4PKFjPCwNJipD2b
alzFFvRHU3VMllsKD5p+SzvnanHrCANd5iZENQVaf8O4PMq18r34p0Sx2qQc
NmIQ1erkJb8SKeP7owvaRpCwKtvX5vL38+7OTOeP1ez83KOpSvt3a/5YqKWu
5HvwaqZlTpSSeETCepXhG8RdYrhl8QAxFA5E7bkO/qrgcNIXBrIEdFJiKR01
TG7NS4Ls8MouDH9VrpBzk14MajXfXSq0f0jTcDy5/i4X747U3bOrm+npQKqC
1Hm4YOUJSZ3nnrRU1E6eHkqreO8kMV+dTeI9kwZuvby+YCXvv5zROqpKay/N
O3Ru5QTakVhK5qXlrshGCXjVc6PyXpIj+saxbIv+40JZMVXGv2M4Hty5spqQ
1Ui6cIqqN6cpyDeopoQy9+xtqSq8YppQKistUZJ1iVWpfIYXu/HVQFa2VDl/
EjIgfCdVigJkQMjPY+VVCb+Gxsw0Xmf4MDxLVM2OdOPdRjusiCEzmC7McRok
Nuo0kb5Dg4sHrQSyCb3B8PyvGpaypdVAoyPy/z2ZXl+Ne9G3Xm6B/SqtJVTZ
/76YXv+RZeFuY93WoY3jdZ27Lhl6rtrstkr2dyr/wGo2OpYWZ6Mb1mLICPQ3
8Dc/EgOnsH3WEHPZGg9sjUnGnrnhGzwbPn90pL3IZW7CVFOo9c97RFU+rIOM
Oxfola9GDKJRnflPIv56Nl38KG3VXAT52p0+JPM0F4X7IT2NEOfW3b/b9se8
lrqa7/FdrvOqgytMJNjWtYGMwmSrBqeF3Kp4gHiK+Yf6S96RfoI7DOTXUWk+
mMxjI2VYrmOyl7z8+GF0IqYyitGqO3IiTjG8u/w+rAwRlcjLLNi7R69fj97d
3P3Ir8yQopsleDk2lYB8VanEloeBr5OPZ6NzvoxSmEJjvSMNmvqmcZTnPW1f
1CKstYvNwzlPRpNXo9Sr5/c/Mr+aTCIhukkriXwb1Urrm+nTM1EY/SqowDCQ
i5ZuI3ifGt4I9QZ9SdKUZ94RRlL9Is+S2BcdL58RxW42DBThp7EtXEpR/3ye
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
RXsAU/bmQBi4PuKKhjBwvWy9iXPI10F5UghhIMJAALYNneHqbxEGykU6ezdQ
WuCBzOhlUOc6+jsUKjCJVphP3jYQBqZJqkz/jVEO0ja7CpiyNwfCwDWRVDSE
gWtkF0ycQ6YOmtsiCAMRBgKQxi6VsqzryYjs/YPh+O01kdNyMZ8VJsP/XqwO
gnxUbWnK/y7qbCqH4+l/ON/VGP8/XULO/fXBaFKEP52OKezMwKLkw8cgz2cO
MgzkTNZy2469Z8cOA3WKFS8areC8r5WBX47mn7PTfwQ/Wg1NYfIwH9S9/0A9
StS6UslOhyfFfGF94F1QmscdMlHVKDHCAlkVyHqzhgpKel4wslu3k6jQYbrc
SdunJhTPQ7ufX8qGeFqTfPLKS1AWEaH7myKtMtzGCLxB3Ku18jfrY1aKWoem
ydQt0iRrd0o5+WBErnlweRaGmLKbertPXYj0gHy1qp5L9dXF7DS8eMSRW6ew
l5VnuBys86uYsbVG8+tidnYWilO2ygg8h8rqInoIG2VMk2F5rIaXEvVuNl8E
T/M/ORidXc5vs8PAKt38r66c/E41PneYgndPK1qeXqtndprd3K9HR012E3dQ
uP3pTf3CMzmQXzHZsG1pJ+egmpSoN5q42Cz23z3Y89yecZ4Z/2mnGwuVvM75
uDKVXhjIk9uWpkPPBIHpSJoy328sbu7dR154jSFc0Fyr1RQGNvdArwIMwCbw
ym99MetjGq/M9/J2dnJYie7ZH7USGYNjhTZOJbj9ydVf9mNlZmPpsLl2zNYO
Koir/eF6Zl/o/601zNt0i4eB1RLZc218lndX5+LnuEUcKITpOJzOGyfbKn3o
YG/wY3HL/C12GGglgh6MZ2bAWO/71/Xk2WD0+kr8pbSw57X/5v9oPRsaa6Ym
Ry0hfq2rW72BpVqVKPdmhuzWZN3RhNVD6rXcchqRtlxnbW3MmGpNkW6SbZPt
hxig6pTvvu6ileOhLYMGu2G+2cijh16E8M0SSKpMbmNk0RMz3DrG9NuWsWIc
FGl6CC2JaEbYPP93WRbGfmtXkOR6SOm+Fr5H2qcuUFTa/UQ12zzfN3FNchsU
9gpdVm+pp04jX5rFK++ZnhfaWmVWjkN1+6UeILdBjgXmyxjX8txMXxzqwEd/
bO8wyNkldE27l/U7Hj4fHR0wJVnLmzXL6ODL+bn8YWrq2+RuYJNe13Sc3aTq
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
aNbV9QnV3Pe1kwLVDzIXUlSMybKEmwoDO0f0+kyafM5yfn5cndr1EpJQJ0IT
r5m06r4YVx3LSQ4j6CkMlDn97GTdaz4UmhkGci2MEaT/iudVsD/Zhy40YOcf
EOjbN1ly2yK+sPMp1ZgqLd1VJtOh4spYTaq35beaLU+fYWBETtTOxTbuBvYw
u6ntbOeUo7qa7RyeZw5Ki/7sLQzsKzlPevja2vMWPbNq0EGS/sLAzZkOThhI
N0b/EG83MDMM5PUAwkCwm3AmUCXVKr2Ve+xhA3cDdemcnGQaxKHQ1KXv/5xe
MO8G1rmym7Osa/6cTT+0qorODAPNZQ0zcbR7X8cl0yvDuhwbYzd2jWGgMKE6
TItlZy0/8OsFZ6J0FrqtXKDO7id1IjTxmg1WXR1cqXOrVi5WRn7aPsJAVY7B
7botCgMzLIxzN1AdjEwlFuhFFzh4waBeT+DLbev4wg0GpXR1VxmOQ6Vz9fBl
zILubaUv0fvXyrTSnrN8NC8M1FY0MtZq9zmZatLtkg0fCu04u8ntbB2Gq1ot
fupd5qC06M/eDoV21DJmGNjWnrfomdUjhYGbNR0VjOSBtB8S5mXK/enUoVBe
DyAMBLtJKgz08llJo+dL7OZSxOzFjn4tbz+cf0zeNG94wsNtcXbOOnH6cDd7
NcqIAbvACgOJrcAV/31LUznx6iaYynpyUrPCTDILx/LLxfkf0vvqPwxUpzKU
h2OubPv5uGRjitNfebGVSutRuo6lrX+hPShzFf3y6s0hObO3DAN14tNnk+s5
OzmMoHsYqGY0/xHbEwbmWBhXkHS2c0JE+9SFGP8sTt66H9AVMaT9zJHbnPji
7uLET3ir85BLj6izyjAu+Ejjw5exHizP8vbi9Lx+d5OjL54tk5sihh7rMHvG
FoWBPc1u1eni8elElz+jr5pyByW/P3vwonvRMnYY2NKe5/fM6pHCwDWbDiLz
JyNFTDoTVJgJttlquX+MpYhp7gGEgWA3oZeeaoSSak2JHA6MJBljhYHU4i2p
SnZ2soORqnQjG1BOXsevrNm/8QnutZ3l3XUxGYX3vwiqsjWH0YSEd58+9Rsd
MsLAqmSw2HfwktUw37c0lT8GQ698OaeemnENims7JeHd1dnLE324ZV2ZQq3z
fk5aPOcaVP1mx8QZThp9LvTlmzfjEz8jetXI4fBZ8txOLKNCIiuLupN4NDoa
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
AAAAAAAAAAAAAAAAAAAAwHfK/wPCxuU5
    "], {{0, 534}, {1197, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1197, 534},
  PlotRange->{{0, 1197}, {0, 534}}]], "Input",ExpressionUUID->"638e9928-5b22-\
4089-83d0-69faeb0f5470"],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8099670530043106`*^9, 3.809967068022628*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"0a25d0ee-0e84-4cbd-893d-6e7b91ae857b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r1", "=", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "y1", ",", "z1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", 
   RowBox[{"{", 
    RowBox[{"x2", ",", "y2", ",", "z2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r3", "=", 
   RowBox[{"{", 
    RowBox[{"x3", ",", "y3", ",", "z3"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.809967107110131*^9, 3.809967128338009*^9}, {
  3.809967160930766*^9, 3.8099672092513447`*^9}, {3.8099678798387203`*^9, 
  3.8099679097091427`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5c4c6652-f983-4c11-a8ac-c33ac41844ee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Uext", "=", 
   RowBox[{
    RowBox[{"m1", "*", "g", "*", "z1"}], "+", 
    RowBox[{"m2", "*", "g", "*", "z2"}], "+", 
    RowBox[{"m3", "*", "g", "*", "z3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Uint", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"k", "*", "q1", "*", "q2"}], ")"}], "/", 
     RowBox[{"Norm", "[", 
      RowBox[{"r1", "-", "r2"}], "]"}]}], ")"}], "+", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"k", "*", "q1", "*", "q3"}], ")"}], "/", 
     RowBox[{"Norm", "[", 
      RowBox[{"r1", "-", "r3"}], "]"}]}], ")"}], "+", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"k", "*", "q2", "*", "q3"}], ")"}], "/", 
     RowBox[{"Norm", "[", 
      RowBox[{"r2", "-", "r3"}], "]"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Utot", "=", 
   RowBox[{"Uext", "+", "Uint"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"F2", "=", 
  RowBox[{"-", 
   RowBox[{"Grad", "[", 
    RowBox[{"Utot", ",", 
     RowBox[{"{", 
      RowBox[{"x2", ",", "y2", ",", "z2"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1", "=", 
   RowBox[{"a", "/", "2"}]}], ";", " ", 
  RowBox[{"x2", "=", "0"}], ";", " ", 
  RowBox[{"x3", "=", 
   RowBox[{
    RowBox[{"-", "a"}], "/", "2"}]}], ";", " ", 
  RowBox[{"y1", "=", "0"}], ";", " ", 
  RowBox[{"y2", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sqrt", "[", "3", "]"}], "*", "a"}], ")"}], "/", "2"}]}], ";", 
  " ", 
  RowBox[{"y3", "=", "0"}], ";", " ", 
  RowBox[{"z1", "=", "0"}], ";", " ", 
  RowBox[{"z2", "=", "0"}], ";", " ", 
  RowBox[{"z3", "=", "0"}], ";"}], "\[IndentingNewLine]", "F2"}], "Input",
 CellChangeTimes->{{3.8099674686697073`*^9, 3.8099675997379484`*^9}, {
  3.809967691595558*^9, 3.8099676960480423`*^9}, {3.809967946157364*^9, 
  3.809968022116184*^9}, {3.8099681277797823`*^9, 3.8099681289050894`*^9}, {
  3.8099681624811587`*^9, 3.80996829071417*^9}, {3.809968837680008*^9, 
  3.809968868275814*^9}, {3.8099693185930853`*^9, 3.809969323668871*^9}, {
  3.809969384703396*^9, 3.8099694121437206`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"9d7f6eb0-a6fe-42a8-bc08-1e8a6e1cc4f5"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"k", " ", "q1", " ", "q2"}], 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"x1", "-", "x2"}], "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"y1", "-", "y2"}], "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"z1", "-", "z2"}], "]"}], "2"]}]]], "+", 
  FractionBox[
   RowBox[{"k", " ", "q1", " ", "q3"}], 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"x1", "-", "x3"}], "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"y1", "-", "y3"}], "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"z1", "-", "z3"}], "]"}], "2"]}]]], "+", 
  FractionBox[
   RowBox[{"k", " ", "q2", " ", "q3"}], 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"x2", "-", "x3"}], "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"y2", "-", "y3"}], "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{"z2", "-", "z3"}], "]"}], "2"]}]]]}]], "Output",
 CellChangeTimes->{{3.8099682656658373`*^9, 3.8099683011096992`*^9}, {
   3.8099688439353256`*^9, 3.809968874742979*^9}, 3.809969324106203*^9, {
   3.809969385078504*^9, 3.8099694194388175`*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"b68351fe-fa3d-417d-987a-0da26ae5986a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"k", " ", "q1", " ", "q2", " ", 
       RowBox[{"Abs", "[", 
        RowBox[{"x1", "-", "x2"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"x1", "-", "x2"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"x1", "-", "x2"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"y1", "-", "y2"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"z1", "-", "z2"}], "]"}], "2"]}], ")"}], 
       RowBox[{"3", "/", "2"}]]]}], "+", 
    FractionBox[
     RowBox[{"k", " ", "q2", " ", "q3", " ", 
      RowBox[{"Abs", "[", 
       RowBox[{"x2", "-", "x3"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["Abs", "\[Prime]",
        MultilineFunction->None], "[", 
       RowBox[{"x2", "-", "x3"}], "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"x2", "-", "x3"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"y2", "-", "y3"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"z2", "-", "z3"}], "]"}], "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"k", " ", "q1", " ", "q2", " ", 
       RowBox[{"Abs", "[", 
        RowBox[{"y1", "-", "y2"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"y1", "-", "y2"}], "]"}]}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"x1", "-", "x2"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"y1", "-", "y2"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"z1", "-", "z2"}], "]"}], "2"]}], ")"}], 
       RowBox[{"3", "/", "2"}]]]}], "+", 
    FractionBox[
     RowBox[{"k", " ", "q2", " ", "q3", " ", 
      RowBox[{"Abs", "[", 
       RowBox[{"y2", "-", "y3"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["Abs", "\[Prime]",
        MultilineFunction->None], "[", 
       RowBox[{"y2", "-", "y3"}], "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"x2", "-", "x3"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"y2", "-", "y3"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"z2", "-", "z3"}], "]"}], "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "g"}], " ", "m2"}], "-", 
    FractionBox[
     RowBox[{"k", " ", "q1", " ", "q2", " ", 
      RowBox[{"Abs", "[", 
       RowBox[{"z1", "-", "z2"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["Abs", "\[Prime]",
        MultilineFunction->None], "[", 
       RowBox[{"z1", "-", "z2"}], "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"x1", "-", "x2"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"y1", "-", "y2"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"z1", "-", "z2"}], "]"}], "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]], "+", 
    FractionBox[
     RowBox[{"k", " ", "q2", " ", "q3", " ", 
      RowBox[{"Abs", "[", 
       RowBox[{"z2", "-", "z3"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["Abs", "\[Prime]",
        MultilineFunction->None], "[", 
       RowBox[{"z2", "-", "z3"}], "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"x2", "-", "x3"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"y2", "-", "y3"}], "]"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"z2", "-", "z3"}], "]"}], "2"]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8099682656658373`*^9, 3.8099683011096992`*^9}, {
   3.8099688439353256`*^9, 3.809968874742979*^9}, 3.809969324106203*^9, {
   3.809969385078504*^9, 3.809969419454458*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"f3621313-aa6b-42e7-ab8c-47fd3e1bf34c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"k", " ", "q1", " ", "q2", " ", 
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        FractionBox["a", "2"], "]"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"Abs", "[", "a", "]"}], "2"]}]]}], "+", 
    FractionBox[
     RowBox[{"k", " ", "q2", " ", "q3", " ", 
      RowBox[{
       SuperscriptBox["Abs", "\[Prime]",
        MultilineFunction->None], "[", 
       FractionBox["a", "2"], "]"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"Abs", "[", "a", "]"}], "2"]}]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SqrtBox["3"], " ", "k", " ", "q1", " ", "q2", " ", 
       RowBox[{
        SuperscriptBox["Abs", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SqrtBox["3"], " ", "a"}], "2"]}], "]"}]}], 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"Abs", "[", "a", "]"}], "2"]}]]}], "+", 
    FractionBox[
     RowBox[{
      SqrtBox["3"], " ", "k", " ", "q2", " ", "q3", " ", 
      RowBox[{
       SuperscriptBox["Abs", "\[Prime]",
        MultilineFunction->None], "[", 
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", "a"}], "2"], "]"}]}], 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"Abs", "[", "a", "]"}], "2"]}]]}], ",", 
   RowBox[{
    RowBox[{"-", "g"}], " ", "m2"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8099682656658373`*^9, 3.8099683011096992`*^9}, {
   3.8099688439353256`*^9, 3.809968874742979*^9}, 3.809969324106203*^9, {
   3.809969385078504*^9, 3.8099694194701023`*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"a2df1212-2388-4753-b9d7-b9c923ee8447"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "/", "2"}], ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r2", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sqrt", "[", "3", "]"}], "*", "a"}], ")"}], "/", "2"}], ",", 
     "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "a"}], "/", "2"}], ",", "0", ",", "0"}], "}"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"648a2bdc-5b3f-4bb0-87ce-3c39da91f371"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x1", "-", "x2"}], ")"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"y1", "-", "y2"}], ")"}], "^", "2"}]}], ")"}], "^", 
  RowBox[{"(", 
   RowBox[{"3", "/", "2"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.809969674750945*^9, 3.8099697069773493`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"7adc5993-ac92-4936-bf2c-88138b5dc3b5"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   SuperscriptBox["a", "2"], ")"}], 
  RowBox[{"3", "/", "2"}]]], "Output",
 CellChangeTimes->{3.809969707805664*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"2fd5c671-1677-448d-8f40-aac88a3c1bd2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1138.8, 582.6},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Creative"}, "PastelColor.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"d6cbcd78-13d5-4fb9-9b5a-457ebec9ae3f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 181, 3, 67, "Title",ExpressionUUID->"03504ee0-a335-4586-9728-cdabf76233d7"],
Cell[CellGroupData[{
Cell[773, 29, 161, 3, 60, "Section",ExpressionUUID->"fabcc29e-c76c-4637-84cf-29451a53a2db"],
Cell[937, 34, 492, 9, 31, "Text",ExpressionUUID->"2030b586-ab53-46ef-9831-88e869ddb7d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1466, 48, 151, 3, 60, "Section",ExpressionUUID->"7280d9ee-2085-462a-976c-5c78b25abe17"],
Cell[1620, 53, 343, 7, 31, "Text",ExpressionUUID->"dd678ecb-0900-4f6d-8973-8cdc5f5305be"],
Cell[1966, 62, 287, 4, 40, "Input",ExpressionUUID->"bb68a9d5-c885-4578-be60-d6d80632de4f"],
Cell[2256, 68, 594, 14, 61, "Input",ExpressionUUID->"ca104d47-14b0-48d0-a077-245513a6ab0b"],
Cell[2853, 84, 206, 4, 31, "Text",ExpressionUUID->"a0fb640f-f1f4-4d03-b397-fe11c5d7b244"],
Cell[3062, 90, 1355, 47, 178, "Input",ExpressionUUID->"4d14a0a7-d1bd-49f5-bb4f-1934a7b4407c"],
Cell[4420, 139, 1115, 23, 152, "Text",ExpressionUUID->"ffe1e58d-759e-43d0-aa69-c2cf1fe454cb"],
Cell[CellGroupData[{
Cell[5560, 166, 265, 5, 40, "Input",ExpressionUUID->"ccddb2d8-7934-4c36-ab0d-9cc7b5b66599"],
Cell[5828, 173, 272, 4, 40, "Output",ExpressionUUID->"286e9101-9ce2-4694-b9db-a47b2c49d085"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6137, 182, 1641, 41, 158, "Input",ExpressionUUID->"01769894-5089-40ea-a83b-96b442c91058"],
Cell[7781, 225, 317, 4, 40, "Output",ExpressionUUID->"dfa507d1-6bd7-4bad-8acb-4565e1fc82a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8135, 234, 156, 3, 37, "Subsection",ExpressionUUID->"dc49e7d9-0c17-495f-a2f3-e5457fc0aa1d"],
Cell[CellGroupData[{
Cell[8316, 241, 1352, 37, 63, "Input",ExpressionUUID->"dc0cb55f-113f-47cf-a360-7c369b7f430c"],
Cell[9671, 280, 316, 6, 21, "Print",ExpressionUUID->"21361063-2d4f-49d4-b7a5-7419b73fa9f0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10048, 293, 144, 2, 60, "Section",ExpressionUUID->"ea5975d0-0014-4b7f-94ea-eefd976d9d4e"],
Cell[10195, 297, 329, 6, 31, "Text",ExpressionUUID->"5adec4fd-78fd-464b-9802-af3c49b20aa6"],
Cell[10527, 305, 203, 2, 31, "Text",ExpressionUUID->"dd5d60bd-75b0-4eb5-8da7-1c9233f147b7"],
Cell[CellGroupData[{
Cell[10755, 311, 672, 13, 61, "Input",ExpressionUUID->"3e7eb6f7-720f-4fb2-a828-d763982ade3c"],
Cell[11430, 326, 295, 4, 40, "Output",ExpressionUUID->"aad047fd-cca3-49d8-8266-97a548f2eca4"],
Cell[11728, 332, 328, 6, 40, "Output",ExpressionUUID->"f29da850-9e35-441e-86f0-b049086df458"]
}, Open  ]],
Cell[12071, 341, 468, 9, 51, "Text",ExpressionUUID->"7698b2f3-0b83-4c11-9cac-928db027f071"],
Cell[CellGroupData[{
Cell[12564, 354, 2474, 63, 100, "Input",ExpressionUUID->"6190804c-4ed6-43df-b0f3-2ecd5e123e8c"],
Cell[15041, 419, 1315, 39, 59, "Output",ExpressionUUID->"489e684e-b8c5-40d2-9cbc-3d40885e42dd"]
}, Open  ]],
Cell[16371, 461, 275, 6, 31, "Text",ExpressionUUID->"78cba506-db67-4928-92a2-7daf9e03f6e1"],
Cell[CellGroupData[{
Cell[16671, 471, 236, 4, 37, "Subsection",ExpressionUUID->"0459841a-8b88-4eea-9832-8f60c9794a5e",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[16910, 477, 2886, 78, 121, "Input",ExpressionUUID->"b2f8b86f-8c76-4ea2-bae9-4d947a70b9d2",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[19833, 560, 319, 6, 21, "Print",ExpressionUUID->"ad0044b3-4af4-486e-9bb2-9b96832ce2c6"],
Cell[20155, 568, 321, 6, 21, "Print",ExpressionUUID->"f9648e80-3847-4f08-87e0-04df5e7bef83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20513, 579, 154, 3, 37, "Subsection",ExpressionUUID->"5056e659-98c2-4b53-9673-70fc031b7516"],
Cell[20670, 584, 764, 12, 51, "Text",ExpressionUUID->"dfff9873-becf-4326-b5c1-96d6be11713a"],
Cell[CellGroupData[{
Cell[21459, 600, 2154, 57, 100, "Input",ExpressionUUID->"98d8950c-d3e4-4f22-a4b5-24e4f7cec0b9"],
Cell[23616, 659, 129728, 2162, 322, "Output",ExpressionUUID->"594b09b4-d373-4830-8ee6-9a3fbc905905"],
Cell[153347, 2823, 1918, 38, 159, "Output",ExpressionUUID->"ad8dec09-2f71-490c-83ca-ea75d3279337"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155326, 2868, 199, 4, 60, "Section",ExpressionUUID->"6c577261-2de2-4919-bcd7-c3711dbc3e2c"],
Cell[155528, 2874, 453, 11, 32, "Text",ExpressionUUID->"6f68f8a6-bbd6-4414-93af-d1e81fc0263a"],
Cell[CellGroupData[{
Cell[156006, 2889, 175, 2, 40, "Input",ExpressionUUID->"75df6d26-b440-45a6-a8e4-e6e469d2c4d6"],
Cell[156184, 2893, 3738, 115, 187, "Output",ExpressionUUID->"b5813509-3118-4317-8bb9-93074eb73b8a"]
}, Open  ]],
Cell[159937, 3011, 1021, 18, 40, "Input",ExpressionUUID->"3116b64f-8c1f-49e9-97a2-8b29f72dd9d7"],
Cell[160961, 3031, 302, 6, 31, "Text",ExpressionUUID->"78da51f4-a48c-41b9-a8f4-68a8f30bccbc"],
Cell[161266, 3039, 399, 8, 40, "Input",ExpressionUUID->"a2f9d42e-fe83-4e1e-9d49-83b7201b7358"],
Cell[161668, 3049, 424, 11, 32, "Text",ExpressionUUID->"385498ed-7bbf-45aa-a045-4700456b5f8f"],
Cell[CellGroupData[{
Cell[162117, 3064, 449, 9, 61, "Input",ExpressionUUID->"d4293ddd-b6d6-4b18-b6d3-b9ba7be7ebc2"],
Cell[162569, 3075, 2066, 64, 62, "Output",ExpressionUUID->"aa928e62-4cb6-47b3-af19-bb7bdcdd5186"],
Cell[164638, 3141, 6229, 200, 157, "Output",ExpressionUUID->"e0be0b14-c708-45f5-8f46-19d28f43f604"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170904, 3346, 209, 4, 37, "Subsection",ExpressionUUID->"873e9732-0ad8-4500-aa5c-b539618a483a",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[171116, 3352, 1550, 39, 80, "Input",ExpressionUUID->"81cd6197-6a22-45e6-9c60-44edbfa48823",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[172681, 3394, 7282, 206, 187, "Output",ExpressionUUID->"14b9eb66-bad4-41b7-aadf-d0cf5ada3d09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180000, 3605, 249, 4, 60, "Section",ExpressionUUID->"5928966f-87b2-430c-9312-c22d747681f2"],
Cell[180252, 3611, 837, 13, 111, "Text",ExpressionUUID->"4225acb8-5235-4445-ae4d-1da19e72f1d8"],
Cell[CellGroupData[{
Cell[181114, 3628, 1599, 42, 119, "Input",ExpressionUUID->"4f046456-6f9f-480a-9b89-fa87a106f689"],
Cell[182716, 3672, 6031, 197, 157, "Output",ExpressionUUID->"5d56275f-f68b-4196-8153-e824dcc6a855"]
}, Open  ]],
Cell[188762, 3872, 504, 8, 51, "Text",ExpressionUUID->"4bb7e9e0-45ce-4084-8d6a-410a5116dc4c"],
Cell[CellGroupData[{
Cell[189291, 3884, 156, 3, 37, "Subsection",ExpressionUUID->"b5b7552d-3c4f-45f3-89e2-53b53cb10667"],
Cell[CellGroupData[{
Cell[189472, 3891, 1432, 37, 80, "Input",ExpressionUUID->"de8f61ac-2fb4-42de-94f1-4848368f6eb6"],
Cell[190907, 3930, 7258, 206, 187, "Output",ExpressionUUID->"d77527b9-d15d-4af8-97d8-65c318ae50b6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[198226, 4143, 163, 3, 60, "Section",ExpressionUUID->"3a3b8d04-5c5e-4a8d-ae0f-8e543b1e9332"],
Cell[198392, 4148, 95655, 1572, 426, "Input",ExpressionUUID->"638e9928-5b22-4089-83d0-69faeb0f5470"],
Cell[294050, 5722, 213, 3, 40, "Input",ExpressionUUID->"0a25d0ee-0e84-4cbd-893d-6e7b91ae857b"],
Cell[294266, 5727, 648, 18, 80, "Input",ExpressionUUID->"5c4c6652-f983-4c11-a8ac-c33ac41844ee"],
Cell[CellGroupData[{
Cell[294939, 5749, 2222, 61, 139, "Input",ExpressionUUID->"9d7f6eb0-a6fe-42a8-bc08-1e8a6e1cc4f5"],
Cell[297164, 5812, 1468, 44, 64, "Output",ExpressionUUID->"b68351fe-fa3d-417d-987a-0da26ae5986a"],
Cell[298635, 5858, 4748, 139, 156, "Output",ExpressionUUID->"f3621313-aa6b-42e7-ab8c-47fd3e1bf34c"],
Cell[303386, 5999, 1842, 55, 69, "Output",ExpressionUUID->"a2df1212-2388-4753-b9d7-b9c923ee8447"]
}, Open  ]],
Cell[305243, 6057, 668, 23, 80, "Input",ExpressionUUID->"648a2bdc-5b3f-4bb0-87ce-3c39da91f371"],
Cell[CellGroupData[{
Cell[305936, 6084, 450, 13, 40, "Input",ExpressionUUID->"7adc5993-ac92-4936-bf2c-88138b5dc3b5"],
Cell[306389, 6099, 243, 6, 44, "Output",ExpressionUUID->"2fd5c671-1677-448d-8f40-aac88a3c1bd2"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

